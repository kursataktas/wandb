# TODO: Merge this into root-level pyproject.toml file after figuring out how to fix/workaround errors like:
#
#   Error constructing plugin instance of PydanticPlugin
#
#   Traceback (most recent call last):
#     File "/.../.nox/mypy-report/bin/mypy", line 8, in <module>
#       sys.exit(console_entry())
#                ^^^^^^^^^^^^^^^
#     File "/.../.nox/mypy-report/lib/python3.12/site-packages/mypy/__main__.py", line 15, in console_entry
#       main()
#     File "mypy/main.py", line 103, in main
#     File "mypy/main.py", line 187, in run_build
#     File "mypy/build.py", line 193, in build
#     File "mypy/build.py", line 238, in _build
#     File "mypy/build.py", line 503, in load_plugins
#     File "mypy/build.py", line 484, in load_plugins_from_config
#     File "/.../.nox/mypy-report/lib/python3.12/site-packages/pydantic/mypy.py", line 134, in __init__
#       self.plugin_config = PydanticPluginConfig(options)
#                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#     File "/.../.nox/mypy-report/lib/python3.12/site-packages/pydantic/mypy.py", line 278, in __init__
#       setting = config.get(key, False)
#                 ^^^^^^^^^^
#   AttributeError: 'list' object has no attribute 'get'
#

[mypy]
plugins = pydantic.mypy

follow_imports = silent
disallow_any_generics = True
disallow_subclassing_any = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
warn_unused_ignores = True
warn_return_any = True
no_implicit_reexport = True
strict_equality = True
extra_checks = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True

[mypy-tests.*]
ignore_missing_imports = True

