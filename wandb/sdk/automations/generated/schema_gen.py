# type: ignore

# generated by datamodel-codegen:
#   filename:  schema.graphql
#   timestamp: 2024-09-03T15:00:49+00:00

from __future__ import annotations

from datetime import datetime, timedelta
from enum import Enum
from typing import Literal, TypeAlias, Union

from pydantic import Field, Json
from typing_extensions import Annotated

from wandb.sdk.automations._typing import Base64Id
from wandb.sdk.automations.base import Base

Boolean: TypeAlias = bool
"""
The `Boolean` scalar type represents `true` or `false`.
"""


DateTime: TypeAlias = datetime


Duration: TypeAlias = timedelta


Float: TypeAlias = float
"""
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""


ID: TypeAlias = Base64Id
"""
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
"""


Int: TypeAlias = int
"""
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""


Int64: TypeAlias = int


JSON: TypeAlias = Json


JSONString: TypeAlias = str


String: TypeAlias = str
"""
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""


class AccessTokenType(Enum):
    INDIVIDUAL_SHARING = "INDIVIDUAL_SHARING"
    PUBLIC = "PUBLIC"
    RESTRICTED = "RESTRICTED"


class Aggregation(Enum):
    AVERAGE = "AVERAGE"
    COUNT = "COUNT"
    MAX = "MAX"
    MIN = "MIN"
    SUM = "SUM"


class AlertSeverity(Enum):
    ERROR = "ERROR"
    INFO = "INFO"
    WARN = "WARN"


class ArtifactCollectionState(Enum):
    DELETED = "DELETED"
    READY = "READY"


class ArtifactCollectionType(Enum):
    PORTFOLIO = "PORTFOLIO"
    SEQUENCE = "SEQUENCE"


class ArtifactDigestAlgorithm(Enum):
    MANIFEST_MD5 = "MANIFEST_MD5"


class ArtifactManifestType(Enum):
    FULL = "FULL"
    INCREMENTAL = "INCREMENTAL"
    PATCH = "PATCH"


class ArtifactState(Enum):
    COMMITTED = "COMMITTED"
    DELETED = "DELETED"
    PENDING = "PENDING"


class ArtifactStorageLayout(Enum):
    V1 = "V1"
    V2 = "V2"


class CardBrand(Enum):
    AMEX = "AMEX"
    DINERS = "DINERS"
    DISCOVER = "DISCOVER"
    INTERAC = "INTERAC"
    JCB = "JCB"
    MASTERCARD = "MASTERCARD"
    UNIONPAY = "UNIONPAY"
    UNKNOWN = "UNKNOWN"
    VISA = "VISA"


class CloudProvider(Enum):
    AWS = "AWS"
    AZURE = "AZURE"
    GCP = "GCP"
    MINIO = "MINIO"


class CompleteMultipartAction(Enum):
    COMPLETE = "Complete"


class DagDirection(Enum):
    AWAY_FROM_ARTIFACT = "AwayFromArtifact"
    TOWARD_ARTIFACT = "TowardArtifact"


class DagNodeType(Enum):
    ARTIFACT = "Artifact"
    RUN = "Run"


class DefaultResourceConfigScopeType(Enum):
    ENTITY = "ENTITY"
    PROJECT = "PROJECT"


class DiffOperation(Enum):
    DELETE = "DELETE"
    INSERT = "INSERT"
    UPDATE = "UPDATE"


class DotBehavior(Enum):
    KEEP_ALL_DOT_VALUES = "KEEP_ALL_DOT_VALUES"
    SKIP_FIRST_DOT_VALUE = "SKIP_FIRST_DOT_VALUE"


class EmailType(Enum):
    ACADEMIC = "ACADEMIC"
    CORPORATE = "CORPORATE"
    PERSONAL = "PERSONAL"


class ErrorSeverity(Enum):
    ERROR = "ERROR"
    WARN = "WARN"


class EventTriggeringConditionType(Enum):
    ADD_ARTIFACT_ALIAS = "ADD_ARTIFACT_ALIAS"
    CREATE_ARTIFACT = "CREATE_ARTIFACT"
    LINK_MODEL = "LINK_MODEL"
    UPDATE_ARTIFACT_ALIAS = "UPDATE_ARTIFACT_ALIAS"


class ExperimentType(Enum):
    AB_TEST = "AB_TEST"
    FEATURE_FLAG = "FEATURE_FLAG"


class HistoryKeysFormat(Enum):
    BITMAP = "BITMAP"
    PLAINTEXT = "PLAINTEXT"


class ObservationalUnit(Enum):
    ANONYMOUS_USER = "ANONYMOUS_USER"
    ORGANIZATION = "ORGANIZATION"
    TEAM = "TEAM"
    USER = "USER"


class OrgType(Enum):
    ORGANIZATION = "ORGANIZATION"
    PERSONAL = "PERSONAL"


class OrganizationSubscriptionStatus(Enum):
    DISABLED = "DISABLED"
    ENABLED = "ENABLED"


class OrganizationSubscriptionType(Enum):
    ACADEMIC = "ACADEMIC"
    ACADEMIC_TRIAL = "ACADEMIC_TRIAL"
    ENTERPRISE = "ENTERPRISE"
    FREE_PLAN = "FREE_PLAN"
    LOCAL = "LOCAL"
    MANUAL_TRIAL = "MANUAL_TRIAL"
    STRIPE = "STRIPE"
    USER_LED_TRIAL = "USER_LED_TRIAL"


class PlanType(Enum):
    HOUR_OVERAGE = "HOUR_OVERAGE"
    PRIMARY = "PRIMARY"
    REFERENCE = "REFERENCE"
    STORAGE = "STORAGE"


class PlanVisibility(Enum):
    DEPRECATED = "DEPRECATED"
    PRIVATE = "PRIVATE"
    PUBLIC = "PUBLIC"


class PreviewableLinkResourceType(Enum):
    ENTITY = "Entity"
    USER = "User"
    VIEW = "View"


class RampIDType(Enum):
    API_KEY = "ApiKey"
    CUSTOM_ID = "CustomID"
    ENTITY_ID = "EntityID"
    ENTITY_NAME = "EntityName"
    NONE = "None"
    ORG_ID = "OrgID"
    ORG_NAME = "OrgName"
    PROJECT_ID = "ProjectID"
    USER_ID = "UserID"
    USER_NAME = "UserName"


class RampType(Enum):
    BACKEND = "Backend"
    FRONTEND_BETA_FLAG = "FrontendBetaFlag"
    FRONTEND_FEATURE_FLAG = "FrontendFeatureFlag"


class RunQueueAccessType(Enum):
    PROJECT = "PROJECT"
    USER = "USER"


class RunQueueItemState(Enum):
    CLAIMED = "CLAIMED"
    FAILED = "FAILED"
    LEASED = "LEASED"
    PENDING = "PENDING"


class RunQueuePrioritizationMode(Enum):
    DISABLED = "DISABLED"
    V0 = "V0"


class StripeInvoiceStatus(Enum):
    DRAFT = "DRAFT"
    OPEN = "OPEN"
    PAID = "PAID"
    UNCOLLECTIBLE = "UNCOLLECTIBLE"
    VOID = "VOID"


class StripePaymentMethodType(Enum):
    CARD = "CARD"


class TaggedObjectType(Enum):
    ARTIFACT = "ARTIFACT"
    ARTIFACT_COLLECTION = "ARTIFACT_COLLECTION"


class TaskState(Enum):
    FAILED = "FAILED"
    FINISHED = "FINISHED"
    PENDING = "PENDING"
    RUNNING = "RUNNING"


class TraversalDirection(Enum):
    DOWNSTREAM = "DOWNSTREAM"
    UPSTREAM = "UPSTREAM"


class TriggerScopeType(Enum):
    ARTIFACT_COLLECTION = "ARTIFACT_COLLECTION"
    PROJECT = "PROJECT"


class TriggeredActionType(Enum):
    GENERIC_WEBHOOK = "GENERIC_WEBHOOK"
    NOTIFICATION = "NOTIFICATION"
    QUEUE_JOB = "QUEUE_JOB"


class UsageType(Enum):
    STORAGE = "STORAGE"
    TRACKED_HOURS = "TRACKED_HOURS"
    USER_SEATS = "USER_SEATS"
    WEAVE = "WEAVE"


class UserAccountType(Enum):
    ANONYMOUS = "ANONYMOUS"
    SERVICE = "SERVICE"
    USER = "USER"
    VIEWER = "VIEWER"


class UserProjectRestriction(Enum):
    CONTRIBUTED = "CONTRIBUTED"
    OWNED = "OWNED"


class ViewSource(Enum):
    WANDB_SDK = "WANDB_SDK"
    WANDB_UI = "WANDB_UI"
    WANDB_UI_SHARE_PANEL = "WANDB_UI_SHARE_PANEL"
    WEAVE_UI = "WEAVE_UI"


class WorkflowsAdminType(Enum):
    MODEL = "MODEL"


class ActivityDuration(Base):
    end_at: Annotated[DateTime, Field(alias="endAt")]
    start_at: Annotated[DateTime, Field(alias="startAt")]
    typename__: Annotated[
        Literal["ActivityDuration"] | None, Field(alias="__typename")
    ] = "ActivityDuration"


class AlertSubscription(Base):
    id: ID
    typename__: Annotated[
        Literal["AlertSubscription"] | None, Field(alias="__typename")
    ] = "AlertSubscription"


class ArtifactAction(Base):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    initiator: Initiator
    typename__: Annotated[
        Literal["ArtifactAction"] | None, Field(alias="__typename")
    ] = "ArtifactAction"


class ArtifactCollection(Base):
    alias_action_history: Annotated[
        ArtifactAliasActionConnection, Field(alias="aliasActionHistory")
    ]
    aliases: ArtifactAliasConnection
    artifact_actions: Annotated[
        ArtifactActionConnection | None, Field(alias="artifactActions")
    ] = None
    artifact_collection_actions: Annotated[
        ArtifactCollectionActionConnection, Field(alias="artifactCollectionActions")
    ]
    artifact_membership: Annotated[
        ArtifactCollectionMembership | None, Field(alias="artifactMembership")
    ] = None
    artifact_memberships: Annotated[
        ArtifactCollectionMembershipConnection, Field(alias="artifactMemberships")
    ]
    artifacts: VersionedArtifactConnection | None = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    default_artifact_type: Annotated[ArtifactType, Field(alias="defaultArtifactType")]
    description: String | None = None
    has_artifact_version_linked_to_global_registry: Annotated[
        Boolean, Field(alias="hasArtifactVersionLinkedToGlobalRegistry")
    ]
    id: ID
    name: String
    project: Project | None = None
    state: ArtifactCollectionState
    tags: TagConnection
    triggers: TriggerConnection
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[
        Literal["ArtifactCollection"] | None, Field(alias="__typename")
    ] = "ArtifactCollection"


class ArtifactConnectionType(Base):
    edges: list[ArtifactEdgeType]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["ArtifactConnectionType"] | None, Field(alias="__typename")
    ] = "ArtifactConnectionType"


class ArtifactEdgeType(Base):
    cursor: String
    node: Artifact | None = None
    typename__: Annotated[
        Literal["ArtifactEdgeType"] | None, Field(alias="__typename")
    ] = "ArtifactEdgeType"


class BucketType(Base):
    commit: String | None = None
    config: JSONString | None = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    description: String | None = None
    example_table: Annotated[JSONString | None, Field(alias="exampleTable")] = None
    example_table_columns: Annotated[
        JSONString | None, Field(alias="exampleTableColumns")
    ] = None
    example_table_types: Annotated[
        JSONString | None, Field(alias="exampleTableTypes")
    ] = None
    file_count: Annotated[Int | None, Field(alias="fileCount")] = None
    files: FileConnection | None = None
    framework: String | None = None
    github: String | None = None
    history: list[String]
    host: String | None = None
    id: ID
    log_lines: Annotated[LogLineConnection | None, Field(alias="logLines")] = None
    name: String | None = None
    should_stop: Annotated[Boolean | None, Field(alias="shouldStop")] = None
    state: String | None = None
    summary_metrics: Annotated[JSONString | None, Field(alias="summaryMetrics")] = None
    sweep: Sweep | None = None
    typename__: Annotated[Literal["BucketType"] | None, Field(alias="__typename")] = (
        "BucketType"
    )


class Error(Base):
    message: String
    typename__: Annotated[Literal["Error"] | None, Field(alias="__typename")] = "Error"


class Integration(Base):
    id: ID
    typename__: Annotated[Literal["Integration"] | None, Field(alias="__typename")] = (
        "Integration"
    )


class Node(Base):
    id: ID
    typename__: Annotated[Literal["Node"] | None, Field(alias="__typename")] = "Node"


class StorageTreeNode(Base):
    id: ID
    name: String
    size: Int64
    typename__: Annotated[
        Literal["StorageTreeNode"] | None, Field(alias="__typename")
    ] = "StorageTreeNode"


class AccessToken(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    created_by: Annotated[User, Field(alias="createdBy")]
    emails: list[String]
    id: ID
    last_accessed_at: Annotated[DateTime | None, Field(alias="lastAccessedAt")] = None
    projects: list[Project]
    revoked_at: Annotated[DateTime | None, Field(alias="revokedAt")] = None
    token: String
    type: AccessTokenType
    view: View
    typename__: Annotated[Literal["AccessToken"] | None, Field(alias="__typename")] = (
        "AccessToken"
    )


class AckJobSetItemPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["AckJobSetItemPayload"] | None, Field(alias="__typename")
    ] = "AckJobSetItemPayload"


class AckRunQueueItemPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["AckRunQueueItemPayload"] | None, Field(alias="__typename")
    ] = "AckRunQueueItemPayload"


class ActiveExperiment(Node):
    active_variants: Annotated[list[ActiveVariant], Field(alias="activeVariants")]
    end_at: Annotated[DateTime | None, Field(alias="endAt")] = None
    experiment_type: Annotated[ExperimentType, Field(alias="experimentType")]
    id: ID
    name: String
    start_at: Annotated[DateTime | None, Field(alias="startAt")] = None
    typename__: Annotated[
        Literal["ActiveExperiment"] | None, Field(alias="__typename")
    ] = "ActiveExperiment"


class ActiveVariant(Base):
    allocation: Int
    bucket: Int
    typename__: Annotated[
        Literal["ActiveVariant"] | None, Field(alias="__typename")
    ] = "ActiveVariant"


class AddAliasesPayload(Base):
    aliases: list[ArtifactCollectionAlias]
    artifact: Artifact
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["AddAliasesPayload"] | None, Field(alias="__typename")
    ] = "AddAliasesPayload"


class AddFilesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    files: FileConnection | None = None
    typename__: Annotated[
        Literal["AddFilesPayload"] | None, Field(alias="__typename")
    ] = "AddFilesPayload"


class AddProtectedAliasesPayload(Base):
    aliases: list[String]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    typename__: Annotated[
        Literal["AddProtectedAliasesPayload"] | None, Field(alias="__typename")
    ] = "AddProtectedAliasesPayload"


class AddRolePermissionsPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["AddRolePermissionsPayload"] | None, Field(alias="__typename")
    ] = "AddRolePermissionsPayload"


class AddUserToOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email_sent: Annotated[Boolean, Field(alias="emailSent")]
    success: Boolean
    typename__: Annotated[
        Literal["AddUserToOrganizationPayload"] | None, Field(alias="__typename")
    ] = "AddUserToOrganizationPayload"


class AddWorkflowsAdminPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    success: Boolean
    typename__: Annotated[
        Literal["AddWorkflowsAdminPayload"] | None, Field(alias="__typename")
    ] = "AddWorkflowsAdminPayload"


class Agent(Node):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    heartbeat_at: Annotated[DateTime | None, Field(alias="heartbeatAt")] = None
    host: String
    id: ID
    metrics: JSONString
    name: String
    persistent: Boolean | None = None
    runs: RunConnection
    state: String | None = None
    sweep: Sweep
    total_runs: Annotated[Int, Field(alias="totalRuns")]
    user: User | None = None
    typename__: Annotated[Literal["Agent"] | None, Field(alias="__typename")] = "Agent"


class AgentConnection(Base):
    edges: list[AgentEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["AgentConnection"] | None, Field(alias="__typename")
    ] = "AgentConnection"


class AgentEdge(Base):
    cursor: String
    node: Agent
    typename__: Annotated[Literal["AgentEdge"] | None, Field(alias="__typename")] = (
        "AgentEdge"
    )


class AgentHeartbeatPayload(Base):
    agent: Agent | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    commands: JSONString | None = None
    typename__: Annotated[
        Literal["AgentHeartbeatPayload"] | None, Field(alias="__typename")
    ] = "AgentHeartbeatPayload"


class Alert(Base):
    condition: AlertCondition
    events: AlertEventConnection
    id: ID
    subscriptions: list[AlertSubscription]
    typename__: Annotated[Literal["Alert"] | None, Field(alias="__typename")] = "Alert"


class AlertEvent(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    typename__: Annotated[Literal["AlertEvent"] | None, Field(alias="__typename")] = (
        "AlertEvent"
    )


class AlertEventConnection(Base):
    edges: list[AlertEventEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["AlertEventConnection"] | None, Field(alias="__typename")
    ] = "AlertEventConnection"


class AlertEventEdge(Base):
    cursor: String
    node: AlertEvent | None = None
    typename__: Annotated[
        Literal["AlertEventEdge"] | None, Field(alias="__typename")
    ] = "AlertEventEdge"


class ApiKey(Base):
    description: String | None = None
    id: ID
    ips: list[String]
    name: String
    rate_limit: Annotated[String | None, Field(alias="rateLimit")] = None
    user: User | None = None
    typename__: Annotated[Literal["ApiKey"] | None, Field(alias="__typename")] = (
        "ApiKey"
    )


class ApiKeyConnection(Base):
    edges: list[ApiKeyEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ApiKeyConnection"] | None, Field(alias="__typename")
    ] = "ApiKeyConnection"


class ApiKeyEdge(Base):
    cursor: String
    node: ApiKey | None = None
    typename__: Annotated[Literal["ApiKeyEdge"] | None, Field(alias="__typename")] = (
        "ApiKeyEdge"
    )


class Artifact(Base):
    aliases: list[ArtifactAlias]
    artifact_actions: Annotated[
        ArtifactActionConnection | None, Field(alias="artifactActions")
    ] = None
    artifact_collections: Annotated[
        ArtifactCollectionConnection, Field(alias="artifactCollections")
    ]
    artifact_lineage_dag: Annotated[
        ArtifactLineageDag | None, Field(alias="artifactLineageDag")
    ] = None
    artifact_memberships: Annotated[
        ArtifactCollectionMembershipConnection, Field(alias="artifactMemberships")
    ]
    artifact_sequence: Annotated[ArtifactSequence, Field(alias="artifactSequence")]
    artifact_type: Annotated[ArtifactType, Field(alias="artifactType")]
    commit_hash: Annotated[String | None, Field(alias="commitHash")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    created_by: Annotated[Initiator | None, Field(alias="createdBy")] = None
    current_manifest: Annotated[
        ArtifactManifest | None, Field(alias="currentManifest")
    ] = None
    dependency_of: Annotated[ArtifactConnection, Field(alias="dependencyOf")]
    depends_on: Annotated[ArtifactConnection, Field(alias="dependsOn")]
    description: String | None = None
    digest: String
    file_count: Annotated[Int64, Field(alias="fileCount")]
    files: FileConnection
    history_step: Annotated[Int64 | None, Field(alias="historyStep")] = None
    id: ID
    is_generated: Annotated[Boolean, Field(alias="isGenerated")]
    is_linked_to_global_registry: Annotated[
        Boolean, Field(alias="isLinkedToGlobalRegistry")
    ]
    labels: JSONString | None = None
    metadata: JSONString | None = None
    size: Int64
    state: ArtifactState
    storage_bytes: Annotated[Int64, Field(alias="storageBytes")]
    tags: list[Tag]
    ttl_duration_seconds: Annotated[Int64, Field(alias="ttlDurationSeconds")]
    ttl_is_inherited: Annotated[Boolean, Field(alias="ttlIsInherited")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    used_by: Annotated[RunConnection, Field(alias="usedBy")]
    used_count: Annotated[Int, Field(alias="usedCount")]
    version_index: Annotated[Int | None, Field(alias="versionIndex")] = None
    typename__: Annotated[Literal["Artifact"] | None, Field(alias="__typename")] = (
        "Artifact"
    )


class ArtifactActionConnection(Base):
    edges: list[ArtifactActionEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactActionConnection"] | None, Field(alias="__typename")
    ] = "ArtifactActionConnection"


class ArtifactActionEdge(Base):
    cursor: String
    node: ArtifactAction
    typename__: Annotated[
        Literal["ArtifactActionEdge"] | None, Field(alias="__typename")
    ] = "ArtifactActionEdge"


class ArtifactAlias(Base):
    alias: String
    artifact: Artifact | None = None
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    id: ID
    typename__: Annotated[
        Literal["ArtifactAlias"] | None, Field(alias="__typename")
    ] = "ArtifactAlias"


class ArtifactAliasAction(Base):
    action_type: Annotated[String, Field(alias="actionType")]
    alias: String
    artifact_collection: Annotated[
        ArtifactCollection, Field(alias="artifactCollection")
    ]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    source_artifact: Annotated[Artifact | None, Field(alias="sourceArtifact")] = None
    target_artifact: Annotated[Artifact | None, Field(alias="targetArtifact")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["ArtifactAliasAction"] | None, Field(alias="__typename")
    ] = "ArtifactAliasAction"


class ArtifactAliasActionConnection(Base):
    edges: list[ArtifactAliasActionEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactAliasActionConnection"] | None, Field(alias="__typename")
    ] = "ArtifactAliasActionConnection"


class ArtifactAliasActionEdge(Base):
    cursor: String
    node: ArtifactAliasAction
    typename__: Annotated[
        Literal["ArtifactAliasActionEdge"] | None, Field(alias="__typename")
    ] = "ArtifactAliasActionEdge"


class ArtifactAliasConnection(Base):
    edges: list[ArtifactAliasEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactAliasConnection"] | None, Field(alias="__typename")
    ] = "ArtifactAliasConnection"


class ArtifactAliasEdge(Base):
    cursor: String
    node: ArtifactAlias | None = None
    typename__: Annotated[
        Literal["ArtifactAliasEdge"] | None, Field(alias="__typename")
    ] = "ArtifactAliasEdge"


class ArtifactCollectionAction(Base):
    action_type: Annotated[String, Field(alias="actionType")]
    artifact: Artifact | None = None
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    user: User | None = None
    typename__: Annotated[
        Literal["ArtifactCollectionAction"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionAction"


class ArtifactCollectionActionConnection(Base):
    edges: list[ArtifactCollectionActionEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactCollectionActionConnection"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionActionConnection"


class ArtifactCollectionActionEdge(Base):
    cursor: String
    node: ArtifactCollectionAction
    typename__: Annotated[
        Literal["ArtifactCollectionActionEdge"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionActionEdge"


class ArtifactCollectionAlias(Base):
    alias: String
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["ArtifactCollectionAlias"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionAlias"


class ArtifactCollectionConnection(Base):
    edges: list[ArtifactCollectionEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["ArtifactCollectionConnection"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionConnection"


class ArtifactCollectionEdge(Base):
    cursor: String
    node: ArtifactCollection | None = None
    typename__: Annotated[
        Literal["ArtifactCollectionEdge"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionEdge"


class ArtifactCollectionMembership(Base):
    aliases: list[ArtifactAlias]
    artifact: Artifact | None = None
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    commit_hash: Annotated[String | None, Field(alias="commitHash")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    version_index: Annotated[Int | None, Field(alias="versionIndex")] = None
    typename__: Annotated[
        Literal["ArtifactCollectionMembership"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionMembership"


class ArtifactCollectionMembershipConnection(Base):
    edges: list[ArtifactCollectionMembershipEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactCollectionMembershipConnection"] | None,
        Field(alias="__typename"),
    ] = "ArtifactCollectionMembershipConnection"


class ArtifactCollectionMembershipEdge(Base):
    cursor: String
    node: ArtifactCollectionMembership | None = None
    typename__: Annotated[
        Literal["ArtifactCollectionMembershipEdge"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionMembershipEdge"


class ArtifactConnection(ArtifactConnectionType):
    edges: list[ArtifactEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["ArtifactConnection"] | None, Field(alias="__typename")
    ] = "ArtifactConnection"


class ArtifactEdge(ArtifactEdgeType):
    cursor: String
    node: Artifact | None = None
    typename__: Annotated[Literal["ArtifactEdge"] | None, Field(alias="__typename")] = (
        "ArtifactEdge"
    )


class ArtifactLineageDag(Base):
    artifacts: list[ArtifactLineageDagArtifact | None]
    clusters: list[ArtifactLineageDagCluster | None]
    edges: list[ArtifactLineageDagEdge | None]
    hit_limit: Annotated[Boolean, Field(alias="hitLimit")]
    runs: list[ArtifactLineageDagRun | None]
    typename__: Annotated[
        Literal["ArtifactLineageDag"] | None, Field(alias="__typename")
    ] = "ArtifactLineageDag"


class ArtifactLineageDagArtifact(Base):
    artifact_commit_hash: Annotated[String, Field(alias="artifactCommitHash")]
    artifact_node_id: Annotated[String, Field(alias="artifactNodeID")]
    artifact_sequence_name: Annotated[String, Field(alias="artifactSequenceName")]
    artifact_type_name: Annotated[String, Field(alias="artifactTypeName")]
    entity_name: Annotated[String, Field(alias="entityName")]
    id: ID
    project_name: Annotated[String, Field(alias="projectName")]
    version_index: Annotated[Int, Field(alias="versionIndex")]
    typename__: Annotated[
        Literal["ArtifactLineageDagArtifact"] | None, Field(alias="__typename")
    ] = "ArtifactLineageDagArtifact"


class ArtifactLineageDagCluster(Base):
    artifact_nodes: Annotated[
        list[ArtifactLineageDagArtifact | None], Field(alias="artifactNodes")
    ]
    cluster_edges: Annotated[
        list[ArtifactLineageDagEdge | None], Field(alias="clusterEdges")
    ]
    id: String
    node_type: Annotated[DagNodeType, Field(alias="nodeType")]
    run_nodes: Annotated[list[ArtifactLineageDagRun | None], Field(alias="runNodes")]
    typename__: Annotated[
        Literal["ArtifactLineageDagCluster"] | None, Field(alias="__typename")
    ] = "ArtifactLineageDagCluster"


class ArtifactLineageDagEdge(Base):
    artifact_node_id: Annotated[String, Field(alias="artifactNodeID")]
    cluster_node_id: Annotated[String | None, Field(alias="clusterNodeID")] = None
    direction: DagDirection
    edge_id: Annotated[String, Field(alias="edgeID")]
    run_node_id: Annotated[String, Field(alias="runNodeID")]
    typename__: Annotated[
        Literal["ArtifactLineageDagEdge"] | None, Field(alias="__typename")
    ] = "ArtifactLineageDagEdge"


class ArtifactLineageDagRun(Base):
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    job_type: Annotated[String | None, Field(alias="jobType")] = None
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    run_node_id: Annotated[String, Field(alias="runNodeID")]
    typename__: Annotated[
        Literal["ArtifactLineageDagRun"] | None, Field(alias="__typename")
    ] = "ArtifactLineageDagRun"


class ArtifactManifest(Base):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    digest: String
    file: File
    id: ID
    type: ArtifactManifestType
    typename__: Annotated[
        Literal["ArtifactManifest"] | None, Field(alias="__typename")
    ] = "ArtifactManifest"


class ArtifactManifestConnection(Base):
    edges: list[ArtifactManifestEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactManifestConnection"] | None, Field(alias="__typename")
    ] = "ArtifactManifestConnection"


class ArtifactManifestEdge(Base):
    cursor: String
    node: ArtifactManifest | None = None
    typename__: Annotated[
        Literal["ArtifactManifestEdge"] | None, Field(alias="__typename")
    ] = "ArtifactManifestEdge"


class ArtifactPortfolio(ArtifactCollection):
    alias_action_history: Annotated[
        ArtifactAliasActionConnection, Field(alias="aliasActionHistory")
    ]
    aliases: ArtifactAliasConnection
    artifact_actions: Annotated[
        ArtifactActionConnection, Field(alias="artifactActions")
    ]
    artifact_collection_actions: Annotated[
        ArtifactCollectionActionConnection, Field(alias="artifactCollectionActions")
    ]
    artifact_membership: Annotated[
        ArtifactCollectionMembership | None, Field(alias="artifactMembership")
    ] = None
    artifact_memberships: Annotated[
        ArtifactCollectionMembershipConnection, Field(alias="artifactMemberships")
    ]
    artifacts: VersionedArtifactConnection
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    default_artifact_type: Annotated[ArtifactType, Field(alias="defaultArtifactType")]
    description: String | None = None
    has_artifact_version_linked_to_global_registry: Annotated[
        Boolean, Field(alias="hasArtifactVersionLinkedToGlobalRegistry")
    ]
    id: ID
    name: String
    project: Project | None = None
    state: ArtifactCollectionState
    tags: TagConnection
    triggers: TriggerConnection
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[
        Literal["ArtifactPortfolio"] | None, Field(alias="__typename")
    ] = "ArtifactPortfolio"


class ArtifactSequence(ArtifactCollection):
    alias_action_history: Annotated[
        ArtifactAliasActionConnection, Field(alias="aliasActionHistory")
    ]
    aliases: ArtifactAliasConnection
    artifact_actions: Annotated[
        ArtifactActionConnection, Field(alias="artifactActions")
    ]
    artifact_collection_actions: Annotated[
        ArtifactCollectionActionConnection, Field(alias="artifactCollectionActions")
    ]
    artifact_membership: Annotated[
        ArtifactCollectionMembership | None, Field(alias="artifactMembership")
    ] = None
    artifact_memberships: Annotated[
        ArtifactCollectionMembershipConnection, Field(alias="artifactMemberships")
    ]
    artifacts: VersionedArtifactConnection
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    default_artifact_type: Annotated[ArtifactType, Field(alias="defaultArtifactType")]
    description: String | None = None
    has_artifact_version_linked_to_global_registry: Annotated[
        Boolean, Field(alias="hasArtifactVersionLinkedToGlobalRegistry")
    ]
    id: ID
    latest_artifact: Annotated[Artifact | None, Field(alias="latestArtifact")] = None
    name: String
    project: Project | None = None
    state: ArtifactCollectionState
    tags: TagConnection
    triggers: TriggerConnection
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[
        Literal["ArtifactSequence"] | None, Field(alias="__typename")
    ] = "ArtifactSequence"


class ArtifactSequenceConnection(Base):
    edges: list[ArtifactSequenceEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["ArtifactSequenceConnection"] | None, Field(alias="__typename")
    ] = "ArtifactSequenceConnection"


class ArtifactSequenceEdge(Base):
    cursor: String
    node: ArtifactSequence | None = None
    typename__: Annotated[
        Literal["ArtifactSequenceEdge"] | None, Field(alias="__typename")
    ] = "ArtifactSequenceEdge"


class ArtifactSequenceStorageNode(StorageTreeNode):
    artifact_sequence: Annotated[ArtifactSequence, Field(alias="artifactSequence")]
    artifact_sequence_id: Annotated[ID, Field(alias="artifactSequenceID")]
    artifact_type: Annotated[ArtifactType, Field(alias="artifactType")]
    artifacts: ArtifactStorageNodeConnection
    id: ID
    name: String
    size: Int64
    typename__: Annotated[
        Literal["ArtifactSequenceStorageNode"] | None, Field(alias="__typename")
    ] = "ArtifactSequenceStorageNode"


class ArtifactSequenceStorageNodeConnection(Base):
    edges: list[ArtifactSequenceStorageNodeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_size: Annotated[Int64, Field(alias="totalSize")]
    typename__: Annotated[
        Literal["ArtifactSequenceStorageNodeConnection"] | None,
        Field(alias="__typename"),
    ] = "ArtifactSequenceStorageNodeConnection"


class ArtifactSequenceStorageNodeEdge(Base):
    cursor: String
    node: ArtifactSequenceStorageNode
    typename__: Annotated[
        Literal["ArtifactSequenceStorageNodeEdge"] | None, Field(alias="__typename")
    ] = "ArtifactSequenceStorageNodeEdge"


class ArtifactStorageNode(StorageTreeNode):
    artifact: Artifact
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    id: ID
    name: String
    size: Int64
    typename__: Annotated[
        Literal["ArtifactStorageNode"] | None, Field(alias="__typename")
    ] = "ArtifactStorageNode"


class ArtifactStorageNodeConnection(Base):
    edges: list[ArtifactStorageNodeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_size: Annotated[Int64, Field(alias="totalSize")]
    typename__: Annotated[
        Literal["ArtifactStorageNodeConnection"] | None, Field(alias="__typename")
    ] = "ArtifactStorageNodeConnection"


class ArtifactStorageNodeEdge(Base):
    cursor: String
    node: ArtifactStorageNode
    typename__: Annotated[
        Literal["ArtifactStorageNodeEdge"] | None, Field(alias="__typename")
    ] = "ArtifactStorageNodeEdge"


class ArtifactType(Base):
    artifact: Artifact | None = None
    artifact_actions: Annotated[
        ArtifactActionConnection | None, Field(alias="artifactActions")
    ] = None
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    artifact_collections: Annotated[
        ArtifactCollectionConnection | None, Field(alias="artifactCollections")
    ] = None
    artifact_sequence: Annotated[
        ArtifactSequence | None, Field(alias="artifactSequence")
    ] = None
    artifact_sequences: Annotated[
        ArtifactSequenceConnection | None, Field(alias="artifactSequences")
    ] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    description: String | None = None
    id: ID
    name: String
    project: Project
    typename__: Annotated[Literal["ArtifactType"] | None, Field(alias="__typename")] = (
        "ArtifactType"
    )


class ArtifactTypeConnection(Base):
    edges: list[ArtifactTypeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ArtifactTypeConnection"] | None, Field(alias="__typename")
    ] = "ArtifactTypeConnection"


class ArtifactTypeEdge(Base):
    cursor: String
    node: ArtifactType | None = None
    typename__: Annotated[
        Literal["ArtifactTypeEdge"] | None, Field(alias="__typename")
    ] = "ArtifactTypeEdge"


class ArtifactTypeStorageNode(StorageTreeNode):
    artifact_type: Annotated[ArtifactType, Field(alias="artifactType")]
    id: ID
    name: String
    size: Int64
    typename__: Annotated[
        Literal["ArtifactTypeStorageNode"] | None, Field(alias="__typename")
    ] = "ArtifactTypeStorageNode"


class AttachCustomerPaymentMethodPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["AttachCustomerPaymentMethodPayload"] | None, Field(alias="__typename")
    ] = "AttachCustomerPaymentMethodPayload"


class BenchmarkRun(Base):
    benchmark: Project
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    details: JSON | None = None
    git_hub_submission_pr: Annotated[
        String | None, Field(alias="gitHubSubmissionPR")
    ] = None
    id: ID
    is_code_hidden: Annotated[Boolean, Field(alias="isCodeHidden")]
    original_project: Annotated[Project | None, Field(alias="originalProject")] = None
    original_run: Annotated[Run | None, Field(alias="originalRun")] = None
    results: String | None = None
    run: Run
    state: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    user: User
    typename__: Annotated[Literal["BenchmarkRun"] | None, Field(alias="__typename")] = (
        "BenchmarkRun"
    )


class BenchmarkRunConnection(Base):
    edges: list[BenchmarkRunEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["BenchmarkRunConnection"] | None, Field(alias="__typename")
    ] = "BenchmarkRunConnection"


class BenchmarkRunEdge(Base):
    cursor: String
    node: BenchmarkRun | None = None
    typename__: Annotated[
        Literal["BenchmarkRunEdge"] | None, Field(alias="__typename")
    ] = "BenchmarkRunEdge"


class BucketDiff(Base):
    op: DiffOperation
    run: Run | None = None
    typename__: Annotated[Literal["BucketDiff"] | None, Field(alias="__typename")] = (
        "BucketDiff"
    )


class BucketDiffs(Base):
    delta: list[BucketDiff]
    order: list[ID]
    typename__: Annotated[Literal["BucketDiffs"] | None, Field(alias="__typename")] = (
        "BucketDiffs"
    )


class BucketStoreConnectionError(Error):
    message: String
    severity: ErrorSeverity
    typename__: Annotated[
        Literal["BucketStoreConnectionError"] | None, Field(alias="__typename")
    ] = "BucketStoreConnectionError"


class CancelCustomerSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["CancelCustomerSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "CancelCustomerSubscriptionPayload"


class ClaimAnonymousEntityPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    task: Task
    typename__: Annotated[
        Literal["ClaimAnonymousEntityPayload"] | None, Field(alias="__typename")
    ] = "ClaimAnonymousEntityPayload"


class ClientIDMapping(Base):
    client_id: Annotated[ID, Field(alias="clientID")]
    entry: ClientIDMappingEntry
    server_id: Annotated[ID, Field(alias="serverID")]
    typename__: Annotated[
        Literal["ClientIDMapping"] | None, Field(alias="__typename")
    ] = "ClientIDMapping"


class CloneProjectsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    tasks: list[Task]
    typename__: Annotated[
        Literal["CloneProjectsPayload"] | None, Field(alias="__typename")
    ] = "CloneProjectsPayload"


class CloudRegion(Base):
    id: ID
    provider: CloudProvider
    region: String
    typename__: Annotated[Literal["CloudRegion"] | None, Field(alias="__typename")] = (
        "CloudRegion"
    )


class Code(Base):
    body: String | None = None
    direct_url: Annotated[String, Field(alias="directUrl")]
    name: String
    typename__: Annotated[Literal["Code"] | None, Field(alias="__typename")] = "Code"


class CommitArtifactPayload(Base):
    artifact: Artifact
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CommitArtifactPayload"] | None, Field(alias="__typename")
    ] = "CommitArtifactPayload"


class CompleteMultipartUploadArtifactPayload(Base):
    digest: String | None = None
    typename__: Annotated[
        Literal["CompleteMultipartUploadArtifactPayload"] | None,
        Field(alias="__typename"),
    ] = "CompleteMultipartUploadArtifactPayload"


class ContactUsForComputeHoursPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["ContactUsForComputeHoursPayload"] | None, Field(alias="__typename")
    ] = "ContactUsForComputeHoursPayload"


class ContactUsForUserLedTrialPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["ContactUsForUserLedTrialPayload"] | None, Field(alias="__typename")
    ] = "ContactUsForUserLedTrialPayload"


class CopyFilePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CopyFilePayload"] | None, Field(alias="__typename")
    ] = "CopyFilePayload"


class CreateAcademicOrReverseTrialPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    org_id: Annotated[ID, Field(alias="orgID")]
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateAcademicOrReverseTrialPayload"] | None, Field(alias="__typename")
    ] = "CreateAcademicOrReverseTrialPayload"


class CreateAccessTokenPayload(Base):
    access_token: Annotated[AccessToken, Field(alias="accessToken")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    recipient_already_on_team: Annotated[
        Boolean | None, Field(alias="recipientAlreadyOnTeam")
    ] = None
    to_new_user: Annotated[Boolean | None, Field(alias="toNewUser")] = None
    typename__: Annotated[
        Literal["CreateAccessTokenPayload"] | None, Field(alias="__typename")
    ] = "CreateAccessTokenPayload"


class CreateAgentPayload(Base):
    agent: Agent | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateAgentPayload"] | None, Field(alias="__typename")
    ] = "CreateAgentPayload"


class CreateAlertPayload(Base):
    alert: Alert
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateAlertPayload"] | None, Field(alias="__typename")
    ] = "CreateAlertPayload"


class CreateArtifactCollectionPayload(Base):
    artifact_collection: Annotated[
        ArtifactCollection, Field(alias="artifactCollection")
    ]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateArtifactCollectionPayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactCollectionPayload"


class CreateArtifactFilesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    files: FileConnection
    typename__: Annotated[
        Literal["CreateArtifactFilesPayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactFilesPayload"


class CreateArtifactManifestPayload(Base):
    artifact_manifest: Annotated[ArtifactManifest, Field(alias="artifactManifest")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateArtifactManifestPayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactManifestPayload"


class CreateArtifactPayload(Base):
    artifact: Artifact
    artifact_actions: Annotated[list[ArtifactAction], Field(alias="artifactActions")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateArtifactPayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactPayload"


class CreateArtifactTypePayload(Base):
    artifact_type: Annotated[ArtifactType, Field(alias="artifactType")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateArtifactTypePayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactTypePayload"


class CreateArtifactTypesPayload(Base):
    artifact_types: Annotated[list[ArtifactType], Field(alias="artifactTypes")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateArtifactTypesPayload"] | None, Field(alias="__typename")
    ] = "CreateArtifactTypesPayload"


class CreateClientIDMappingPayload(Base):
    client_id_mapping: Annotated[ClientIDMapping, Field(alias="clientIDMapping")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateClientIDMappingPayload"] | None, Field(alias="__typename")
    ] = "CreateClientIDMappingPayload"


class CreateClientPayload(Base):
    client_id: Annotated[String | None, Field(alias="clientId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["CreateClientPayload"] | None, Field(alias="__typename")
    ] = "CreateClientPayload"


class CreateCustomChartPayload(Base):
    chart: CustomChart
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateCustomChartPayload"] | None, Field(alias="__typename")
    ] = "CreateCustomChartPayload"


class CreateCustomerSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateCustomerSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "CreateCustomerSubscriptionPayload"


class CreateCustomerTrialPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateCustomerTrialPayload"] | None, Field(alias="__typename")
    ] = "CreateCustomerTrialPayload"


class CreateDefaultResourceConfigPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_resource_config_id: Annotated[ID, Field(alias="defaultResourceConfigID")]
    schema_validation_errors: Annotated[
        list[String] | None, Field(alias="schemaValidationErrors")
    ] = None
    success: Boolean
    typename__: Annotated[
        Literal["CreateDefaultResourceConfigPayload"] | None, Field(alias="__typename")
    ] = "CreateDefaultResourceConfigPayload"


class CreateDiscussionCommentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_comment: Annotated[DiscussionComment, Field(alias="discussionComment")]
    typename__: Annotated[
        Literal["CreateDiscussionCommentPayload"] | None, Field(alias="__typename")
    ] = "CreateDiscussionCommentPayload"


class CreateDiscussionThreadPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_thread: Annotated[DiscussionThread, Field(alias="discussionThread")]
    typename__: Annotated[
        Literal["CreateDiscussionThreadPayload"] | None, Field(alias="__typename")
    ] = "CreateDiscussionThreadPayload"


class CreateEmailSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription: EmailSubscription
    typename__: Annotated[
        Literal["CreateEmailSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "CreateEmailSubscriptionPayload"


class CreateEntityPayload(Base):
    api_key: Annotated[ApiKey | None, Field(alias="apiKey")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity: Entity | None = None
    typename__: Annotated[
        Literal["CreateEntityPayload"] | None, Field(alias="__typename")
    ] = "CreateEntityPayload"


class CreateExperimentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    success: Boolean
    typename__: Annotated[
        Literal["CreateExperimentPayload"] | None, Field(alias="__typename")
    ] = "CreateExperimentPayload"


class CreateFilterTriggerPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    trigger: Trigger | None = None
    typename__: Annotated[
        Literal["CreateFilterTriggerPayload"] | None, Field(alias="__typename")
    ] = "CreateFilterTriggerPayload"


class CreateGlueTaskPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["CreateGlueTaskPayload"] | None, Field(alias="__typename")
    ] = "CreateGlueTaskPayload"


class CreateHourOverageSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateHourOverageSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "CreateHourOverageSubscriptionPayload"


class CreateIntegrationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    integration: Integration
    typename__: Annotated[
        Literal["CreateIntegrationPayload"] | None, Field(alias="__typename")
    ] = "CreateIntegrationPayload"


class CreateInvitePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email_sent: Annotated[Boolean, Field(alias="emailSent")]
    entity: Entity | None = None
    invite: Invite | None = None
    remaining_seats: Annotated[Int | None, Field(alias="remainingSeats")] = None
    remaining_view_only_seats: Annotated[
        Int | None, Field(alias="remainingViewOnlySeats")
    ] = None
    success: Boolean
    typename__: Annotated[
        Literal["CreateInvitePayload"] | None, Field(alias="__typename")
    ] = "CreateInvitePayload"


class CreateLaunchAgentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    launch_agent_id: Annotated[ID, Field(alias="launchAgentId")]
    success: Boolean | None = None
    typename__: Annotated[
        Literal["CreateLaunchAgentPayload"] | None, Field(alias="__typename")
    ] = "CreateLaunchAgentPayload"


class CreateLocalLicenseOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization: Organization
    typename__: Annotated[
        Literal["CreateLocalLicenseOrganizationPayload"] | None,
        Field(alias="__typename"),
    ] = "CreateLocalLicenseOrganizationPayload"


class CreateNewsletterSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    newsletter_subscription: Annotated[
        NewsletterSubscription, Field(alias="newsletterSubscription")
    ]
    typename__: Annotated[
        Literal["CreateNewsletterSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "CreateNewsletterSubscriptionPayload"


class CreateOAuthProviderPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["CreateOAuthProviderPayload"] | None, Field(alias="__typename")
    ] = "CreateOAuthProviderPayload"


class CreatePreviewableLinkPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    link: String
    preview_image_upload_url: Annotated[
        String | None, Field(alias="previewImageUploadURL")
    ] = None
    success: Boolean
    typename__: Annotated[
        Literal["CreatePreviewableLinkPayload"] | None, Field(alias="__typename")
    ] = "CreatePreviewableLinkPayload"


class CreateProjectMembersPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["CreateProjectMembersPayload"] | None, Field(alias="__typename")
    ] = "CreateProjectMembersPayload"


class CreateRolePayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["CreateRolePayload"] | None, Field(alias="__typename")
    ] = "CreateRolePayload"


class CreateRunFilesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    files: list[File]
    run_id: Annotated[ID, Field(alias="runID")]
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    typename__: Annotated[
        Literal["CreateRunFilesPayload"] | None, Field(alias="__typename")
    ] = "CreateRunFilesPayload"


class CreateRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    queue_id: Annotated[ID | None, Field(alias="queueID")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["CreateRunQueuePayload"] | None, Field(alias="__typename")
    ] = "CreateRunQueuePayload"


class CreateServiceAccountPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["CreateServiceAccountPayload"] | None, Field(alias="__typename")
    ] = "CreateServiceAccountPayload"


class CreateSlackChannelSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription: SlackChannelSubscription
    typename__: Annotated[
        Literal["CreateSlackChannelSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "CreateSlackChannelSubscriptionPayload"


class CreateStorageSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateStorageSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "CreateStorageSubscriptionPayload"


class CreateTagsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    tags: list[Tag]
    typename__: Annotated[
        Literal["CreateTagsPayload"] | None, Field(alias="__typename")
    ] = "CreateTagsPayload"


class CreateTeamPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity: Entity | None = None
    typename__: Annotated[
        Literal["CreateTeamPayload"] | None, Field(alias="__typename")
    ] = "CreateTeamPayload"


class CreateUserEmailPayload(Base):
    email: Email | None = None
    success: Boolean
    typename__: Annotated[
        Literal["CreateUserEmailPayload"] | None, Field(alias="__typename")
    ] = "CreateUserEmailPayload"


class CreateUserLedTrialPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    org_id: Annotated[ID, Field(alias="orgID")]
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["CreateUserLedTrialPayload"] | None, Field(alias="__typename")
    ] = "CreateUserLedTrialPayload"


class CreateUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["CreateUserPayload"] | None, Field(alias="__typename")
    ] = "CreateUserPayload"


class CreateViewDiscussionCommentPayload(Base):
    alert_subscription: Annotated[AlertSubscription, Field(alias="alertSubscription")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_comment: Annotated[DiscussionComment, Field(alias="discussionComment")]
    discussion_thread: Annotated[DiscussionThread, Field(alias="discussionThread")]
    typename__: Annotated[
        Literal["CreateViewDiscussionCommentPayload"] | None, Field(alias="__typename")
    ] = "CreateViewDiscussionCommentPayload"


class CustomChart(Base):
    access: String
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    display_name: Annotated[String, Field(alias="displayName")]
    entity: Entity
    id: ID
    name: String
    spec: JSONString
    type: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    user: User
    typename__: Annotated[Literal["CustomChart"] | None, Field(alias="__typename")] = (
        "CustomChart"
    )


class CustomChartConnection(Base):
    edges: list[CustomChartEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["CustomChartConnection"] | None, Field(alias="__typename")
    ] = "CustomChartConnection"


class CustomChartEdge(Base):
    cursor: String
    node: CustomChart
    typename__: Annotated[
        Literal["CustomChartEdge"] | None, Field(alias="__typename")
    ] = "CustomChartEdge"


class DefaultResourceConfig(Base):
    config: JSON | None = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    resource: String
    scope: DefaultResourceConfigScope
    template_variables: Annotated[
        list[TemplateVariable], Field(alias="templateVariables")
    ]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[
        Literal["DefaultResourceConfig"] | None, Field(alias="__typename")
    ] = "DefaultResourceConfig"


class DefaultResourceConfigConnection(Base):
    edges: list[DefaultResourceConfigEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["DefaultResourceConfigConnection"] | None, Field(alias="__typename")
    ] = "DefaultResourceConfigConnection"


class DefaultResourceConfigEdge(Base):
    cursor: String
    node: DefaultResourceConfig
    typename__: Annotated[
        Literal["DefaultResourceConfigEdge"] | None, Field(alias="__typename")
    ] = "DefaultResourceConfigEdge"


class DefaultResourceConfigScope(Base):
    id: Annotated[Int, Field(alias="ID")]
    type: Annotated[DefaultResourceConfigScopeType, Field(alias="Type")]
    typename__: Annotated[
        Literal["DefaultResourceConfigScope"] | None, Field(alias="__typename")
    ] = "DefaultResourceConfigScope"


class DeleteAlertPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteAlertPayload"] | None, Field(alias="__typename")
    ] = "DeleteAlertPayload"


class DeleteAlertSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteAlertSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "DeleteAlertSubscriptionPayload"


class DeleteAliasesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteAliasesPayload"] | None, Field(alias="__typename")
    ] = "DeleteAliasesPayload"


class DeleteApiKeyPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteApiKeyPayload"] | None, Field(alias="__typename")
    ] = "DeleteApiKeyPayload"


class DeleteArtifactAction(ArtifactAction):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    initiator: Initiator
    typename__: Annotated[
        Literal["DeleteArtifactAction"] | None, Field(alias="__typename")
    ] = "DeleteArtifactAction"


class DeleteArtifactCollectionPayload(Base):
    artifact_collection: Annotated[
        ArtifactCollection, Field(alias="artifactCollection")
    ]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteArtifactCollectionPayload"] | None, Field(alias="__typename")
    ] = "DeleteArtifactCollectionPayload"


class DeleteArtifactEntityTTLPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteArtifactEntityTTLPayload"] | None, Field(alias="__typename")
    ] = "DeleteArtifactEntityTTLPayload"


class DeleteArtifactPayload(Base):
    artifact: Artifact
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteArtifactPayload"] | None, Field(alias="__typename")
    ] = "DeleteArtifactPayload"


class DeleteCustomChartPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteCustomChartPayload"] | None, Field(alias="__typename")
    ] = "DeleteCustomChartPayload"


class DeleteDefaultResourceConfigsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    num_affected: Annotated[Int64, Field(alias="numAffected")]
    success: Boolean
    typename__: Annotated[
        Literal["DeleteDefaultResourceConfigsPayload"] | None, Field(alias="__typename")
    ] = "DeleteDefaultResourceConfigsPayload"


class DeleteDiscussionCommentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteDiscussionCommentPayload"] | None, Field(alias="__typename")
    ] = "DeleteDiscussionCommentPayload"


class DeleteExperimentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    success: Boolean
    typename__: Annotated[
        Literal["DeleteExperimentPayload"] | None, Field(alias="__typename")
    ] = "DeleteExperimentPayload"


class DeleteFilesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteFilesPayload"] | None, Field(alias="__typename")
    ] = "DeleteFilesPayload"


class DeleteFromRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteFromRunQueuePayload"] | None, Field(alias="__typename")
    ] = "DeleteFromRunQueuePayload"


class DeleteGlueTaskPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteGlueTaskPayload"] | None, Field(alias="__typename")
    ] = "DeleteGlueTaskPayload"


class DeleteIntegrationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteIntegrationPayload"] | None, Field(alias="__typename")
    ] = "DeleteIntegrationPayload"


class DeleteInvitePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteInvitePayload"] | None, Field(alias="__typename")
    ] = "DeleteInvitePayload"


class DeleteLaunchAgentsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteLaunchAgentsPayload"] | None, Field(alias="__typename")
    ] = "DeleteLaunchAgentsPayload"


class DeleteModelPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteModelPayload"] | None, Field(alias="__typename")
    ] = "DeleteModelPayload"


class DeleteOAuthProviderPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["DeleteOAuthProviderPayload"] | None, Field(alias="__typename")
    ] = "DeleteOAuthProviderPayload"


class DeleteOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteOrganizationPayload"] | None, Field(alias="__typename")
    ] = "DeleteOrganizationPayload"


class DeleteOrganizationSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteOrganizationSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "DeleteOrganizationSubscriptionPayload"


class DeleteProjectMembersPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["DeleteProjectMembersPayload"] | None, Field(alias="__typename")
    ] = "DeleteProjectMembersPayload"


class DeleteRolePayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["DeleteRolePayload"] | None, Field(alias="__typename")
    ] = "DeleteRolePayload"


class DeleteRolePermissionsPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["DeleteRolePermissionsPayload"] | None, Field(alias="__typename")
    ] = "DeleteRolePermissionsPayload"


class DeleteRunPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteRunPayload"] | None, Field(alias="__typename")
    ] = "DeleteRunPayload"


class DeleteRunQueuesPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteRunQueuesPayload"] | None, Field(alias="__typename")
    ] = "DeleteRunQueuesPayload"


class DeleteRunsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    errors: String | None = None
    typename__: Annotated[
        Literal["DeleteRunsPayload"] | None, Field(alias="__typename")
    ] = "DeleteRunsPayload"


class DeleteSecretPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteSecretPayload"] | None, Field(alias="__typename")
    ] = "DeleteSecretPayload"


class DeleteSweepsPayload(Base):
    affected_agents: Annotated[Int, Field(alias="affectedAgents")]
    affected_runs: Annotated[Int, Field(alias="affectedRuns")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteSweepsPayload"] | None, Field(alias="__typename")
    ] = "DeleteSweepsPayload"


class DeleteTagAssignmentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteTagAssignmentPayload"] | None, Field(alias="__typename")
    ] = "DeleteTagAssignmentPayload"


class DeleteTeamPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteTeamPayload"] | None, Field(alias="__typename")
    ] = "DeleteTeamPayload"


class DeleteTriggerPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteTriggerPayload"] | None, Field(alias="__typename")
    ] = "DeleteTriggerPayload"


class DeleteUserEmailPayload(Base):
    email: Email | None = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteUserEmailPayload"] | None, Field(alias="__typename")
    ] = "DeleteUserEmailPayload"


class DeleteUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["DeleteUserPayload"] | None, Field(alias="__typename")
    ] = "DeleteUserPayload"


class DeleteViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    pending_drafts: Annotated[Boolean | None, Field(alias="pendingDrafts")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteViewPayload"] | None, Field(alias="__typename")
    ] = "DeleteViewPayload"


class DeleteViewsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    pending_drafts: Annotated[Boolean | None, Field(alias="pendingDrafts")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DeleteViewsPayload"] | None, Field(alias="__typename")
    ] = "DeleteViewsPayload"


class DeleteWorkflowsAdminPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DeleteWorkflowsAdminPayload"] | None, Field(alias="__typename")
    ] = "DeleteWorkflowsAdminPayload"


class DetachCustomerPaymentMethodPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["DetachCustomerPaymentMethodPayload"] | None, Field(alias="__typename")
    ] = "DetachCustomerPaymentMethodPayload"


class DisableGlueTaskPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["DisableGlueTaskPayload"] | None, Field(alias="__typename")
    ] = "DisableGlueTaskPayload"


class DisableOldTrackingSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription_id: Annotated[String | None, Field(alias="subscriptionID")] = None
    typename__: Annotated[
        Literal["DisableOldTrackingSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "DisableOldTrackingSubscriptionPayload"


class DiscussionComment(Base):
    body: String
    child_comments: Annotated[DiscussionCommentConnection, Field(alias="childComments")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    deleted_at: Annotated[DateTime | None, Field(alias="deletedAt")] = None
    id: ID
    is_parent: Annotated[Boolean, Field(alias="isParent")]
    parent_comment: Annotated[
        DiscussionComment | None, Field(alias="parentComment")
    ] = None
    poster: User
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    upvotes: Int
    typename__: Annotated[
        Literal["DiscussionComment"] | None, Field(alias="__typename")
    ] = "DiscussionComment"


class DiscussionCommentConnection(Base):
    edges: list[DiscussionCommentEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["DiscussionCommentConnection"] | None, Field(alias="__typename")
    ] = "DiscussionCommentConnection"


class DiscussionCommentEdge(Base):
    cursor: String
    node: DiscussionComment
    typename__: Annotated[
        Literal["DiscussionCommentEdge"] | None, Field(alias="__typename")
    ] = "DiscussionCommentEdge"


class DiscussionThread(Base):
    body: String
    comments: DiscussionCommentConnection
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    deleted_at: Annotated[DateTime | None, Field(alias="deletedAt")] = None
    id: ID
    poster: User
    title: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    upvotes: Int
    typename__: Annotated[
        Literal["DiscussionThread"] | None, Field(alias="__typename")
    ] = "DiscussionThread"


class DiscussionThreadConnection(Base):
    edges: list[DiscussionThreadEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["DiscussionThreadConnection"] | None, Field(alias="__typename")
    ] = "DiscussionThreadConnection"


class DiscussionThreadEdge(Base):
    cursor: String
    node: DiscussionThread
    typename__: Annotated[
        Literal["DiscussionThreadEdge"] | None, Field(alias="__typename")
    ] = "DiscussionThreadEdge"


class DismissedBanner(Base):
    dismissed_at: Annotated[DateTime, Field(alias="dismissedAt")]
    id: ID
    typename__: Annotated[
        Literal["DismissedBanner"] | None, Field(alias="__typename")
    ] = "DismissedBanner"


class Email(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    email_address: Annotated[String, Field(alias="emailAddress")]
    id: ID
    identities: list[Identity]
    type: EmailType
    verified: Boolean
    typename__: Annotated[Literal["Email"] | None, Field(alias="__typename")] = "Email"


class EmailSubscription(AlertSubscription):
    id: ID
    typename__: Annotated[
        Literal["EmailSubscription"] | None, Field(alias="__typename")
    ] = "EmailSubscription"


class EnableGlueTaskPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["EnableGlueTaskPayload"] | None, Field(alias="__typename")
    ] = "EnableGlueTaskPayload"


class Entity(Node):
    access_tokens: Annotated[list[AccessToken], Field(alias="accessTokens")]
    artifact_collection_storage_tree: Annotated[
        ArtifactStorageNodeConnection | None,
        Field(alias="artifactCollectionStorageTree"),
    ] = None
    artifact_collections: Annotated[
        ArtifactCollectionConnection | None, Field(alias="artifactCollections")
    ] = None
    artifact_ttl_duration_seconds: Annotated[
        Int64, Field(alias="artifactTTLDurationSeconds")
    ]
    available: Boolean | None = None
    claimed_entities: Annotated[
        EntityConnection | None, Field(alias="claimedEntities")
    ] = None
    claiming_entity: Annotated[Entity | None, Field(alias="claimingEntity")] = None
    code_saving_enabled: Annotated[Boolean, Field(alias="codeSavingEnabled")]
    compute_hours: Annotated[Duration, Field(alias="computeHours")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    daily_run_count: Annotated[list[Int], Field(alias="dailyRunCount")]
    default_access: Annotated[String, Field(alias="defaultAccess")]
    default_alerts: Annotated[list[Alert], Field(alias="defaultAlerts")]
    default_resource_config: Annotated[
        DefaultResourceConfig | None, Field(alias="defaultResourceConfig")
    ] = None
    default_resource_configs: Annotated[
        DefaultResourceConfigConnection | None, Field(alias="defaultResourceConfigs")
    ] = None
    feature_flags: Annotated[list[FeatureFlag | None], Field(alias="featureFlags")]
    id: ID
    integrations: IntegrationConnection | None = None
    invited_team: Annotated[String | None, Field(alias="invitedTeam")] = None
    invites: InviteConnection | None = None
    is_paid: Annotated[Boolean | None, Field(alias="isPaid")] = None
    is_team: Annotated[Boolean, Field(alias="isTeam")]
    latest_runs: Annotated[RunConnection | None, Field(alias="latestRuns")] = None
    launch_project: Annotated[Project | None, Field(alias="launchProject")] = None
    limits: JSONString | None = None
    member: Member | None = None
    member_count: Annotated[Int, Field(alias="memberCount")]
    members: list[Member]
    name: String
    organization: Organization | None = None
    organization_id: Annotated[ID | None, Field(alias="organizationId")] = None
    photo_upload_url: Annotated[String, Field(alias="photoUploadUrl")]
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    private_only: Annotated[Boolean, Field(alias="privateOnly")]
    profile_view: Annotated[View | None, Field(alias="profileView")] = None
    project: Project | None = None
    project_count: Annotated[Int, Field(alias="projectCount")]
    projects: ProjectConnection | None = None
    protected_aliases: Annotated[list[String], Field(alias="protectedAliases")]
    rate_limits: Annotated[RateLimits | None, Field(alias="rateLimits")] = None
    read_only: Annotated[Boolean | None, Field(alias="readOnly")] = None
    read_only_admin: Annotated[Boolean, Field(alias="readOnlyAdmin")]
    reference_bytes: Annotated[Int64, Field(alias="referenceBytes")]
    repos: RepoConnection | None = None
    secrets: list[Secret]
    settings: EntitySettings
    storage_bytes: Annotated[Int64, Field(alias="storageBytes")]
    storage_tree: Annotated[EntityStorageNode | None, Field(alias="storageTree")] = None
    subscription_id: Annotated[Int | None, Field(alias="subscriptionId")] = None
    tag_categories: Annotated[list[TagCategory], Field(alias="tagCategories")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    user: User | None = None
    user_stats: Annotated[EntityUserConnection | None, Field(alias="userStats")] = None
    views: ViewConnection
    workflows_admins: Annotated[list[User], Field(alias="workflowsAdmins")]
    typename__: Annotated[Literal["Entity"] | None, Field(alias="__typename")] = (
        "Entity"
    )


class EntityConnection(Base):
    edges: list[EntityEdge]
    typename__: Annotated[
        Literal["EntityConnection"] | None, Field(alias="__typename")
    ] = "EntityConnection"


class EntityEdge(Base):
    cursor: String
    node: Entity | None = None
    typename__: Annotated[Literal["EntityEdge"] | None, Field(alias="__typename")] = (
        "EntityEdge"
    )


class EntitySettings(Base):
    default_cloud_region: Annotated[CloudRegion, Field(alias="defaultCloudRegion")]
    disable_magic_link_sharing: Annotated[
        Boolean | None, Field(alias="disableMagicLinkSharing")
    ] = None
    disable_members_edit_artifact_ttl: Annotated[
        Boolean, Field(alias="disableMembersEditArtifactTTL")
    ]
    entity_profile_enabled: Annotated[Boolean, Field(alias="entityProfileEnabled")]
    hidden: Boolean
    hide_activity_calendar: Annotated[Boolean, Field(alias="hideActivityCalendar")]
    members_can_invite: Annotated[Boolean | None, Field(alias="membersCanInvite")] = (
        None
    )
    open_to_matching_org_email_domain_users: Annotated[
        Boolean | None, Field(alias="openToMatchingOrgEmailDomainUsers")
    ] = None
    storage_bucket_info: Annotated[
        StorageBucketInfo | None, Field(alias="storageBucketInfo")
    ] = None
    typename__: Annotated[
        Literal["EntitySettings"] | None, Field(alias="__typename")
    ] = "EntitySettings"


class EntityStorageNode(StorageTreeNode):
    entity: Entity
    entity_id: Annotated[ID, Field(alias="entityID")]
    id: ID
    last_updated_at: Annotated[DateTime | None, Field(alias="lastUpdatedAt")] = None
    name: String
    projects: ProjectStorageNodeConnection
    size: Int64
    typename__: Annotated[
        Literal["EntityStorageNode"] | None, Field(alias="__typename")
    ] = "EntityStorageNode"


class EntityUser(Node):
    id: ID
    run_count: Annotated[Int, Field(alias="runCount")]
    user: User
    typename__: Annotated[Literal["EntityUser"] | None, Field(alias="__typename")] = (
        "EntityUser"
    )


class EntityUserConnection(Base):
    edges: list[EntityUserEdge]
    typename__: Annotated[
        Literal["EntityUserConnection"] | None, Field(alias="__typename")
    ] = "EntityUserConnection"


class EntityUserEdge(Base):
    cursor: String
    node: EntityUser | None = None
    typename__: Annotated[
        Literal["EntityUserEdge"] | None, Field(alias="__typename")
    ] = "EntityUserEdge"


class Event(Base):
    created_at: Annotated[DateTime | None, Field(alias="createdAt")] = None
    description: String | None = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    extra: String | None = None
    id: String | None = None
    kind: String | None = None
    name: String | None = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    state: String | None = None
    url: String | None = None
    user: User | None = None
    typename__: Annotated[Literal["Event"] | None, Field(alias="__typename")] = "Event"


class EventEdge(Base):
    cursor: String
    node: Event | None = None
    typename__: Annotated[Literal["EventEdge"] | None, Field(alias="__typename")] = (
        "EventEdge"
    )


class ExpansionPack(Node):
    expires_at: Annotated[DateTime | None, Field(alias="expiresAt")] = None
    id: ID
    seconds_limit: Annotated[Duration, Field(alias="secondsLimit")]
    seconds_remaining: Annotated[Duration, Field(alias="secondsRemaining")]
    typename__: Annotated[
        Literal["ExpansionPack"] | None, Field(alias="__typename")
    ] = "ExpansionPack"


class ExpansionPackConnection(Base):
    edges: list[ExpansionPackEdge]
    typename__: Annotated[
        Literal["ExpansionPackConnection"] | None, Field(alias="__typename")
    ] = "ExpansionPackConnection"


class ExpansionPackEdge(Base):
    cursor: String
    node: ExpansionPack
    typename__: Annotated[
        Literal["ExpansionPackEdge"] | None, Field(alias="__typename")
    ] = "ExpansionPackEdge"


class Experiment(Node):
    end_at: Annotated[DateTime | None, Field(alias="endAt")] = None
    enrollment_period: Annotated[Int, Field(alias="enrollmentPeriod")]
    experiment_type: Annotated[ExperimentType, Field(alias="experimentType")]
    id: ID
    metadata: JSON | None = None
    name: String
    observational_unit: Annotated[ObservationalUnit, Field(alias="observationalUnit")]
    sample_size: Annotated[Int, Field(alias="sampleSize")]
    start_at: Annotated[DateTime | None, Field(alias="startAt")] = None
    updated_at: Annotated[DateTime, Field(alias="updatedAt")]
    variants: list[Variant]
    typename__: Annotated[Literal["Experiment"] | None, Field(alias="__typename")] = (
        "Experiment"
    )


class FailRunQueueItemPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["FailRunQueueItemPayload"] | None, Field(alias="__typename")
    ] = "FailRunQueueItemPayload"


class FailedPaymentBanners(Base):
    orgs_with_failed_payments: Annotated[
        list[OrganizationDataForFailedPaymentBanner | None],
        Field(alias="orgsWithFailedPayments"),
    ]
    user_id: Annotated[Int, Field(alias="userID")]
    typename__: Annotated[
        Literal["FailedPaymentBanners"] | None, Field(alias="__typename")
    ] = "FailedPaymentBanners"


class FeatureFlag(Base):
    is_enabled: Annotated[Boolean, Field(alias="isEnabled")]
    ramp_key: Annotated[String, Field(alias="rampKey")]
    typename__: Annotated[Literal["FeatureFlag"] | None, Field(alias="__typename")] = (
        "FeatureFlag"
    )


class File(Node):
    archived: Boolean | None = None
    artifact: Artifact | None = None
    created_at: Annotated[DateTime | None, Field(alias="createdAt")] = None
    deleted_at: Annotated[DateTime | None, Field(alias="deletedAt")] = None
    digest: String | None = None
    direct_url: Annotated[String, Field(alias="directUrl")]
    display_name: Annotated[String, Field(alias="displayName")]
    exists: Boolean
    id: ID
    is_reference: Annotated[Boolean, Field(alias="isReference")]
    md5: String | None = None
    mimetype: String | None = None
    name: String
    ndb_id: Annotated[ID | None, Field(alias="ndbId")] = None
    size_bytes: Annotated[Int64, Field(alias="sizeBytes")]
    special: Boolean | None = None
    storage_bucket: Annotated[String | None, Field(alias="storageBucket")] = None
    storage_path: Annotated[String | None, Field(alias="storagePath")] = None
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    upload_multipart_urls: Annotated[
        UploadMultipartUrls | None, Field(alias="uploadMultipartUrls")
    ] = None
    upload_url: Annotated[String | None, Field(alias="uploadUrl")] = None
    url: String | None = None
    typename__: Annotated[Literal["File"] | None, Field(alias="__typename")] = "File"


class FileConnection(Base):
    edges: list[FileEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    typename__: Annotated[
        Literal["FileConnection"] | None, Field(alias="__typename")
    ] = "FileConnection"


class FileEdge(Base):
    cursor: String
    node: File | None = None
    typename__: Annotated[Literal["FileEdge"] | None, Field(alias="__typename")] = (
        "FileEdge"
    )


class FileStorageNode(StorageTreeNode):
    file: File
    file_id: Annotated[ID, Field(alias="fileID")]
    id: ID
    name: String
    size: Int64
    typename__: Annotated[
        Literal["FileStorageNode"] | None, Field(alias="__typename")
    ] = "FileStorageNode"


class FileStorageNodeConnection(Base):
    edges: list[FileStorageNodeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_size: Annotated[Int64, Field(alias="totalSize")]
    typename__: Annotated[
        Literal["FileStorageNodeConnection"] | None, Field(alias="__typename")
    ] = "FileStorageNodeConnection"


class FileStorageNodeEdge(Base):
    cursor: String
    node: FileStorageNode
    typename__: Annotated[
        Literal["FileStorageNodeEdge"] | None, Field(alias="__typename")
    ] = "FileStorageNodeEdge"


class FilterEventTriggeringCondition(Base):
    event_type: Annotated[EventTriggeringConditionType, Field(alias="eventType")]
    filter: String
    typename__: Annotated[
        Literal["FilterEventTriggeringCondition"] | None, Field(alias="__typename")
    ] = "FilterEventTriggeringCondition"


class FinishedRunCondition(Base):
    success: Boolean
    typename__: Annotated[
        Literal["FinishedRunCondition"] | None, Field(alias="__typename")
    ] = "FinishedRunCondition"


class FolderMetadata(Base):
    name: String
    number_of_files: Annotated[Int64, Field(alias="numberOfFiles")]
    size: Int64
    typename__: Annotated[
        Literal["FolderMetadata"] | None, Field(alias="__typename")
    ] = "FolderMetadata"


class Folders(Base):
    folder_list: Annotated[list[FolderMetadata | None], Field(alias="folderList")]
    typename__: Annotated[Literal["Folders"] | None, Field(alias="__typename")] = (
        "Folders"
    )


class ForceCleanArtifactStorageStatsPayload(Base):
    cleaned_artifact_collection_i_ds: Annotated[
        list[ID], Field(alias="cleanedArtifactCollectionIDs")
    ]
    success: Boolean
    typename__: Annotated[
        Literal["ForceCleanArtifactStorageStatsPayload"] | None,
        Field(alias="__typename"),
    ] = "ForceCleanArtifactStorageStatsPayload"


class ForceCleanRunStorageStatsPayload(Base):
    cleaned_project_i_ds: Annotated[list[Int], Field(alias="cleanedProjectIDs")]
    success: Boolean
    typename__: Annotated[
        Literal["ForceCleanRunStorageStatsPayload"] | None, Field(alias="__typename")
    ] = "ForceCleanRunStorageStatsPayload"


class GenerateApiKeyPayload(Base):
    api_key: Annotated[ApiKey | None, Field(alias="apiKey")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["GenerateApiKeyPayload"] | None, Field(alias="__typename")
    ] = "GenerateApiKeyPayload"


class GenerateLocalLicensePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    local_license: Annotated[LocalLicense, Field(alias="localLicense")]
    typename__: Annotated[
        Literal["GenerateLocalLicensePayload"] | None, Field(alias="__typename")
    ] = "GenerateLocalLicensePayload"


class GenericWebhookIntegration(Integration):
    access_token_ref: Annotated[String | None, Field(alias="accessTokenRef")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    name: String
    secret_ref: Annotated[String | None, Field(alias="secretRef")] = None
    url_endpoint: Annotated[String, Field(alias="urlEndpoint")]
    typename__: Annotated[
        Literal["GenericWebhookIntegration"] | None, Field(alias="__typename")
    ] = "GenericWebhookIntegration"


class GenericWebhookTriggeredAction(Base):
    integration: Integration
    request_payload: Annotated[JSONString | None, Field(alias="requestPayload")] = None
    typename__: Annotated[
        Literal["GenericWebhookTriggeredAction"] | None, Field(alias="__typename")
    ] = "GenericWebhookTriggeredAction"


class GitHubOAuthIntegration(Integration):
    id: ID
    typename__: Annotated[
        Literal["GitHubOAuthIntegration"] | None, Field(alias="__typename")
    ] = "GitHubOAuthIntegration"


class GitInfo(Base):
    commit: String | None = None
    remote: String | None = None
    typename__: Annotated[Literal["GitInfo"] | None, Field(alias="__typename")] = (
        "GitInfo"
    )


class GlueManager(Base):
    registered_tasks: Annotated[GlueTaskConnection, Field(alias="registeredTasks")]
    task_config: Annotated[GlueTaskConfig | None, Field(alias="taskConfig")] = None
    task_types: Annotated[list[String], Field(alias="taskTypes")]
    typename__: Annotated[Literal["GlueManager"] | None, Field(alias="__typename")] = (
        "GlueManager"
    )


class GlueRun(Base):
    arguments: JSONString | None = None
    checkpoint: JSONString | None = None
    errors: JSONString | None = None
    id: ID
    retries: Int
    run_at: Annotated[DateTime, Field(alias="runAt")]
    runtime_ms: Annotated[Int64, Field(alias="runtimeMS")]
    succeeded: Boolean
    task: GlueTask
    typename__: Annotated[Literal["GlueRun"] | None, Field(alias="__typename")] = (
        "GlueRun"
    )


class GlueRunConnection(Base):
    edges: list[GlueRunEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["GlueRunConnection"] | None, Field(alias="__typename")
    ] = "GlueRunConnection"


class GlueRunEdge(Base):
    cursor: String
    node: GlueRun
    typename__: Annotated[Literal["GlueRunEdge"] | None, Field(alias="__typename")] = (
        "GlueRunEdge"
    )


class GlueTask(Base):
    arguments: JSONString | None = None
    checkpoint: JSONString | None = None
    glue_runs: Annotated[GlueRunConnection, Field(alias="glueRuns")]
    id: ID
    last_run_at: Annotated[DateTime | None, Field(alias="lastRunAt")] = None
    name: String
    status: String
    strategy_metadata: Annotated[String, Field(alias="strategyMetadata")]
    strategy_type: Annotated[String, Field(alias="strategyType")]
    task_type: Annotated[String, Field(alias="taskType")]
    typename__: Annotated[Literal["GlueTask"] | None, Field(alias="__typename")] = (
        "GlueTask"
    )


class GlueTaskConfig(Base):
    arguments_schema: Annotated[JSONString, Field(alias="argumentsSchema")]
    checkpoint_schema: Annotated[JSONString, Field(alias="checkpointSchema")]
    default_arguments: Annotated[JSONString, Field(alias="defaultArguments")]
    typename__: Annotated[
        Literal["GlueTaskConfig"] | None, Field(alias="__typename")
    ] = "GlueTaskConfig"


class GlueTaskConnection(Base):
    edges: list[GlueTaskEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["GlueTaskConnection"] | None, Field(alias="__typename")
    ] = "GlueTaskConnection"


class GlueTaskEdge(Base):
    cursor: String
    node: GlueTask
    typename__: Annotated[Literal["GlueTaskEdge"] | None, Field(alias="__typename")] = (
        "GlueTaskEdge"
    )


class Identity(Base):
    email_identity_verified: Annotated[Boolean, Field(alias="emailIdentityVerified")]
    id: ID
    provider: String | None = None
    typename__: Annotated[Literal["Identity"] | None, Field(alias="__typename")] = (
        "Identity"
    )


class ImageUrl(Base):
    path: String | None = None
    public_url: Annotated[String | None, Field(alias="publicUrl")] = None
    url: String | None = None
    typename__: Annotated[Literal["ImageUrl"] | None, Field(alias="__typename")] = (
        "ImageUrl"
    )


class InputArtifactConnection(ArtifactConnectionType):
    edges: list[InputArtifactEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["InputArtifactConnection"] | None, Field(alias="__typename")
    ] = "InputArtifactConnection"


class InputArtifactEdge(ArtifactEdgeType):
    cursor: String
    node: Artifact | None = None
    used_as: Annotated[list[String], Field(alias="usedAs")]
    typename__: Annotated[
        Literal["InputArtifactEdge"] | None, Field(alias="__typename")
    ] = "InputArtifactEdge"


class InsertGalleryDiscussionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["InsertGalleryDiscussionPayload"] | None, Field(alias="__typename")
    ] = "InsertGalleryDiscussionPayload"


class InsertSecretPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["InsertSecretPayload"] | None, Field(alias="__typename")
    ] = "InsertSecretPayload"


class IntegrationConnection(Base):
    edges: list[IntegrationEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["IntegrationConnection"] | None, Field(alias="__typename")
    ] = "IntegrationConnection"


class IntegrationEdge(Base):
    cursor: String
    node: Integration | None = None
    typename__: Annotated[
        Literal["IntegrationEdge"] | None, Field(alias="__typename")
    ] = "IntegrationEdge"


class Invite(Base):
    accepted: Boolean | None = None
    created_at: Annotated[DateTime | None, Field(alias="createdAt")] = None
    email: String | None = None
    entity: Entity | None = None
    expires_at: Annotated[DateTime | None, Field(alias="expiresAt")] = None
    from_user: Annotated[User | None, Field(alias="fromUser")] = None
    id: ID
    name: String
    organization: Organization | None = None
    role: String
    to_user: Annotated[User | None, Field(alias="toUser")] = None
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[Literal["Invite"] | None, Field(alias="__typename")] = (
        "Invite"
    )


class InviteConnection(Base):
    edges: list[InviteEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["InviteConnection"] | None, Field(alias="__typename")
    ] = "InviteConnection"


class InviteEdge(Base):
    cursor: String
    node: Invite | None = None
    typename__: Annotated[Literal["InviteEdge"] | None, Field(alias="__typename")] = (
        "InviteEdge"
    )


class JobSetDiff(Base):
    complete: Boolean
    metadata: JSON | None = None
    remove_jobs: Annotated[list[ID], Field(alias="removeJobs")]
    upsert_jobs: Annotated[list[RunQueueItem], Field(alias="upsertJobs")]
    version: Int
    typename__: Annotated[Literal["JobSetDiff"] | None, Field(alias="__typename")] = (
        "JobSetDiff"
    )


class LaunchAgent(Base):
    agent_config: Annotated[JSONString | None, Field(alias="agentConfig")] = None
    agent_status: Annotated[String, Field(alias="agentStatus")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    heartbeat_at: Annotated[DateTime | None, Field(alias="heartbeatAt")] = None
    hostname: String
    id: ID
    name: String
    run_queues: Annotated[list[ID], Field(alias="runQueues")]
    stop_polling: Annotated[Boolean, Field(alias="stopPolling")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    version: String | None = None
    typename__: Annotated[Literal["LaunchAgent"] | None, Field(alias="__typename")] = (
        "LaunchAgent"
    )


class LeaseJobSetItemPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["LeaseJobSetItemPayload"] | None, Field(alias="__typename")
    ] = "LeaseJobSetItemPayload"


class LicenseClaims(Base):
    expires_at: Annotated[Int64, Field(alias="expiresAt")]
    flags: list[String]
    seats: Int
    storage_gigs: Annotated[Int, Field(alias="storageGigs")]
    teams: Int
    typename__: Annotated[
        Literal["LicenseClaims"] | None, Field(alias="__typename")
    ] = "LicenseClaims"


class LicenseExpirationUI(Base):
    banner_days_remaining: Annotated[Int, Field(alias="bannerDaysRemaining")]
    banner_total_days: Annotated[Int, Field(alias="bannerTotalDays")]
    renew_url: Annotated[String | None, Field(alias="renewUrl")] = None
    typename__: Annotated[
        Literal["LicenseExpirationUI"] | None, Field(alias="__typename")
    ] = "LicenseExpirationUI"


class LinkArtifactPayload(Base):
    aliases: list[ArtifactCollectionAlias]
    artifact_collection_id: Annotated[ID, Field(alias="artifactCollectionID")]
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    version_index: Annotated[Int | None, Field(alias="versionIndex")] = None
    typename__: Annotated[
        Literal["LinkArtifactPayload"] | None, Field(alias="__typename")
    ] = "LinkArtifactPayload"


class LinkTeamToOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["LinkTeamToOrganizationPayload"] | None, Field(alias="__typename")
    ] = "LinkTeamToOrganizationPayload"


class LocalLicense(Node):
    claims: LicenseClaims
    contact_email: Annotated[String, Field(alias="contactEmail")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    customer_name: Annotated[String, Field(alias="customerName")]
    expires_at: Annotated[DateTime, Field(alias="expiresAt")]
    generated_by: Annotated[User, Field(alias="generatedBy")]
    id: ID
    license: String
    notes: String | None = None
    uid: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[Literal["LocalLicense"] | None, Field(alias="__typename")] = (
        "LocalLicense"
    )


class LocalVersionInfo(Base):
    latest_version_string: Annotated[String, Field(alias="latestVersionString")]
    out_of_date: Annotated[Boolean, Field(alias="outOfDate")]
    version_on_this_instance_string: Annotated[
        String, Field(alias="versionOnThisInstanceString")
    ]
    typename__: Annotated[
        Literal["LocalVersionInfo"] | None, Field(alias="__typename")
    ] = "LocalVersionInfo"


class LogLine(Base):
    id: String | None = None
    level: String | None = None
    line: String | None = None
    number: Int | None = None
    timestamp: String | None = None
    typename__: Annotated[Literal["LogLine"] | None, Field(alias="__typename")] = (
        "LogLine"
    )


class LogLineConnection(Base):
    edges: list[LogLineEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["LogLineConnection"] | None, Field(alias="__typename")
    ] = "LogLineConnection"


class LogLineEdge(Base):
    cursor: String
    node: LogLine
    typename__: Annotated[Literal["LogLineEdge"] | None, Field(alias="__typename")] = (
        "LogLineEdge"
    )


class Member(Base):
    o_auth_clients: Annotated[list[OAuthClient], Field(alias="OAuthClients")]
    account_type: Annotated[String | None, Field(alias="accountType")] = None
    admin: Boolean | None = None
    api_key: Annotated[String | None, Field(alias="apiKey")] = None
    email: String | None = None
    id: String | None = None
    member_role: Annotated[Role | None, Field(alias="memberRole")] = None
    name: String
    pending: Boolean | None = None
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    role: String | None = None
    username: String | None = None
    typename__: Annotated[Literal["Member"] | None, Field(alias="__typename")] = (
        "Member"
    )


class MigrateOldHourOverageSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_subscription_id: Annotated[String | None, Field(alias="newSubscriptionID")] = (
        None
    )
    old_subscription_id: Annotated[String | None, Field(alias="oldSubscriptionID")] = (
        None
    )
    typename__: Annotated[
        Literal["MigrateOldHourOverageSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "MigrateOldHourOverageSubscriptionPayload"


class MigrateOldStorageSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_subscription_id: Annotated[String | None, Field(alias="newSubscriptionID")] = (
        None
    )
    old_subscription_id: Annotated[String | None, Field(alias="oldSubscriptionID")] = (
        None
    )
    typename__: Annotated[
        Literal["MigrateOldStorageSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "MigrateOldStorageSubscriptionPayload"


class ModifyRunsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    runs: list[Run | None]
    runs_sql: Annotated[list[Run | None], Field(alias="runsSQL")]
    typename__: Annotated[
        Literal["ModifyRunsPayload"] | None, Field(alias="__typename")
    ] = "ModifyRunsPayload"


class MoveArtifactAliasAction(ArtifactAction):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    destination_artifact: Annotated[
        Artifact | None, Field(alias="destinationArtifact")
    ] = None
    id: ID
    initiator: Initiator
    typename__: Annotated[
        Literal["MoveArtifactAliasAction"] | None, Field(alias="__typename")
    ] = "MoveArtifactAliasAction"


class MoveArtifactCollectionPayload(Base):
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["MoveArtifactCollectionPayload"] | None, Field(alias="__typename")
    ] = "MoveArtifactCollectionPayload"


class MoveProjectsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    tasks: list[Task]
    typename__: Annotated[
        Literal["MoveProjectsPayload"] | None, Field(alias="__typename")
    ] = "MoveProjectsPayload"


class MoveRunsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    task: Task
    typename__: Annotated[
        Literal["MoveRunsPayload"] | None, Field(alias="__typename")
    ] = "MoveRunsPayload"


class MoveViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["MoveViewPayload"] | None, Field(alias="__typename")
    ] = "MoveViewPayload"


class NewsletterSubscription(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    email: String | None = None
    id: ID
    user: User | None = None
    typename__: Annotated[
        Literal["NewsletterSubscription"] | None, Field(alias="__typename")
    ] = "NewsletterSubscription"


class NewsletterSubscriptionConnection(Base):
    edges: list[NewsletterSubscriptionEdge]
    typename__: Annotated[
        Literal["NewsletterSubscriptionConnection"] | None, Field(alias="__typename")
    ] = "NewsletterSubscriptionConnection"


class NewsletterSubscriptionEdge(Base):
    cursor: String
    node: NewsletterSubscription | None = None
    typename__: Annotated[
        Literal["NewsletterSubscriptionEdge"] | None, Field(alias="__typename")
    ] = "NewsletterSubscriptionEdge"


class NotificationTriggeredAction(Base):
    integration: Integration
    message: String | None = None
    severity: AlertSeverity | None = None
    title: String | None = None
    typename__: Annotated[
        Literal["NotificationTriggeredAction"] | None, Field(alias="__typename")
    ] = "NotificationTriggeredAction"


class NotifyScriptableRunAlertPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["NotifyScriptableRunAlertPayload"] | None, Field(alias="__typename")
    ] = "NotifyScriptableRunAlertPayload"


class OAuthClient(Base):
    id: String
    subject: String
    typename__: Annotated[Literal["OAuthClient"] | None, Field(alias="__typename")] = (
        "OAuthClient"
    )


class OAuthProvider(Base):
    id: ID
    issuer_url: Annotated[String, Field(alias="issuerUrl")]
    typename__: Annotated[
        Literal["OAuthProvider"] | None, Field(alias="__typename")
    ] = "OAuthProvider"


class OrgActivityTimeline(ActivityDuration):
    end_at: Annotated[DateTime, Field(alias="endAt")]
    num_active_users: Annotated[Int, Field(alias="numActiveUsers")]
    start_at: Annotated[DateTime, Field(alias="startAt")]
    typename__: Annotated[
        Literal["OrgActivityTimeline"] | None, Field(alias="__typename")
    ] = "OrgActivityTimeline"


class Organization(Node):
    o_auth_providers: Annotated[list[OAuthProvider], Field(alias="OAuthProviders")]
    activity: list[OrgActivityTimeline]
    artifact_collections: Annotated[
        ArtifactCollectionConnection | None, Field(alias="artifactCollections")
    ] = None
    artifact_sequences: Annotated[
        ArtifactSequenceConnection | None, Field(alias="artifactSequences")
    ] = None
    available: Boolean
    billing_user: Annotated[User | None, Field(alias="billingUser")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    feature_flags: Annotated[list[FeatureFlag | None], Field(alias="featureFlags")]
    flags: JSONString | None = None
    id: ID
    latest_runs: Annotated[RunConnection | None, Field(alias="latestRuns")] = None
    members: list[OrganizationMember]
    name: String
    org_entity: Annotated[Entity | None, Field(alias="orgEntity")] = None
    org_type: Annotated[OrgType, Field(alias="orgType")]
    pending_invites: Annotated[list[Invite], Field(alias="pendingInvites")]
    projects: ProjectConnection | None = None
    roles: list[Role]
    seat_availability: Annotated[
        OrganizationSeatAvailability, Field(alias="seatAvailability")
    ]
    stripe_billing_info: Annotated[
        StripeBillingInfo | None, Field(alias="stripeBillingInfo")
    ] = None
    stripe_invoices: Annotated[list[StripeInvoice], Field(alias="stripeInvoices")]
    stripe_payment_methods: Annotated[
        list[StripePaymentMethod], Field(alias="stripePaymentMethods")
    ]
    subscriptions: list[OrganizationSubscription]
    teams: list[Entity]
    usage: list[OrganizationUsage]
    used_seats: Annotated[Int, Field(alias="usedSeats")]
    used_view_only_seats: Annotated[Int, Field(alias="usedViewOnlySeats")]
    views: ViewConnection
    typename__: Annotated[Literal["Organization"] | None, Field(alias="__typename")] = (
        "Organization"
    )


class OrganizationConnection(Base):
    edges: list[OrganizationEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["OrganizationConnection"] | None, Field(alias="__typename")
    ] = "OrganizationConnection"


class OrganizationDataForFailedPaymentBanner(Base):
    billing_email: Annotated[String, Field(alias="billingEmail")]
    days_until_cancellation: Annotated[Int, Field(alias="daysUntilCancellation")]
    id: ID
    is_billing_user: Annotated[Boolean, Field(alias="isBillingUser")]
    is_collection_method_ach: Annotated[Boolean, Field(alias="isCollectionMethodACH")]
    org_id: Annotated[Int, Field(alias="orgId")]
    org_name: Annotated[String, Field(alias="orgName")]
    typename__: Annotated[
        Literal["OrganizationDataForFailedPaymentBanner"] | None,
        Field(alias="__typename"),
    ] = "OrganizationDataForFailedPaymentBanner"


class OrganizationEdge(Base):
    cursor: String
    node: Organization
    typename__: Annotated[
        Literal["OrganizationEdge"] | None, Field(alias="__typename")
    ] = "OrganizationEdge"


class OrganizationMember(Base):
    admin: Boolean
    email: String
    id: String
    name: String
    org_id: Annotated[ID, Field(alias="orgID")]
    photo_url: Annotated[String, Field(alias="photoUrl")]
    role: String
    teams: EntityConnection | None = None
    user: User
    username: String
    typename__: Annotated[
        Literal["OrganizationMember"] | None, Field(alias="__typename")
    ] = "OrganizationMember"


class OrganizationSeatAvailability(Base):
    expires_at: Annotated[DateTime | None, Field(alias="expiresAt")] = None
    seats: Int
    view_only_seats: Annotated[Int, Field(alias="viewOnlySeats")]
    typename__: Annotated[
        Literal["OrganizationSeatAvailability"] | None, Field(alias="__typename")
    ] = "OrganizationSeatAvailability"


class OrganizationSubscription(Base):
    available_seats_to_purchase: Annotated[Int, Field(alias="availableSeatsToPurchase")]
    billing_period_end: Annotated[DateTime | None, Field(alias="billingPeriodEnd")] = (
        None
    )
    billing_period_start: Annotated[
        DateTime | None, Field(alias="billingPeriodStart")
    ] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    expansion_packs: Annotated[ExpansionPackConnection, Field(alias="expansionPacks")]
    expires_at: Annotated[DateTime | None, Field(alias="expiresAt")] = None
    id: ID
    is_automatic_upgrade: Annotated[Boolean, Field(alias="isAutomaticUpgrade")]
    next_plans: Annotated[list[Plan], Field(alias="nextPlans")]
    plan: Plan
    privileges: JSON
    seats: Int
    status: OrganizationSubscriptionStatus
    stripe_subscription_id: Annotated[
        String | None, Field(alias="stripeSubscriptionId")
    ] = None
    subscription_type: Annotated[
        OrganizationSubscriptionType, Field(alias="subscriptionType")
    ]
    threshold_crossed_at: Annotated[
        DateTime | None, Field(alias="thresholdCrossedAt")
    ] = None
    upgraded_at: Annotated[DateTime | None, Field(alias="upgradedAt")] = None
    typename__: Annotated[
        Literal["OrganizationSubscription"] | None, Field(alias="__typename")
    ] = "OrganizationSubscription"


class OrganizationUsage(Base):
    end: DateTime
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    start: DateTime
    value: Int64
    typename__: Annotated[
        Literal["OrganizationUsage"] | None, Field(alias="__typename")
    ] = "OrganizationUsage"


class PageInfo(Base):
    end_cursor: Annotated[String | None, Field(alias="endCursor")] = None
    has_next_page: Annotated[Boolean, Field(alias="hasNextPage")]
    has_previous_page: Annotated[Boolean, Field(alias="hasPreviousPage")]
    start_cursor: Annotated[String | None, Field(alias="startCursor")] = None
    typename__: Annotated[Literal["PageInfo"] | None, Field(alias="__typename")] = (
        "PageInfo"
    )


class ParquetHistory(Base):
    live_data: Annotated[list[JSON], Field(alias="liveData")]
    parquet_urls: Annotated[list[String], Field(alias="parquetUrls")]
    typename__: Annotated[
        Literal["ParquetHistory"] | None, Field(alias="__typename")
    ] = "ParquetHistory"


class PaymentMetadata(Base):
    org_name: Annotated[String | None, Field(alias="orgName")] = None
    should_upgrade_to_teams: Annotated[
        Boolean | None, Field(alias="shouldUpgradeToTeams")
    ] = None
    username: String | None = None
    typename__: Annotated[
        Literal["PaymentMetadata"] | None, Field(alias="__typename")
    ] = "PaymentMetadata"


class PaymentMethod(Base):
    card_type: Annotated[String | None, Field(alias="cardType")] = None
    ending_in: Annotated[String | None, Field(alias="endingIn")] = None
    id: ID
    type: String
    typename__: Annotated[
        Literal["PaymentMethod"] | None, Field(alias="__typename")
    ] = "PaymentMethod"


class Plan(Base):
    billing_interval: Annotated[String | None, Field(alias="billingInterval")] = None
    default_privileges: Annotated[JSON, Field(alias="defaultPrivileges")]
    display_name: Annotated[String, Field(alias="displayName")]
    id: ID
    max_seats: Annotated[Int, Field(alias="maxSeats")]
    name: String
    plan_type: Annotated[PlanType, Field(alias="planType")]
    plan_visibility: Annotated[PlanVisibility, Field(alias="planVisibility")]
    stripe_plan_id: Annotated[String | None, Field(alias="stripePlanId")] = None
    stripe_price: Annotated[StripePrice | None, Field(alias="stripePrice")] = None
    unit_price: Annotated[Int | None, Field(alias="unitPrice")] = None
    typename__: Annotated[Literal["Plan"] | None, Field(alias="__typename")] = "Plan"


class PopFromRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run_queue_item_id: Annotated[ID | None, Field(alias="runQueueItemId")] = None
    run_spec: Annotated[JSON | None, Field(alias="runSpec")] = None
    typename__: Annotated[
        Literal["PopFromRunQueuePayload"] | None, Field(alias="__typename")
    ] = "PopFromRunQueuePayload"


class PreviewFriendlyURL(Base):
    url: Annotated[String, Field(alias="URL")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    view_id: Annotated[ID, Field(alias="viewID")]
    typename__: Annotated[
        Literal["PreviewFriendlyURL"] | None, Field(alias="__typename")
    ] = "PreviewFriendlyURL"


class PreviewableLink(Base):
    url: Annotated[String, Field(alias="URL")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    resource_id: Annotated[ID, Field(alias="resourceID")]
    resource_type: Annotated[PreviewableLinkResourceType, Field(alias="resourceType")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[
        Literal["PreviewableLink"] | None, Field(alias="__typename")
    ] = "PreviewableLink"


class Project(Node):
    access: String | None = None
    all_views: Annotated[ViewConnection | None, Field(alias="allViews")] = None
    allow_all_artifact_types_in_registry: Annotated[
        Boolean, Field(alias="allowAllArtifactTypesInRegistry")
    ]
    artifact: Artifact | None = None
    artifact_collection: Annotated[
        ArtifactCollection | None, Field(alias="artifactCollection")
    ] = None
    artifact_collections: Annotated[
        ArtifactCollectionConnection | None, Field(alias="artifactCollections")
    ] = None
    artifact_type: Annotated[ArtifactType | None, Field(alias="artifactType")] = None
    artifact_types: Annotated[ArtifactTypeConnection, Field(alias="artifactTypes")]
    artifacts: list[Artifact]
    benchmark_discussion_threads: Annotated[
        DiscussionThreadConnection, Field(alias="benchmarkDiscussionThreads")
    ]
    benchmark_runs: Annotated[
        BenchmarkRunConnection | None, Field(alias="benchmarkRuns")
    ] = None
    benchmark_submissions: Annotated[
        BenchmarkRunConnection | None, Field(alias="benchmarkSubmissions")
    ] = None
    bucket: Run | None = None
    bucket_count: Annotated[Int | None, Field(alias="bucketCount")] = None
    buckets: RunConnection | None = None
    compute_hours: Annotated[Duration, Field(alias="computeHours")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    default_resource_configs: Annotated[
        DefaultResourceConfigConnection | None, Field(alias="defaultResourceConfigs")
    ] = None
    description: String | None = None
    docker_image: Annotated[String | None, Field(alias="dockerImage")] = None
    entity: Entity
    entity_id: Annotated[Int | None, Field(alias="entityId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    featured: Int | None = None
    fields: ProjectFieldConnection
    git_hub_submission_repo: Annotated[
        String | None, Field(alias="gitHubSubmissionRepo")
    ] = None
    group_path: Annotated[String | None, Field(alias="groupPath")] = None
    id: ID
    internal_id: Annotated[ID, Field(alias="internalId")]
    is_benchmark: Annotated[Boolean, Field(alias="isBenchmark")]
    is_published: Annotated[Boolean, Field(alias="isPublished")]
    last_active: Annotated[DateTime | None, Field(alias="lastActive")] = None
    launch_agents: Annotated[list[LaunchAgent], Field(alias="launchAgents")]
    linked_benchmark: Annotated[Project | None, Field(alias="linkedBenchmark")] = None
    media: String | None = None
    members: list[ProjectMember]
    name: String
    ndb_id: Annotated[ID | None, Field(alias="ndbId")] = None
    parameter_importance: Annotated[JSON, Field(alias="parameterImportance")]
    path_counts: Annotated[JSONString | None, Field(alias="pathCounts")] = None
    public: Boolean | None = None
    rate_limits: Annotated[RateLimits | None, Field(alias="rateLimits")] = None
    read_only: Annotated[Boolean | None, Field(alias="readOnly")] = None
    repo: String | None = None
    request_subscribe: Annotated[Boolean | None, Field(alias="requestSubscribe")] = None
    run: Run | None = None
    run_active_count: Annotated[Int, Field(alias="runActiveCount")]
    run_count: Annotated[Int, Field(alias="runCount")]
    run_field_values: Annotated[
        RunFieldValueConnection | None, Field(alias="runFieldValues")
    ] = None
    run_group: Annotated[RunGroup | None, Field(alias="runGroup")] = None
    run_key_suggestions: Annotated[
        list[RunKeySuggestion], Field(alias="runKeySuggestions")
    ]
    run_output_artifacts_count: Annotated[Int, Field(alias="runOutputArtifactsCount")]
    run_queue: Annotated[RunQueue | None, Field(alias="runQueue")] = None
    run_queues: Annotated[list[RunQueue], Field(alias="runQueues")]
    run_tags: Annotated[RunTagConnection | None, Field(alias="runTags")] = None
    runs: RunConnection | None = None
    storage_bytes: Annotated[Int64, Field(alias="storageBytes")]
    sub_group_path: Annotated[String | None, Field(alias="subGroupPath")] = None
    summary_metrics: Annotated[JSONString | None, Field(alias="summaryMetrics")] = None
    sweep: Sweep | None = None
    sweeps: SweepConnection | None = None
    tag_counts: Annotated[list[RunTagCount], Field(alias="tagCounts")]
    tags: list[RunTag]
    total_artifact_collections: Annotated[Int, Field(alias="totalArtifactCollections")]
    total_run_time: Annotated[Float | None, Field(alias="totalRunTime")] = None
    total_runs: Annotated[Int | None, Field(alias="totalRuns")] = None
    total_runs_with_group: Annotated[Int, Field(alias="totalRunsWithGroup")]
    total_runs_with_job_type: Annotated[Int, Field(alias="totalRunsWithJobType")]
    total_sweeps: Annotated[Int, Field(alias="totalSweeps")]
    total_users: Annotated[Int | None, Field(alias="totalUsers")] = None
    triggers: list[Trigger]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    user: User | None = None
    user_id: Annotated[Int | None, Field(alias="userId")] = None
    value_counts: Annotated[JSONString | None, Field(alias="valueCounts")] = None
    views: JSONString | None = None
    typename__: Annotated[Literal["Project"] | None, Field(alias="__typename")] = (
        "Project"
    )


class ProjectConnection(Base):
    edges: list[ProjectEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ProjectConnection"] | None, Field(alias="__typename")
    ] = "ProjectConnection"


class ProjectEdge(Base):
    cursor: String
    node: Project | None = None
    typename__: Annotated[Literal["ProjectEdge"] | None, Field(alias="__typename")] = (
        "ProjectEdge"
    )


class ProjectField(Base):
    path: String
    type: String
    typename__: Annotated[Literal["ProjectField"] | None, Field(alias="__typename")] = (
        "ProjectField"
    )


class ProjectFieldConnection(Base):
    edges: list[ProjectFieldEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["ProjectFieldConnection"] | None, Field(alias="__typename")
    ] = "ProjectFieldConnection"


class ProjectFieldEdge(Base):
    cursor: String
    node: ProjectField
    typename__: Annotated[
        Literal["ProjectFieldEdge"] | None, Field(alias="__typename")
    ] = "ProjectFieldEdge"


class ProjectMember(Base):
    account_type: Annotated[String, Field(alias="accountType")]
    email: String | None = None
    id: ID
    name: String | None = None
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    project_role_is_inherited: Annotated[Boolean, Field(alias="projectRoleIsInherited")]
    role: Role
    username: String | None = None
    typename__: Annotated[
        Literal["ProjectMember"] | None, Field(alias="__typename")
    ] = "ProjectMember"


class ProjectStorageNode(StorageTreeNode):
    artifact_sequences: Annotated[
        ArtifactSequenceStorageNodeConnection, Field(alias="artifactSequences")
    ]
    artifact_types: Annotated[
        list[ArtifactTypeStorageNode], Field(alias="artifactTypes")
    ]
    id: ID
    name: String
    project: Project
    project_id: Annotated[ID, Field(alias="projectID")]
    runs: RunStorageNodeConnection
    size: Int64
    typename__: Annotated[
        Literal["ProjectStorageNode"] | None, Field(alias="__typename")
    ] = "ProjectStorageNode"


class ProjectStorageNodeConnection(Base):
    edges: list[ProjectStorageNodeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_size: Annotated[Int64, Field(alias="totalSize")]
    typename__: Annotated[
        Literal["ProjectStorageNodeConnection"] | None, Field(alias="__typename")
    ] = "ProjectStorageNodeConnection"


class ProjectStorageNodeEdge(Base):
    cursor: String
    node: ProjectStorageNode
    typename__: Annotated[
        Literal["ProjectStorageNodeEdge"] | None, Field(alias="__typename")
    ] = "ProjectStorageNodeEdge"


class PublicImageUploadInfo(Base):
    image_url: Annotated[String, Field(alias="imageUrl")]
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    upload_url: Annotated[String, Field(alias="uploadUrl")]
    typename__: Annotated[
        Literal["PublicImageUploadInfo"] | None, Field(alias="__typename")
    ] = "PublicImageUploadInfo"


class PublishBenchmarkRunPayload(Base):
    benchmark_run: Annotated[BenchmarkRun, Field(alias="benchmarkRun")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["PublishBenchmarkRunPayload"] | None, Field(alias="__typename")
    ] = "PublishBenchmarkRunPayload"


class PurgeUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["PurgeUserPayload"] | None, Field(alias="__typename")
    ] = "PurgeUserPayload"


class PushToRunQueueByNamePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    run_spec: Annotated[JSONString, Field(alias="runSpec")]
    typename__: Annotated[
        Literal["PushToRunQueueByNamePayload"] | None, Field(alias="__typename")
    ] = "PushToRunQueueByNamePayload"


class PushToRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    run_spec: Annotated[JSONString, Field(alias="runSpec")]
    typename__: Annotated[
        Literal["PushToRunQueuePayload"] | None, Field(alias="__typename")
    ] = "PushToRunQueuePayload"


class QueueJobTriggeredAction(Base):
    queue: RunQueue | None = None
    template: JSONString
    typename__: Annotated[
        Literal["QueueJobTriggeredAction"] | None, Field(alias="__typename")
    ] = "QueueJobTriggeredAction"


class RampManager(Base):
    setting: RampSettingEdge | None = None
    settings: RampSettingConnection
    typename__: Annotated[Literal["RampManager"] | None, Field(alias="__typename")] = (
        "RampManager"
    )


class RampSettingConnection(Base):
    edges: list[RampSettingEdge]
    typename__: Annotated[
        Literal["RampSettingConnection"] | None, Field(alias="__typename")
    ] = "RampSettingConnection"


class RampSettingEdge(Base):
    description: String
    group: String
    id_is_ramped: Annotated[Boolean, Field(alias="idIsRamped")]
    name: String
    ramp_id_type: Annotated[RampIDType, Field(alias="rampIDType")]
    ramp_type: Annotated[RampType, Field(alias="rampType")]
    stores: list[RampThresholdStore]
    typename__: Annotated[
        Literal["RampSettingEdge"] | None, Field(alias="__typename")
    ] = "RampSettingEdge"


class RampSettingThreshold(Base):
    check_id: Annotated[String, Field(alias="checkId")]
    display_check_id: Annotated[String, Field(alias="displayCheckID")]
    threshold: Float
    typename__: Annotated[
        Literal["RampSettingThreshold"] | None, Field(alias="__typename")
    ] = "RampSettingThreshold"


class RampThresholdStore(Base):
    name: String
    thresholds: list[RampSettingThreshold]
    typename__: Annotated[
        Literal["RampThresholdStore"] | None, Field(alias="__typename")
    ] = "RampThresholdStore"


class RateLimits(Base):
    filestream: Int
    filestream_count: Annotated[Int, Field(alias="filestreamCount")]
    filestream_size: Annotated[Int, Field(alias="filestreamSize")]
    graphql: Int
    sdk_graphql: Annotated[Int, Field(alias="sdkGraphql")]
    typename__: Annotated[Literal["RateLimits"] | None, Field(alias="__typename")] = (
        "RateLimits"
    )


class RemoveProtectedAliasesPayload(Base):
    aliases: list[String]
    typename__: Annotated[
        Literal["RemoveProtectedAliasesPayload"] | None, Field(alias="__typename")
    ] = "RemoveProtectedAliasesPayload"


class RemoveUserFromOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["RemoveUserFromOrganizationPayload"] | None, Field(alias="__typename")
    ] = "RemoveUserFromOrganizationPayload"


class Repo(Node):
    display_name: Annotated[String, Field(alias="displayName")]
    entity: Entity
    id: ID
    typename__: Annotated[Literal["Repo"] | None, Field(alias="__typename")] = "Repo"


class RepoConnection(Base):
    edges: list[RepoEdge]
    typename__: Annotated[
        Literal["RepoConnection"] | None, Field(alias="__typename")
    ] = "RepoConnection"


class RepoEdge(Base):
    cursor: String
    node: Repo | None = None
    typename__: Annotated[Literal["RepoEdge"] | None, Field(alias="__typename")] = (
        "RepoEdge"
    )


class RepoInsightsRowConnection(Base):
    edges: list[RowEdge]
    is_normalized_user_count: Annotated[Boolean, Field(alias="isNormalizedUserCount")]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    schema_: Annotated[JSON, Field(alias="schema")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["RepoInsightsRowConnection"] | None, Field(alias="__typename")
    ] = "RepoInsightsRowConnection"


class ResendEmailVerificationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["ResendEmailVerificationPayload"] | None, Field(alias="__typename")
    ] = "ResendEmailVerificationPayload"


class ResetPasswordPayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["ResetPasswordPayload"] | None, Field(alias="__typename")
    ] = "ResetPasswordPayload"


class RetryStripeOpenInvoicesByOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["RetryStripeOpenInvoicesByOrganizationPayload"] | None,
        Field(alias="__typename"),
    ] = "RetryStripeOpenInvoicesByOrganizationPayload"


class RevokeAccessTokenEmailPayload(Base):
    access_token: Annotated[AccessToken, Field(alias="accessToken")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["RevokeAccessTokenEmailPayload"] | None, Field(alias="__typename")
    ] = "RevokeAccessTokenEmailPayload"


class RevokeAccessTokenPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["RevokeAccessTokenPayload"] | None, Field(alias="__typename")
    ] = "RevokeAccessTokenPayload"


class RevokeClientPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["RevokeClientPayload"] | None, Field(alias="__typename")
    ] = "RevokeClientPayload"


class RewindRunPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    rewound_run: Annotated[Run | None, Field(alias="rewoundRun")] = None
    typename__: Annotated[
        Literal["RewindRunPayload"] | None, Field(alias="__typename")
    ] = "RewindRunPayload"


class Role(Base):
    id: Annotated[ID, Field(alias="ID")]
    description: String | None = None
    inherited_from: Annotated[Role | None, Field(alias="inheritedFrom")] = None
    name: String
    permissions: list[RolePermission]
    typename__: Annotated[Literal["Role"] | None, Field(alias="__typename")] = "Role"


class RolePermission(Base):
    display_name: Annotated[String, Field(alias="displayName")]
    group_name: Annotated[String, Field(alias="groupName")]
    name: String
    typename__: Annotated[
        Literal["RolePermission"] | None, Field(alias="__typename")
    ] = "RolePermission"


class RowConnection(Base):
    edges: list[RowEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    schema_: Annotated[JSON, Field(alias="schema")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["RowConnection"] | None, Field(alias="__typename")
    ] = "RowConnection"


class RowEdge(Base):
    node: RowType | None = None
    typename__: Annotated[Literal["RowEdge"] | None, Field(alias="__typename")] = (
        "RowEdge"
    )


class RowType(Base):
    row: JSON
    typename__: Annotated[Literal["RowType"] | None, Field(alias="__typename")] = (
        "RowType"
    )


class Run(BucketType, Node):
    agent: Agent | None = None
    aggregations: JSON | None = None
    artifact_lineage_dag: Annotated[
        ArtifactLineageDag | None, Field(alias="artifactLineageDag")
    ] = None
    benchmark_run: Annotated[BenchmarkRun | None, Field(alias="benchmarkRun")] = None
    branch_point: Annotated[RunBranchPoint | None, Field(alias="branchPoint")] = None
    bucketed_history: Annotated[list[JSON], Field(alias="bucketedHistory")]
    commit: String | None = None
    compute_seconds: Annotated[Duration, Field(alias="computeSeconds")]
    config: JSONString | None = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    debug: Boolean | None = None
    default_color_index: Annotated[Int | None, Field(alias="defaultColorIndex")] = None
    deleted_at: Annotated[DateTime | None, Field(alias="deletedAt")] = None
    description: String | None = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    events: list[String]
    events_line_count: Annotated[Int | None, Field(alias="eventsLineCount")] = None
    events_tail: Annotated[JSONString | None, Field(alias="eventsTail")] = None
    example_table: Annotated[JSONString | None, Field(alias="exampleTable")] = None
    example_table_columns: Annotated[
        JSONString | None, Field(alias="exampleTableColumns")
    ] = None
    example_table_types: Annotated[
        JSONString | None, Field(alias="exampleTableTypes")
    ] = None
    exitcode: Float | None = None
    failed: Boolean | None = None
    file_count: Annotated[Int | None, Field(alias="fileCount")] = None
    files: FileConnection | None = None
    folders: Folders | None = None
    framework: String | None = None
    github: String | None = None
    group: String | None = None
    group_counts: Annotated[list[Int] | None, Field(alias="groupCounts")] = None
    heartbeat_at: Annotated[DateTime | None, Field(alias="heartbeatAt")] = None
    history: list[String]
    history_keys: Annotated[JSON | None, Field(alias="historyKeys")] = None
    history_line_count: Annotated[Int | None, Field(alias="historyLineCount")] = None
    history_tail: Annotated[JSONString | None, Field(alias="historyTail")] = None
    host: String | None = None
    id: ID
    input_artifacts: Annotated[
        InputArtifactConnection | None, Field(alias="inputArtifacts")
    ] = None
    internal_id: Annotated[ID | None, Field(alias="internalID")] = None
    job: Artifact | None = None
    job_id: Annotated[Int | None, Field(alias="jobId")] = None
    job_type: Annotated[String | None, Field(alias="jobType")] = None
    log_line_count: Annotated[Int | None, Field(alias="logLineCount")] = None
    log_lines: Annotated[LogLineConnection | None, Field(alias="logLines")] = None
    model: Project | None = None
    name: String
    ndb_id: Annotated[ID | None, Field(alias="ndbId")] = None
    notes: String | None = None
    output_artifacts: Annotated[
        ArtifactConnection | None, Field(alias="outputArtifacts")
    ] = None
    parquet_history: Annotated[ParquetHistory, Field(alias="parquetHistory")]
    patch: String | None = None
    pending_updates: Annotated[Boolean, Field(alias="pendingUpdates")]
    project: Project | None = None
    project_id: Annotated[ID, Field(alias="projectId")]
    read_only: Annotated[Boolean | None, Field(alias="readOnly")] = None
    request_subscribe: Annotated[Boolean | None, Field(alias="requestSubscribe")] = None
    run_info: Annotated[RunInfo | None, Field(alias="runInfo")] = None
    running: Boolean | None = None
    sampled_history: Annotated[list[JSON], Field(alias="sampledHistory")]
    services_available: Annotated[
        RunServicesAvailable | None, Field(alias="servicesAvailable")
    ] = None
    should_stop: Annotated[Boolean | None, Field(alias="shouldStop")] = None
    state: String | None = None
    steps_for_metric_values: Annotated[
        list[Int | None], Field(alias="stepsForMetricValues")
    ]
    stopped: Boolean | None = None
    storage_bytes: Annotated[Int64, Field(alias="storageBytes")]
    summary_metrics: Annotated[JSONString | None, Field(alias="summaryMetrics")] = None
    sweep: Sweep | None = None
    sweep_name: Annotated[String | None, Field(alias="sweepName")] = None
    system_metrics: Annotated[JSONString | None, Field(alias="systemMetrics")] = None
    tag_colors: Annotated[list[RunTag], Field(alias="tagColors")]
    tags: list[String] | None = None
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    user: User | None = None
    user_id: Annotated[Int | None, Field(alias="userId")] = None
    wandb_config: Annotated[JSONString | None, Field(alias="wandbConfig")] = None
    typename__: Annotated[Literal["Run"] | None, Field(alias="__typename")] = "Run"


class RunBranchPoint(Base):
    run: Run
    step: Int64
    typename__: Annotated[
        Literal["RunBranchPoint"] | None, Field(alias="__typename")
    ] = "RunBranchPoint"


class RunConnection(Base):
    delta: list[RunDiff]
    deltas: BucketDiffs | None = None
    edges: list[RunEdge]
    history_keys: Annotated[JSON | None, Field(alias="historyKeys")] = None
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    paths: JSONString | None = None
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["RunConnection"] | None, Field(alias="__typename")
    ] = "RunConnection"


class RunDiff(Base):
    index: Int
    op: DiffOperation
    run: Run | None = None
    typename__: Annotated[Literal["RunDiff"] | None, Field(alias="__typename")] = (
        "RunDiff"
    )


class RunEdge(Base):
    cursor: String
    node: Run
    typename__: Annotated[Literal["RunEdge"] | None, Field(alias="__typename")] = (
        "RunEdge"
    )


class RunFieldValue(Base):
    value: JSONString | None = None
    typename__: Annotated[
        Literal["RunFieldValue"] | None, Field(alias="__typename")
    ] = "RunFieldValue"


class RunFieldValueConnection(Base):
    edges: list[RunFieldValueEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["RunFieldValueConnection"] | None, Field(alias="__typename")
    ] = "RunFieldValueConnection"


class RunFieldValueEdge(Base):
    cursor: String
    node: RunFieldValue
    typename__: Annotated[
        Literal["RunFieldValueEdge"] | None, Field(alias="__typename")
    ] = "RunFieldValueEdge"


class RunGroup(Base):
    id: ID
    name: String
    notes: String | None = None
    project: Project
    tags: list[RunTag]
    typename__: Annotated[Literal["RunGroup"] | None, Field(alias="__typename")] = (
        "RunGroup"
    )


class RunInfo(Base):
    args: list[String]
    code_saved: Annotated[Boolean | None, Field(alias="codeSaved")] = None
    colab: String | None = None
    cpu_count: Annotated[Int | None, Field(alias="cpuCount")] = None
    cpu_count_logical: Annotated[Int | None, Field(alias="cpuCountLogical")] = None
    executable: String | None = None
    git: GitInfo | None = None
    gpu: String | None = None
    gpu_count: Annotated[Int | None, Field(alias="gpuCount")] = None
    os: String | None = None
    program: String | None = None
    python: String | None = None
    typename__: Annotated[Literal["RunInfo"] | None, Field(alias="__typename")] = (
        "RunInfo"
    )


class RunKeySuggestion(Base):
    count: Int
    display_value: Annotated[JSONString | None, Field(alias="displayValue")] = None
    value: JSONString | None = None
    typename__: Annotated[
        Literal["RunKeySuggestion"] | None, Field(alias="__typename")
    ] = "RunKeySuggestion"


class RunQueue(Base):
    access: RunQueueAccessType
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    created_by: Annotated[Int | None, Field(alias="createdBy")] = None
    default_resource_config: Annotated[
        DefaultResourceConfig | None, Field(alias="defaultResourceConfig")
    ] = None
    default_resource_config_id: Annotated[
        ID | None, Field(alias="defaultResourceConfigID")
    ] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    executor_info: Annotated[String, Field(alias="executorInfo")]
    external_links: Annotated[JSON | None, Field(alias="externalLinks")] = None
    id: ID
    name: String
    prioritization_mode: Annotated[
        RunQueuePrioritizationMode, Field(alias="prioritizationMode")
    ]
    run_queue_item: Annotated[RunQueueItem | None, Field(alias="runQueueItem")] = None
    run_queue_items: Annotated[RunQueueItemConnection, Field(alias="runQueueItems")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[Literal["RunQueue"] | None, Field(alias="__typename")] = (
        "RunQueue"
    )


class RunQueueItem(Base):
    associated_run_id: Annotated[String | None, Field(alias="associatedRunId")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    error: RunQueueItemInfoDetails | None = None
    id: ID
    launch_agent_id: Annotated[ID | None, Field(alias="launchAgentId")] = None
    priority: Int
    run_spec: Annotated[JSON, Field(alias="runSpec")]
    state: RunQueueItemState
    template_variable_values: Annotated[
        JSON | None, Field(alias="templateVariableValues")
    ] = None
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    warnings: list[RunQueueItemInfoDetails | None]
    typename__: Annotated[Literal["RunQueueItem"] | None, Field(alias="__typename")] = (
        "RunQueueItem"
    )


class RunQueueItemConnection(Base):
    edges: list[RunQueueItemEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["RunQueueItemConnection"] | None, Field(alias="__typename")
    ] = "RunQueueItemConnection"


class RunQueueItemEdge(Base):
    cursor: String
    node: RunQueueItem
    typename__: Annotated[
        Literal["RunQueueItemEdge"] | None, Field(alias="__typename")
    ] = "RunQueueItemEdge"


class RunQueueItemInfoDetails(Error):
    file_paths: Annotated[list[String], Field(alias="filePaths")]
    message: String
    stage: String
    typename__: Annotated[
        Literal["RunQueueItemInfoDetails"] | None, Field(alias="__typename")
    ] = "RunQueueItemInfoDetails"


class RunServicesAvailable(Base):
    tensorboard: Boolean | None = None
    typename__: Annotated[
        Literal["RunServicesAvailable"] | None, Field(alias="__typename")
    ] = "RunServicesAvailable"


class RunStorageNode(StorageTreeNode):
    files: FileStorageNodeConnection
    id: ID
    name: String
    run: Run
    run_id: Annotated[ID, Field(alias="runID")]
    size: Int64
    typename__: Annotated[
        Literal["RunStorageNode"] | None, Field(alias="__typename")
    ] = "RunStorageNode"


class RunStorageNodeConnection(Base):
    edges: list[RunStorageNodeEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_size: Annotated[Int64, Field(alias="totalSize")]
    typename__: Annotated[
        Literal["RunStorageNodeConnection"] | None, Field(alias="__typename")
    ] = "RunStorageNodeConnection"


class RunStorageNodeEdge(Base):
    cursor: String
    node: RunStorageNode
    typename__: Annotated[
        Literal["RunStorageNodeEdge"] | None, Field(alias="__typename")
    ] = "RunStorageNodeEdge"


class RunTag(Base):
    color_index: Annotated[Int, Field(alias="colorIndex")]
    id: ID
    name: String
    typename__: Annotated[Literal["RunTag"] | None, Field(alias="__typename")] = (
        "RunTag"
    )


class RunTagConnection(Base):
    edges: list[RunTagEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["RunTagConnection"] | None, Field(alias="__typename")
    ] = "RunTagConnection"


class RunTagCount(Base):
    count: Int
    name: String
    typename__: Annotated[Literal["RunTagCount"] | None, Field(alias="__typename")] = (
        "RunTagCount"
    )


class RunTagEdge(Base):
    cursor: String
    node: RunTag
    typename__: Annotated[Literal["RunTagEdge"] | None, Field(alias="__typename")] = (
        "RunTagEdge"
    )


class ScriptableRunCondition(Base):
    success: Boolean
    typename__: Annotated[
        Literal["ScriptableRunCondition"] | None, Field(alias="__typename")
    ] = "ScriptableRunCondition"


class Secret(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    entity_id: Annotated[Int, Field(alias="entityId")]
    name: String
    typename__: Annotated[Literal["Secret"] | None, Field(alias="__typename")] = (
        "Secret"
    )


class SendRequestOrgEmailDomainVerificationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["SendRequestOrgEmailDomainVerificationPayload"] | None,
        Field(alias="__typename"),
    ] = "SendRequestOrgEmailDomainVerificationPayload"


class ServerInfo(Base):
    action_history_limit: Annotated[Int, Field(alias="actionHistoryLimit")]
    available_bucket_providers: Annotated[
        list[CloudProvider], Field(alias="availableBucketProviders")
    ]
    available_cloud_regions: Annotated[
        list[CloudRegion], Field(alias="availableCloudRegions")
    ]
    cli_version_info: Annotated[JSON, Field(alias="cliVersionInfo")]
    data_retention_duration: Annotated[Duration, Field(alias="dataRetentionDuration")]
    default_cloud_region: Annotated[CloudRegion, Field(alias="defaultCloudRegion")]
    deployment_id: Annotated[String | None, Field(alias="deploymentId")] = None
    exposes_explicit_run_queue_ack_path: Annotated[
        Boolean, Field(alias="exposesExplicitRunQueueAckPath")
    ]
    frontend_host: Annotated[String, Field(alias="frontendHost")]
    has_local_license: Annotated[Boolean, Field(alias="hasLocalLicense")]
    is_google_iap: Annotated[Boolean, Field(alias="isGoogleIap")]
    latest_local_version_info: Annotated[
        LocalVersionInfo | None, Field(alias="latestLocalVersionInfo")
    ] = None
    license_expiration_ui: Annotated[
        LicenseExpirationUI | None, Field(alias="licenseExpirationUI")
    ] = None
    license_flags: Annotated[list[String], Field(alias="licenseFlags")]
    message_of_the_day: Annotated[String | None, Field(alias="messageOfTheDay")] = None
    polling_ok: Annotated[Boolean, Field(alias="pollingOK")]
    registered_model_limit_reached: Annotated[
        Boolean, Field(alias="registeredModelLimitReached")
    ]
    secure_storage_connector_enabled: Annotated[
        Boolean, Field(alias="secureStorageConnectorEnabled")
    ]
    slack_client_id: Annotated[String, Field(alias="slackClientID")]
    stream_table_enabled: Annotated[Boolean, Field(alias="streamTableEnabled")]
    user_limit_reached: Annotated[Boolean, Field(alias="userLimitReached")]
    view_only_user_limit_reached: Annotated[
        Boolean, Field(alias="viewOnlyUserLimitReached")
    ]
    typename__: Annotated[Literal["ServerInfo"] | None, Field(alias="__typename")] = (
        "ServerInfo"
    )


class SetDismissedBannerPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["SetDismissedBannerPayload"] | None, Field(alias="__typename")
    ] = "SetDismissedBannerPayload"


class SetTagColorPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    tags: list[RunTag]
    typename__: Annotated[
        Literal["SetTagColorPayload"] | None, Field(alias="__typename")
    ] = "SetTagColorPayload"


class SlackChannelSubscription(AlertSubscription):
    id: ID
    slack_integration: Annotated[SlackIntegration, Field(alias="slackIntegration")]
    typename__: Annotated[
        Literal["SlackChannelSubscription"] | None, Field(alias="__typename")
    ] = "SlackChannelSubscription"


class SlackIntegration(Integration):
    channel_name: Annotated[String, Field(alias="channelName")]
    id: ID
    team_name: Annotated[String, Field(alias="teamName")]
    typename__: Annotated[
        Literal["SlackIntegration"] | None, Field(alias="__typename")
    ] = "SlackIntegration"


class StarViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    view: View | None = None
    typename__: Annotated[
        Literal["StarViewPayload"] | None, Field(alias="__typename")
    ] = "StarViewPayload"


class StargazerConnection(Base):
    edges: list[StargazerEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["StargazerConnection"] | None, Field(alias="__typename")
    ] = "StargazerConnection"


class StargazerEdge(Base):
    cursor: String
    node: User | None = None
    typename__: Annotated[
        Literal["StargazerEdge"] | None, Field(alias="__typename")
    ] = "StargazerEdge"


class StopRunPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["StopRunPayload"] | None, Field(alias="__typename")
    ] = "StopRunPayload"


class StoppedRunCondition(Base):
    minimum_run_duration: Annotated[Duration, Field(alias="minimumRunDuration")]
    typename__: Annotated[
        Literal["StoppedRunCondition"] | None, Field(alias="__typename")
    ] = "StoppedRunCondition"


class StorageBucketInfo(Base):
    id: Annotated[ID, Field(alias="ID")]
    aws_external_id: Annotated[String | None, Field(alias="awsExternalID")] = None
    azure_client_id: Annotated[String | None, Field(alias="azureClientID")] = None
    azure_tenant_id: Annotated[String | None, Field(alias="azureTenantID")] = None
    kms_key_id: Annotated[String | None, Field(alias="kmsKeyID")] = None
    name: String
    path: String | None = None
    provider: CloudProvider
    typename__: Annotated[
        Literal["StorageBucketInfo"] | None, Field(alias="__typename")
    ] = "StorageBucketInfo"


class StripeBillingInfo(Base):
    cancel_at_period_end: Annotated[Boolean, Field(alias="cancelAtPeriodEnd")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    current_period_end: Annotated[DateTime, Field(alias="currentPeriodEnd")]
    current_period_start: Annotated[DateTime, Field(alias="currentPeriodStart")]
    invoice_link: Annotated[String | None, Field(alias="invoiceLink")] = None
    payment_metadata: Annotated[
        PaymentMetadata | None, Field(alias="paymentMetadata")
    ] = None
    payment_method: Annotated[PaymentMethod | None, Field(alias="paymentMethod")] = None
    status: String
    stripe_subscription_id: Annotated[String, Field(alias="stripeSubscriptionId")]
    typename__: Annotated[
        Literal["StripeBillingInfo"] | None, Field(alias="__typename")
    ] = "StripeBillingInfo"


class StripeInvoice(Base):
    created: DateTime
    currency: String
    hosted_invoice_url: Annotated[String, Field(alias="hostedInvoiceURL")]
    invoice_pdf: Annotated[String, Field(alias="invoicePDF")]
    number: String
    status: StripeInvoiceStatus
    subscription: StripeSubscription | None = None
    total: Int64
    typename__: Annotated[
        Literal["StripeInvoice"] | None, Field(alias="__typename")
    ] = "StripeInvoice"


class StripePaymentMethod(Base):
    card: StripePaymentMethodCard
    is_default: Annotated[Boolean, Field(alias="isDefault")]
    is_failed: Annotated[Boolean, Field(alias="isFailed")]
    stripe_payment_method_id: Annotated[String, Field(alias="stripePaymentMethodID")]
    type: StripePaymentMethodType
    typename__: Annotated[
        Literal["StripePaymentMethod"] | None, Field(alias="__typename")
    ] = "StripePaymentMethod"


class StripePaymentMethodCard(Base):
    brand: CardBrand
    last4: String
    typename__: Annotated[
        Literal["StripePaymentMethodCard"] | None, Field(alias="__typename")
    ] = "StripePaymentMethodCard"


class StripePrice(Base):
    amount: Int64
    currency: String
    interval: String | None = None
    typename__: Annotated[Literal["StripePrice"] | None, Field(alias="__typename")] = (
        "StripePrice"
    )


class StripeSubscription(Base):
    cancel_at_period_end: Annotated[Boolean, Field(alias="cancelAtPeriodEnd")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    current_period_end: Annotated[DateTime, Field(alias="currentPeriodEnd")]
    organization_subscriptions: Annotated[
        list[OrganizationSubscription], Field(alias="organizationSubscriptions")
    ]
    status: String
    typename__: Annotated[
        Literal["StripeSubscription"] | None, Field(alias="__typename")
    ] = "StripeSubscription"


class SubmitBenchmarkRunPayload(Base):
    benchmark_run: Annotated[BenchmarkRun, Field(alias="benchmarkRun")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["SubmitBenchmarkRunPayload"] | None, Field(alias="__typename")
    ] = "SubmitBenchmarkRunPayload"


class SubmitFCNewsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["SubmitFCNewsPayload"] | None, Field(alias="__typename")
    ] = "SubmitFCNewsPayload"


class Sweep(Node):
    agent: Agent | None = None
    agents: AgentConnection
    best_loss: Annotated[Float | None, Field(alias="bestLoss")] = None
    config: String
    controller: JSONString | None = None
    controller_run_name: Annotated[String, Field(alias="controllerRunName")]
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    description: String | None = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    early_stop_job_running: Annotated[Boolean, Field(alias="earlyStopJobRunning")]
    heartbeat_at: Annotated[DateTime, Field(alias="heartbeatAt")]
    id: ID
    method: String
    name: String
    prior_runs: Annotated[RunConnection, Field(alias="priorRuns")]
    project: Project | None = None
    run_count: Annotated[Int, Field(alias="runCount")]
    run_count_expected: Annotated[Int | None, Field(alias="runCountExpected")] = None
    run_time: Annotated[Int, Field(alias="runTime")]
    runs: RunConnection
    scheduler: JSONString | None = None
    state: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    user: User | None = None
    typename__: Annotated[Literal["Sweep"] | None, Field(alias="__typename")] = "Sweep"


class SweepConnection(Base):
    edges: list[SweepEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["SweepConnection"] | None, Field(alias="__typename")
    ] = "SweepConnection"


class SweepEdge(Base):
    cursor: String
    node: Sweep
    typename__: Annotated[Literal["SweepEdge"] | None, Field(alias="__typename")] = (
        "SweepEdge"
    )


class Tag(Base):
    attributes: JSONString
    id: ID
    name: String
    objects: TaggedObjectConnection | None = None
    tag_category: Annotated[TagCategory | None, Field(alias="tagCategory")] = None
    tag_category_name: Annotated[String, Field(alias="tagCategoryName")]
    typename__: Annotated[Literal["Tag"] | None, Field(alias="__typename")] = "Tag"


class TagCategory(Base):
    group: TagGroup
    id: ID
    name: String
    tags: TagConnection
    typename__: Annotated[Literal["TagCategory"] | None, Field(alias="__typename")] = (
        "TagCategory"
    )


class TagConnection(Base):
    edges: list[TagEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["TagConnection"] | None, Field(alias="__typename")
    ] = "TagConnection"


class TagEdge(Base):
    cursor: String
    node: Tag
    typename__: Annotated[Literal["TagEdge"] | None, Field(alias="__typename")] = (
        "TagEdge"
    )


class TaggedObjectConnection(Base):
    edges: list[TaggedObjectEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["TaggedObjectConnection"] | None, Field(alias="__typename")
    ] = "TaggedObjectConnection"


class TaggedObjectEdge(Base):
    cursor: String
    node: TaggedObject
    typename__: Annotated[
        Literal["TaggedObjectEdge"] | None, Field(alias="__typename")
    ] = "TaggedObjectEdge"


class Task(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    name: String
    progress: Int
    state: TaskState
    type: String
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[Literal["Task"] | None, Field(alias="__typename")] = "Task"


class TemplateVariable(Base):
    description: String | None = None
    name: String
    schema_: Annotated[JSONString, Field(alias="schema")]
    typename__: Annotated[
        Literal["TemplateVariable"] | None, Field(alias="__typename")
    ] = "TemplateVariable"


class TestGenericWebhookIntegrationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    ok: Boolean
    response: JSONString
    typename__: Annotated[
        Literal["TestGenericWebhookIntegrationPayload"] | None,
        Field(alias="__typename"),
    ] = "TestGenericWebhookIntegrationPayload"


class Trigger(Base):
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    created_by: Annotated[User, Field(alias="createdBy")]
    description: String | None = None
    enabled: Boolean
    id: ID
    name: String
    scope: TriggerScope
    triggered_action: Annotated[TriggeredAction, Field(alias="triggeredAction")]
    triggering_condition: Annotated[
        TriggeringCondition, Field(alias="triggeringCondition")
    ]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    typename__: Annotated[Literal["Trigger"] | None, Field(alias="__typename")] = (
        "Trigger"
    )


class TriggerConnection(Base):
    edges: list[TriggerEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["TriggerConnection"] | None, Field(alias="__typename")
    ] = "TriggerConnection"


class TriggerEdge(Base):
    cursor: String
    node: Trigger
    typename__: Annotated[Literal["TriggerEdge"] | None, Field(alias="__typename")] = (
        "TriggerEdge"
    )


class TriggerParquetExportPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    task: Task
    typename__: Annotated[
        Literal["TriggerParquetExportPayload"] | None, Field(alias="__typename")
    ] = "TriggerParquetExportPayload"


class UndeleteRunsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UndeleteRunsPayload"] | None, Field(alias="__typename")
    ] = "UndeleteRunsPayload"


class UndeleteUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["UndeleteUserPayload"] | None, Field(alias="__typename")
    ] = "UndeleteUserPayload"


class UnlinkArtifactPayload(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UnlinkArtifactPayload"] | None, Field(alias="__typename")
    ] = "UnlinkArtifactPayload"


class UnstarViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    view: View | None = None
    typename__: Annotated[
        Literal["UnstarViewPayload"] | None, Field(alias="__typename")
    ] = "UnstarViewPayload"


class UpdateAccessTokenPayload(Base):
    access_token: Annotated[AccessToken, Field(alias="accessToken")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    recipient_already_on_team: Annotated[
        Boolean | None, Field(alias="recipientAlreadyOnTeam")
    ] = None
    success: Boolean
    to_new_user: Annotated[Boolean | None, Field(alias="toNewUser")] = None
    typename__: Annotated[
        Literal["UpdateAccessTokenPayload"] | None, Field(alias="__typename")
    ] = "UpdateAccessTokenPayload"


class UpdateAccessTokenProjectsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateAccessTokenProjectsPayload"] | None, Field(alias="__typename")
    ] = "UpdateAccessTokenProjectsPayload"


class UpdateAlertPayload(Base):
    alert: Alert
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateAlertPayload"] | None, Field(alias="__typename")
    ] = "UpdateAlertPayload"


class UpdateArtifactAction(ArtifactAction):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    initiator: Initiator
    new_aliases: Annotated[list[ArtifactAlias] | None, Field(alias="newAliases")] = None
    new_description: Annotated[String | None, Field(alias="newDescription")] = None
    new_metadata: Annotated[JSONString | None, Field(alias="newMetadata")] = None
    new_tags: Annotated[JSONString | None, Field(alias="newTags")] = None
    old_aliases: Annotated[list[ArtifactAlias] | None, Field(alias="oldAliases")] = None
    old_description: Annotated[String | None, Field(alias="oldDescription")] = None
    old_metadata: Annotated[JSONString | None, Field(alias="oldMetadata")] = None
    old_tags: Annotated[JSONString | None, Field(alias="oldTags")] = None
    typename__: Annotated[
        Literal["UpdateArtifactAction"] | None, Field(alias="__typename")
    ] = "UpdateArtifactAction"


class UpdateArtifactCollectionPayload(Base):
    artifact_collection: Annotated[
        ArtifactCollection, Field(alias="artifactCollection")
    ]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateArtifactCollectionPayload"] | None, Field(alias="__typename")
    ] = "UpdateArtifactCollectionPayload"


class UpdateArtifactEntityTTLPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateArtifactEntityTTLPayload"] | None, Field(alias="__typename")
    ] = "UpdateArtifactEntityTTLPayload"


class UpdateArtifactManifestPayload(Base):
    artifact_manifest: Annotated[ArtifactManifest, Field(alias="artifactManifest")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateArtifactManifestPayload"] | None, Field(alias="__typename")
    ] = "UpdateArtifactManifestPayload"


class UpdateArtifactPayload(Base):
    artifact: Artifact
    artifact_actions: Annotated[list[ArtifactAction], Field(alias="artifactActions")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateArtifactPayload"] | None, Field(alias="__typename")
    ] = "UpdateArtifactPayload"


class UpdateArtifactTypePayload(Base):
    artifact_type: Annotated[ArtifactType, Field(alias="artifactType")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateArtifactTypePayload"] | None, Field(alias="__typename")
    ] = "UpdateArtifactTypePayload"


class UpdateBenchmarkRunPayload(Base):
    benchmark_run: Annotated[BenchmarkRun, Field(alias="benchmarkRun")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateBenchmarkRunPayload"] | None, Field(alias="__typename")
    ] = "UpdateBenchmarkRunPayload"


class UpdateCustomChartPayload(Base):
    chart: CustomChart
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UpdateCustomChartPayload"] | None, Field(alias="__typename")
    ] = "UpdateCustomChartPayload"


class UpdateCustomerDefaultPaymentMethodPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpdateCustomerDefaultPaymentMethodPayload"] | None,
        Field(alias="__typename"),
    ] = "UpdateCustomerDefaultPaymentMethodPayload"


class UpdateCustomerPaymentMethodPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpdateCustomerPaymentMethodPayload"] | None, Field(alias="__typename")
    ] = "UpdateCustomerPaymentMethodPayload"


class UpdateDefaultResourceConfigPayload(Base):
    default_resource_config_id: Annotated[ID, Field(alias="defaultResourceConfigID")]
    schema_validation_errors: Annotated[
        list[String] | None, Field(alias="schemaValidationErrors")
    ] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateDefaultResourceConfigPayload"] | None, Field(alias="__typename")
    ] = "UpdateDefaultResourceConfigPayload"


class UpdateDiscussionCommentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_comment: Annotated[DiscussionComment, Field(alias="discussionComment")]
    typename__: Annotated[
        Literal["UpdateDiscussionCommentPayload"] | None, Field(alias="__typename")
    ] = "UpdateDiscussionCommentPayload"


class UpdateDiscussionThreadPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_thread: Annotated[DiscussionThread, Field(alias="discussionThread")]
    typename__: Annotated[
        Literal["UpdateDiscussionThreadPayload"] | None, Field(alias="__typename")
    ] = "UpdateDiscussionThreadPayload"


class UpdateEntityPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity: Entity | None = None
    typename__: Annotated[
        Literal["UpdateEntityPayload"] | None, Field(alias="__typename")
    ] = "UpdateEntityPayload"


class UpdateExperimentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    success: Boolean
    typename__: Annotated[
        Literal["UpdateExperimentPayload"] | None, Field(alias="__typename")
    ] = "UpdateExperimentPayload"


class UpdateGlueTaskPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateGlueTaskPayload"] | None, Field(alias="__typename")
    ] = "UpdateGlueTaskPayload"


class UpdateLaunchAgentPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpdateLaunchAgentPayload"] | None, Field(alias="__typename")
    ] = "UpdateLaunchAgentPayload"


class UpdateLocalLicensePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    local_license: Annotated[LocalLicense, Field(alias="localLicense")]
    typename__: Annotated[
        Literal["UpdateLocalLicensePayload"] | None, Field(alias="__typename")
    ] = "UpdateLocalLicensePayload"


class UpdateMemberPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    member: Member
    typename__: Annotated[
        Literal["UpdateMemberPayload"] | None, Field(alias="__typename")
    ] = "UpdateMemberPayload"


class UpdateOrganizationBillingUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationBillingUserPayload"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationBillingUserPayload"


class UpdateOrganizationPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationPayload"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationPayload"


class UpdateOrganizationPrivacySettingsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationPrivacySettingsPayload"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationPrivacySettingsPayload"


class UpdateOrganizationSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationSubscriptionPayload"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationSubscriptionPayload"


class UpdateOrganizationSubscriptionSeatsPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationSubscriptionSeatsPayload"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationSubscriptionSeatsPayload"


class UpdateOrganizationUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateOrganizationUserPayload"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationUserPayload"


class UpdateProjectMemberPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateProjectMemberPayload"] | None, Field(alias="__typename")
    ] = "UpdateProjectMemberPayload"


class UpdateRampThresholdPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateRampThresholdPayload"] | None, Field(alias="__typename")
    ] = "UpdateRampThresholdPayload"


class UpdateRolePayload(Base):
    success: Boolean
    typename__: Annotated[
        Literal["UpdateRolePayload"] | None, Field(alias="__typename")
    ] = "UpdateRolePayload"


class UpdateRunQueueItemWarningPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpdateRunQueueItemWarningPayload"] | None, Field(alias="__typename")
    ] = "UpdateRunQueueItemWarningPayload"


class UpdateRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    queue_id: Annotated[ID | None, Field(alias="queueID")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpdateRunQueuePayload"] | None, Field(alias="__typename")
    ] = "UpdateRunQueuePayload"


class UpdateSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity: Entity | None = None
    typename__: Annotated[
        Literal["UpdateSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "UpdateSubscriptionPayload"


class UpdateTagCategoryPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    tag_category: Annotated[TagCategory, Field(alias="tagCategory")]
    typename__: Annotated[
        Literal["UpdateTagCategoryPayload"] | None, Field(alias="__typename")
    ] = "UpdateTagCategoryPayload"


class UpdateTagPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    tag: Tag
    typename__: Annotated[
        Literal["UpdateTagPayload"] | None, Field(alias="__typename")
    ] = "UpdateTagPayload"


class UpdateUserEmailPayload(Base):
    email: Email | None = None
    success: Boolean
    typename__: Annotated[
        Literal["UpdateUserEmailPayload"] | None, Field(alias="__typename")
    ] = "UpdateUserEmailPayload"


class UpdateUserPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["UpdateUserPayload"] | None, Field(alias="__typename")
    ] = "UpdateUserPayload"


class UpdateUserRolePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    user: User | None = None
    typename__: Annotated[
        Literal["UpdateUserRolePayload"] | None, Field(alias="__typename")
    ] = "UpdateUserRolePayload"


class UpgradeCustomerSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    subscription: JSON | None = None
    typename__: Annotated[
        Literal["UpgradeCustomerSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "UpgradeCustomerSubscriptionPayload"


class UpgradeTrialSubscriptionPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean
    typename__: Annotated[
        Literal["UpgradeTrialSubscriptionPayload"] | None, Field(alias="__typename")
    ] = "UpgradeTrialSubscriptionPayload"


class UploadMultipartUrls(Base):
    upload_id: Annotated[String, Field(alias="uploadID")]
    upload_url_parts: Annotated[list[UploadUrlPart], Field(alias="uploadUrlParts")]
    typename__: Annotated[
        Literal["UploadMultipartUrls"] | None, Field(alias="__typename")
    ] = "UploadMultipartUrls"


class UploadPanelPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    panel_image_upload_url: Annotated[String, Field(alias="panelImageUploadUrl")]
    panel_link: Annotated[String, Field(alias="panelLink")]
    success: Boolean
    typename__: Annotated[
        Literal["UploadPanelPayload"] | None, Field(alias="__typename")
    ] = "UploadPanelPayload"


class UploadUrlPart(Base):
    part_number: Annotated[Int64, Field(alias="partNumber")]
    upload_url: Annotated[String, Field(alias="uploadUrl")]
    typename__: Annotated[
        Literal["UploadUrlPart"] | None, Field(alias="__typename")
    ] = "UploadUrlPart"


class UpsertBucketPayload(Base):
    bucket: Run | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    inserted: Boolean | None = None
    update_available: Annotated[Boolean | None, Field(alias="updateAvailable")] = None
    typename__: Annotated[
        Literal["UpsertBucketPayload"] | None, Field(alias="__typename")
    ] = "UpsertBucketPayload"


class UpsertModelPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    inserted: Boolean | None = None
    model: Project | None = None
    project: Project | None = None
    typename__: Annotated[
        Literal["UpsertModelPayload"] | None, Field(alias="__typename")
    ] = "UpsertModelPayload"


class UpsertRunGroupPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    group: RunGroup | None = None
    inserted: Boolean | None = None
    typename__: Annotated[
        Literal["UpsertRunGroupPayload"] | None, Field(alias="__typename")
    ] = "UpsertRunGroupPayload"


class UpsertRunQueuePayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    config_schema_validation_errors: Annotated[
        list[String] | None, Field(alias="configSchemaValidationErrors")
    ] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["UpsertRunQueuePayload"] | None, Field(alias="__typename")
    ] = "UpsertRunQueuePayload"


class UpsertSharedViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    view: View | None = None
    typename__: Annotated[
        Literal["UpsertSharedViewPayload"] | None, Field(alias="__typename")
    ] = "UpsertSharedViewPayload"


class UpsertSweepPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    config_validation_warnings: Annotated[
        list[String], Field(alias="configValidationWarnings")
    ]
    inserted: Boolean | None = None
    inserted_prior_runs: Annotated[Int | None, Field(alias="insertedPriorRuns")] = None
    sweep: Sweep | None = None
    typename__: Annotated[
        Literal["UpsertSweepPayload"] | None, Field(alias="__typename")
    ] = "UpsertSweepPayload"


class UpsertViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    inserted: Boolean | None = None
    view: View | None = None
    typename__: Annotated[
        Literal["UpsertViewPayload"] | None, Field(alias="__typename")
    ] = "UpsertViewPayload"


class UsageStat(Base):
    date: DateTime | None = None
    stat: Float | None = None
    typename__: Annotated[Literal["UsageStat"] | None, Field(alias="__typename")] = (
        "UsageStat"
    )


class UsageStatConnection(Base):
    edges: list[UsageStatEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["UsageStatConnection"] | None, Field(alias="__typename")
    ] = "UsageStatConnection"


class UsageStatEdge(Base):
    cursor: String
    node: UsageStat
    typename__: Annotated[
        Literal["UsageStatEdge"] | None, Field(alias="__typename")
    ] = "UsageStatEdge"


class UseArtifactAction(ArtifactAction):
    artifact: Artifact
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    id: ID
    initiator: Initiator
    typename__: Annotated[
        Literal["UseArtifactAction"] | None, Field(alias="__typename")
    ] = "UseArtifactAction"


class UseArtifactPayload(Base):
    artifact: Artifact
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run: Run
    typename__: Annotated[
        Literal["UseArtifactPayload"] | None, Field(alias="__typename")
    ] = "UseArtifactPayload"


class User(Node):
    account_type: Annotated[UserAccountType | None, Field(alias="accountType")] = None
    activity: UserActivityDetails | None = None
    admin: Boolean | None = None
    analytics_id: Annotated[String | None, Field(alias="analyticsId")] = None
    api_key: Annotated[String | None, Field(alias="apiKey")] = None
    api_keys: Annotated[ApiKeyConnection | None, Field(alias="apiKeys")] = None
    auth_id: Annotated[String | None, Field(alias="authId")] = None
    code: String | None = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    daily_run_count: Annotated[list[Int], Field(alias="dailyRunCount")]
    default_entity: Annotated[Entity | None, Field(alias="defaultEntity")] = None
    default_entity_id: Annotated[Int | None, Field(alias="defaultEntityId")] = None
    default_framework: Annotated[String | None, Field(alias="defaultFramework")] = None
    deleted_at: Annotated[DateTime | None, Field(alias="deletedAt")] = None
    email: String | None = None
    emails: list[Email]
    entity: String | None = None
    feature_flags: Annotated[list[FeatureFlag | None], Field(alias="featureFlags")]
    flags: JSONString | None = None
    has_run: Annotated[Boolean, Field(alias="hasRun")]
    hide_teams_from_public: Annotated[Boolean, Field(alias="hideTeamsFromPublic")]
    id: ID
    instance_admin_team_access_disabled: Annotated[
        Boolean, Field(alias="instanceAdminTeamAccessDisabled")
    ]
    limits: JSON | None = None
    logged_in_at: Annotated[DateTime | None, Field(alias="loggedInAt")] = None
    name: String
    ndb_id: Annotated[ID | None, Field(alias="ndbId")] = None
    newsletter_subscription: Annotated[
        NewsletterSubscription | None, Field(alias="newsletterSubscription")
    ] = None
    onboarding_steps: Annotated[JSON | None, Field(alias="onboardingSteps")] = None
    organizations: list[Organization]
    personal_entity_disabled: Annotated[Boolean, Field(alias="personalEntityDisabled")]
    photo_upload_url: Annotated[String, Field(alias="photoUploadUrl")]
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    private: Boolean
    projects: ProjectConnection | None = None
    runs: RunConnection | None = None
    signup_required: Annotated[Boolean, Field(alias="signupRequired")]
    starred_views: Annotated[ViewConnection | None, Field(alias="starredViews")] = None
    stripe_customer_id: Annotated[String | None, Field(alias="stripeCustomerId")] = None
    teams: EntityConnection | None = None
    total_runs: Annotated[Int, Field(alias="totalRuns")]
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    user_entity: Annotated[Entity | None, Field(alias="userEntity")] = None
    user_info: Annotated[JSON | None, Field(alias="userInfo")] = None
    username: String | None = None
    views: ViewConnection | None = None
    typename__: Annotated[Literal["User"] | None, Field(alias="__typename")] = "User"


class UserActivityDetails(ActivityDuration):
    days_active: Annotated[Int, Field(alias="daysActive")]
    end_at: Annotated[DateTime, Field(alias="endAt")]
    last_active_at: Annotated[DateTime | None, Field(alias="lastActiveAt")] = None
    num_reports: Annotated[Int, Field(alias="numReports")]
    num_runs: Annotated[Int, Field(alias="numRuns")]
    start_at: Annotated[DateTime, Field(alias="startAt")]
    typename__: Annotated[
        Literal["UserActivityDetails"] | None, Field(alias="__typename")
    ] = "UserActivityDetails"


class UserConnection(Base):
    edges: list[UserEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    typename__: Annotated[
        Literal["UserConnection"] | None, Field(alias="__typename")
    ] = "UserConnection"


class UserEdge(Base):
    cursor: String
    node: User | None = None
    typename__: Annotated[Literal["UserEdge"] | None, Field(alias="__typename")] = (
        "UserEdge"
    )


class Variant(Base):
    allocation: Int
    bucket: Int
    description: String
    typename__: Annotated[Literal["Variant"] | None, Field(alias="__typename")] = (
        "Variant"
    )


class VersionedArtifactConnection(ArtifactConnectionType):
    edges: list[VersionedArtifactEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["VersionedArtifactConnection"] | None, Field(alias="__typename")
    ] = "VersionedArtifactConnection"


class VersionedArtifactEdge(ArtifactEdgeType):
    cursor: String
    node: Artifact
    version: String
    typename__: Annotated[
        Literal["VersionedArtifactEdge"] | None, Field(alias="__typename")
    ] = "VersionedArtifactEdge"


class View(Node):
    access_tokens: Annotated[list[AccessToken], Field(alias="accessTokens")]
    alert_subscription: Annotated[
        AlertSubscription | None, Field(alias="alertSubscription")
    ] = None
    children: ViewConnection | None = None
    cover_url: Annotated[String | None, Field(alias="coverUrl")] = None
    created_at: Annotated[DateTime, Field(alias="createdAt")]
    created_using: Annotated[ViewSource, Field(alias="createdUsing")]
    description: String | None = None
    discussion_threads: Annotated[
        DiscussionThreadConnection, Field(alias="discussionThreads")
    ]
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity: Entity | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    id: ID
    image_upload_url: Annotated[ImageUrl, Field(alias="imageUploadUrl")]
    locked: Boolean
    name: String | None = None
    parent_id: Annotated[ID | None, Field(alias="parentId")] = None
    preview_url: Annotated[String | None, Field(alias="previewUrl")] = None
    project: Project | None = None
    project_id: Annotated[Int | None, Field(alias="projectId")] = None
    project_name: Annotated[String, Field(alias="projectName")]
    showcased_at: Annotated[DateTime | None, Field(alias="showcasedAt")] = None
    spec: JSONString | None = None
    star_count: Annotated[Int, Field(alias="starCount")]
    stargazers: StargazerConnection
    starred: Boolean | None = None
    type: String | None = None
    updated_at: Annotated[DateTime | None, Field(alias="updatedAt")] = None
    updated_by: Annotated[User | None, Field(alias="updatedBy")] = None
    upload_headers: Annotated[list[String], Field(alias="uploadHeaders")]
    user: User | None = None
    user_id: Annotated[Int | None, Field(alias="userId")] = None
    view_count: Annotated[Int, Field(alias="viewCount")]
    typename__: Annotated[Literal["View"] | None, Field(alias="__typename")] = "View"


class ViewConnection(Base):
    edges: list[ViewEdge]
    page_info: Annotated[PageInfo, Field(alias="pageInfo")]
    total_count: Annotated[Int, Field(alias="totalCount")]
    typename__: Annotated[
        Literal["ViewConnection"] | None, Field(alias="__typename")
    ] = "ViewConnection"


class ViewEdge(Base):
    cursor: String
    node: View | None = None
    typename__: Annotated[Literal["ViewEdge"] | None, Field(alias="__typename")] = (
        "ViewEdge"
    )


class ViewViewPayload(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    success: Boolean | None = None
    typename__: Annotated[
        Literal["ViewViewPayload"] | None, Field(alias="__typename")
    ] = "ViewViewPayload"


class AckJobSetItemInput(Base):
    agent_id: Annotated[ID, Field(alias="agentId")]
    job_set_id: Annotated[ID, Field(alias="jobSetId")]
    job_set_item_id: Annotated[ID, Field(alias="jobSetItemId")]
    run_name: Annotated[String, Field(alias="runName")]
    typename__: Annotated[
        Literal["AckJobSetItemInput"] | None, Field(alias="__typename")
    ] = "AckJobSetItemInput"


class AckRunQueueItemInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run_name: Annotated[String, Field(alias="runName")]
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    typename__: Annotated[
        Literal["AckRunQueueItemInput"] | None, Field(alias="__typename")
    ] = "AckRunQueueItemInput"


class AddAliasesInput(Base):
    aliases: list[ArtifactCollectionAliasInput]
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["AddAliasesInput"] | None, Field(alias="__typename")
    ] = "AddAliasesInput"


class AddFilesInput(Base):
    bucket_name: Annotated[String | None, Field(alias="bucketName")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    model_name: Annotated[String, Field(alias="modelName")]
    names: list[String | None]
    typename__: Annotated[
        Literal["AddFilesInput"] | None, Field(alias="__typename")
    ] = "AddFilesInput"


class AddProtectedAliasesInput(Base):
    admin_type: Annotated[WorkflowsAdminType, Field(alias="adminType")]
    aliases: list[String]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    typename__: Annotated[
        Literal["AddProtectedAliasesInput"] | None, Field(alias="__typename")
    ] = "AddProtectedAliasesInput"


class AddRolePermissionsInput(Base):
    permissions: list[String]
    role_id: Annotated[ID, Field(alias="roleID")]
    typename__: Annotated[
        Literal["AddRolePermissionsInput"] | None, Field(alias="__typename")
    ] = "AddRolePermissionsInput"


class AddUserToOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    teams: list[String] | None = None
    user_name: Annotated[String, Field(alias="userName")]
    user_org_role: Annotated[String, Field(alias="userOrgRole")]
    typename__: Annotated[
        Literal["AddUserToOrganizationInput"] | None, Field(alias="__typename")
    ] = "AddUserToOrganizationInput"


class AddWorkflowsAdminInput(Base):
    admin_type: Annotated[WorkflowsAdminType, Field(alias="adminType")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    user_id: Annotated[ID | None, Field(alias="userID")] = None
    username: String | None = None
    typename__: Annotated[
        Literal["AddWorkflowsAdminInput"] | None, Field(alias="__typename")
    ] = "AddWorkflowsAdminInput"


class AgentHeartbeatInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    metrics: JSONString | None = None
    run_state: Annotated[JSONString | None, Field(alias="runState")] = None
    typename__: Annotated[
        Literal["AgentHeartbeatInput"] | None, Field(alias="__typename")
    ] = "AgentHeartbeatInput"


class AggregationKey(Base):
    aggregation: Aggregation
    key: String
    typename__: Annotated[
        Literal["AggregationKey"] | None, Field(alias="__typename")
    ] = "AggregationKey"


class ArtifactAliasInput(Base):
    alias: String
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    typename__: Annotated[
        Literal["ArtifactAliasInput"] | None, Field(alias="__typename")
    ] = "ArtifactAliasInput"


class ArtifactCollectionAliasInput(Base):
    alias: String
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["ArtifactCollectionAliasInput"] | None, Field(alias="__typename")
    ] = "ArtifactCollectionAliasInput"


class ArtifactTypeInput(Base):
    description: String | None = None
    name: String
    typename__: Annotated[
        Literal["ArtifactTypeInput"] | None, Field(alias="__typename")
    ] = "ArtifactTypeInput"


class AttachCustomerPaymentMethodInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    typename__: Annotated[
        Literal["AttachCustomerPaymentMethodInput"] | None, Field(alias="__typename")
    ] = "AttachCustomerPaymentMethodInput"


class CancelCustomerSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["CancelCustomerSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CancelCustomerSubscriptionInput"


class ClaimAnonymousEntityInput(Base):
    anonymous_api_key: Annotated[String, Field(alias="anonymousApiKey")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["ClaimAnonymousEntityInput"] | None, Field(alias="__typename")
    ] = "ClaimAnonymousEntityInput"


class CloneProjectsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    destination_entity_name: Annotated[String, Field(alias="destinationEntityName")]
    notes: String | None = None
    owner_username: Annotated[String, Field(alias="ownerUsername")]
    project_names: Annotated[list[String] | None, Field(alias="projectNames")] = None
    source_entity_name: Annotated[String, Field(alias="sourceEntityName")]
    typename__: Annotated[
        Literal["CloneProjectsInput"] | None, Field(alias="__typename")
    ] = "CloneProjectsInput"


class CommitArtifactInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CommitArtifactInput"] | None, Field(alias="__typename")
    ] = "CommitArtifactInput"


class CompleteMultipartUploadArtifactInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    complete_multipart_action: Annotated[
        CompleteMultipartAction, Field(alias="completeMultipartAction")
    ]
    completed_parts: Annotated[list[UploadPartsInput], Field(alias="completedParts")]
    storage_path: Annotated[String, Field(alias="storagePath")]
    upload_id: Annotated[String, Field(alias="uploadID")]
    typename__: Annotated[
        Literal["CompleteMultipartUploadArtifactInput"] | None,
        Field(alias="__typename"),
    ] = "CompleteMultipartUploadArtifactInput"


class ContactUsForComputeHoursInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["ContactUsForComputeHoursInput"] | None, Field(alias="__typename")
    ] = "ContactUsForComputeHoursInput"


class ContactUsForUserLedTrialInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["ContactUsForUserLedTrialInput"] | None, Field(alias="__typename")
    ] = "ContactUsForUserLedTrialInput"


class CopyFileInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    id: ID
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    typename__: Annotated[
        Literal["CopyFileInput"] | None, Field(alias="__typename")
    ] = "CopyFileInput"


class CreateAWSExternalIDInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    organization_id: Annotated[ID | None, Field(alias="organizationID")] = None
    typename__: Annotated[
        Literal["CreateAWSExternalIDInput"] | None, Field(alias="__typename")
    ] = "CreateAWSExternalIDInput"


class CreateAcademicOrReverseTrialInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    is_academic: Annotated[Boolean, Field(alias="isAcademic")]
    new_organization_name: Annotated[String, Field(alias="newOrganizationName")]
    new_team_name: Annotated[String, Field(alias="newTeamName")]
    typename__: Annotated[
        Literal["CreateAcademicOrReverseTrialInput"] | None, Field(alias="__typename")
    ] = "CreateAcademicOrReverseTrialInput"


class CreateAccessTokenInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String | None = None
    preview_url: Annotated[String | None, Field(alias="previewURL")] = None
    projects: list[ProjectSpecifier]
    username: String | None = None
    view_id: Annotated[ID, Field(alias="viewId")]
    typename__: Annotated[
        Literal["CreateAccessTokenInput"] | None, Field(alias="__typename")
    ] = "CreateAccessTokenInput"


class CreateAgentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    host: String
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    sweep: String
    typename__: Annotated[
        Literal["CreateAgentInput"] | None, Field(alias="__typename")
    ] = "CreateAgentInput"


class CreateAnonymousEntityInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateAnonymousEntityInput"] | None, Field(alias="__typename")
    ] = "CreateAnonymousEntityInput"


class CreateArtifactCollectionTagAssignmentsInput(Base):
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    tags: list[TagInput]
    typename__: Annotated[
        Literal["CreateArtifactCollectionTagAssignmentsInput"] | None,
        Field(alias="__typename"),
    ] = "CreateArtifactCollectionTagAssignmentsInput"


class CreateArtifactFileSpecInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    artifact_manifest_id: Annotated[ID | None, Field(alias="artifactManifestID")] = None
    md5: String
    mimetype: String | None = None
    name: String
    upload_parts_input: Annotated[
        list[UploadPartsInput] | None, Field(alias="uploadPartsInput")
    ] = None
    typename__: Annotated[
        Literal["CreateArtifactFileSpecInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactFileSpecInput"


class CreateArtifactFilesInput(Base):
    artifact_files: Annotated[
        list[CreateArtifactFileSpecInput], Field(alias="artifactFiles")
    ]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    cloud_region_id: Annotated[ID | None, Field(alias="cloudRegionID")] = None
    storage_layout: Annotated[ArtifactStorageLayout, Field(alias="storageLayout")]
    typename__: Annotated[
        Literal["CreateArtifactFilesInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactFilesInput"


class CreateArtifactInput(Base):
    aliases: list[ArtifactAliasInput] | None = None
    artifact_collection_name: Annotated[
        String | None, Field(alias="artifactCollectionName")
    ] = None
    artifact_collection_names: Annotated[
        list[String] | None, Field(alias="artifactCollectionNames")
    ] = None
    artifact_type_name: Annotated[String, Field(alias="artifactTypeName")]
    client_id: Annotated[ID | None, Field(alias="clientID")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    digest: String
    digest_algorithm: Annotated[ArtifactDigestAlgorithm, Field(alias="digestAlgorithm")]
    distributed_id: Annotated[String | None, Field(alias="distributedID")] = None
    enable_digest_deduplication: Annotated[
        Boolean | None, Field(alias="enableDigestDeduplication")
    ] = False
    entity_name: Annotated[String, Field(alias="entityName")]
    history_step: Annotated[Int64 | None, Field(alias="historyStep")] = None
    labels: JSONString | None = None
    metadata: JSONString | None = None
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String | None, Field(alias="runName")] = None
    sequence_client_id: Annotated[ID | None, Field(alias="sequenceClientID")] = None
    tags: list[TagInput] | None = None
    ttl_duration_seconds: Annotated[Int64 | None, Field(alias="ttlDurationSeconds")] = (
        None
    )
    typename__: Annotated[
        Literal["CreateArtifactInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactInput"


class CreateArtifactManifestInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    base_artifact_id: Annotated[ID | None, Field(alias="baseArtifactID")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    digest: String
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    type: ArtifactManifestType
    typename__: Annotated[
        Literal["CreateArtifactManifestInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactManifestInput"


class CreateArtifactPortfolioInput(Base):
    artifact_type_id: Annotated[ID, Field(alias="artifactTypeID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["CreateArtifactPortfolioInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactPortfolioInput"


class CreateArtifactSequenceInput(Base):
    artifact_type_id: Annotated[ID, Field(alias="artifactTypeID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["CreateArtifactSequenceInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactSequenceInput"


class CreateArtifactTagAssignmentsInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    tags: list[TagInput]
    typename__: Annotated[
        Literal["CreateArtifactTagAssignmentsInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactTagAssignmentsInput"


class CreateArtifactTypeInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["CreateArtifactTypeInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactTypeInput"


class CreateArtifactTypesInput(Base):
    artifact_types: Annotated[list[ArtifactTypeInput], Field(alias="artifactTypes")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["CreateArtifactTypesInput"] | None, Field(alias="__typename")
    ] = "CreateArtifactTypesInput"


class CreateBenchmarkDiscussionCommentInput(Base):
    body: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_thread_id: Annotated[ID, Field(alias="discussionThreadID")]
    parent_comment_id: Annotated[ID | None, Field(alias="parentCommentID")] = None
    typename__: Annotated[
        Literal["CreateBenchmarkDiscussionCommentInput"] | None,
        Field(alias="__typename"),
    ] = "CreateBenchmarkDiscussionCommentInput"


class CreateBenchmarkDiscussionThreadInput(Base):
    benchmark_entity_name: Annotated[String, Field(alias="benchmarkEntityName")]
    benchmark_project_name: Annotated[String, Field(alias="benchmarkProjectName")]
    body: String | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    title: String
    typename__: Annotated[
        Literal["CreateBenchmarkDiscussionThreadInput"] | None,
        Field(alias="__typename"),
    ] = "CreateBenchmarkDiscussionThreadInput"


class CreateClientIDMappingInput(Base):
    client_id: Annotated[ID, Field(alias="clientID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    server_id: Annotated[ID, Field(alias="serverID")]
    typename__: Annotated[
        Literal["CreateClientIDMappingInput"] | None, Field(alias="__typename")
    ] = "CreateClientIDMappingInput"


class CreateClientInput(Base):
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String | None = None
    provider_id: Annotated[ID, Field(alias="providerId")]
    subject: String
    typename__: Annotated[
        Literal["CreateClientInput"] | None, Field(alias="__typename")
    ] = "CreateClientInput"


class CreateCustomChartInput(Base):
    access: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    display_name: Annotated[String, Field(alias="displayName")]
    entity: String
    name: String
    spec: JSONString
    type: String
    typename__: Annotated[
        Literal["CreateCustomChartInput"] | None, Field(alias="__typename")
    ] = "CreateCustomChartInput"


class CreateCustomerSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_organization_name: Annotated[String, Field(alias="newOrganizationName")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    plan_id: Annotated[ID, Field(alias="planId")]
    quantity: Int
    trial: Boolean
    typename__: Annotated[
        Literal["CreateCustomerSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateCustomerSubscriptionInput"


class CreateCustomerTrialInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_organization_name: Annotated[String, Field(alias="newOrganizationName")]
    plan_id: Annotated[ID, Field(alias="planId")]
    quantity: Int
    trial_days: Annotated[Int, Field(alias="trialDays")]
    user_name: Annotated[String, Field(alias="userName")]
    typename__: Annotated[
        Literal["CreateCustomerTrialInput"] | None, Field(alias="__typename")
    ] = "CreateCustomerTrialInput"


class CreateDefaultResourceConfigInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    config: JSONString
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    resource: String
    template_variables: Annotated[
        JSONString | None, Field(alias="templateVariables")
    ] = None
    typename__: Annotated[
        Literal["CreateDefaultResourceConfigInput"] | None, Field(alias="__typename")
    ] = "CreateDefaultResourceConfigInput"


class CreateEmailSubscriptionInput(Base):
    alert_id: Annotated[ID, Field(alias="alertID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["CreateEmailSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateEmailSubscriptionInput"


class CreateEntityInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_access: Annotated[String | None, Field(alias="defaultAccess")] = None
    default_framework: Annotated[String | None, Field(alias="defaultFramework")] = None
    invited: String | None = None
    name: String
    typename__: Annotated[
        Literal["CreateEntityInput"] | None, Field(alias="__typename")
    ] = "CreateEntityInput"


class CreateExperimentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    enrollment_period: Annotated[Int, Field(alias="enrollmentPeriod")]
    experiment_type: Annotated[ExperimentType, Field(alias="experimentType")]
    metadata: JSONString | None = None
    name: String
    observational_unit: Annotated[ObservationalUnit, Field(alias="observationalUnit")]
    sample_size: Annotated[Int, Field(alias="sampleSize")]
    variants: list[VariantInput]
    typename__: Annotated[
        Literal["CreateExperimentInput"] | None, Field(alias="__typename")
    ] = "CreateExperimentInput"


class CreateFilterTriggerInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    enabled: Boolean
    event_filter: Annotated[JSONString, Field(alias="eventFilter")]
    name: String
    scope_id: Annotated[ID, Field(alias="scopeID")]
    scope_type: Annotated[TriggerScopeType, Field(alias="scopeType")]
    triggered_action_config: Annotated[
        TriggeredActionConfig, Field(alias="triggeredActionConfig")
    ]
    triggered_action_type: Annotated[
        TriggeredActionType, Field(alias="triggeredActionType")
    ]
    triggering_event_type: Annotated[
        EventTriggeringConditionType, Field(alias="triggeringEventType")
    ]
    typename__: Annotated[
        Literal["CreateFilterTriggerInput"] | None, Field(alias="__typename")
    ] = "CreateFilterTriggerInput"


class CreateFinishedRunAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    typename__: Annotated[
        Literal["CreateFinishedRunAlertInput"] | None, Field(alias="__typename")
    ] = "CreateFinishedRunAlertInput"


class CreateGenericWebhookIntegrationInput(Base):
    access_token_ref: Annotated[String | None, Field(alias="accessTokenRef")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    secret_ref: Annotated[String | None, Field(alias="secretRef")] = None
    url_endpoint: Annotated[String, Field(alias="urlEndpoint")]
    typename__: Annotated[
        Literal["CreateGenericWebhookIntegrationInput"] | None,
        Field(alias="__typename"),
    ] = "CreateGenericWebhookIntegrationInput"


class CreateGitHubOAuthIntegrationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    code: String
    entity_name: Annotated[String, Field(alias="entityName")]
    redirect_uri: Annotated[String, Field(alias="redirectURI")]
    state: String
    typename__: Annotated[
        Literal["CreateGitHubOAuthIntegrationInput"] | None, Field(alias="__typename")
    ] = "CreateGitHubOAuthIntegrationInput"


class CreateGlueTaskInput(Base):
    arguments: JSONString
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    name: String
    status: String
    strategy_metadata: Annotated[String, Field(alias="strategyMetadata")]
    strategy_type: Annotated[String, Field(alias="strategyType")]
    task_type: Annotated[String, Field(alias="taskType")]
    typename__: Annotated[
        Literal["CreateGlueTaskInput"] | None, Field(alias="__typename")
    ] = "CreateGlueTaskInput"


class CreateHourOverageSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["CreateHourOverageSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateHourOverageSubscriptionInput"


class CreateInviteInput(Base):
    account_type: Annotated[String | None, Field(alias="accountType")] = None
    add_seat: Annotated[Boolean | None, Field(alias="addSeat")] = None
    admin: Boolean | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    role: String | None = None
    username: String | None = None
    typename__: Annotated[
        Literal["CreateInviteInput"] | None, Field(alias="__typename")
    ] = "CreateInviteInput"


class CreateLaunchAgentInput(Base):
    agent_config: Annotated[JSONString | None, Field(alias="agentConfig")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    hostname: String
    project_name: Annotated[String, Field(alias="projectName")]
    run_queues: Annotated[list[ID], Field(alias="runQueues")]
    version: String | None = None
    typename__: Annotated[
        Literal["CreateLaunchAgentInput"] | None, Field(alias="__typename")
    ] = "CreateLaunchAgentInput"


class CreateLocalLicenseOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_organization_name: Annotated[String, Field(alias="newOrganizationName")]
    typename__: Annotated[
        Literal["CreateLocalLicenseOrganizationInput"] | None, Field(alias="__typename")
    ] = "CreateLocalLicenseOrganizationInput"


class CreateNewsletterSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String | None = None
    typename__: Annotated[
        Literal["CreateNewsletterSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateNewsletterSubscriptionInput"


class CreateOAuthProviderInput(Base):
    issuer_url: Annotated[String, Field(alias="issuerUrl")]
    jwk: JSONString | None = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["CreateOAuthProviderInput"] | None, Field(alias="__typename")
    ] = "CreateOAuthProviderInput"


class CreatePreviewableLinkInput(Base):
    author: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String
    entity_name: Annotated[String, Field(alias="entityName")]
    redirect_url: Annotated[String, Field(alias="redirectURL")]
    resource_id: Annotated[ID, Field(alias="resourceID")]
    resource_type: Annotated[PreviewableLinkResourceType, Field(alias="resourceType")]
    title: String
    use_default_image: Annotated[Boolean, Field(alias="useDefaultImage")]
    typename__: Annotated[
        Literal["CreatePreviewableLinkInput"] | None, Field(alias="__typename")
    ] = "CreatePreviewableLinkInput"


class CreateProjectMembersInput(Base):
    project_id: Annotated[ID, Field(alias="projectId")]
    user_ids: Annotated[list[ID], Field(alias="userIds")]
    typename__: Annotated[
        Literal["CreateProjectMembersInput"] | None, Field(alias="__typename")
    ] = "CreateProjectMembersInput"


class CreateRoleInput(Base):
    description: String | None = None
    inherited_from: Annotated[String, Field(alias="inheritedFrom")]
    name: String
    organization_id: Annotated[ID, Field(alias="organizationID")]
    permissions: list[String]
    typename__: Annotated[
        Literal["CreateRoleInput"] | None, Field(alias="__typename")
    ] = "CreateRoleInput"


class CreateRunFilesInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    files: list[String]
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    typename__: Annotated[
        Literal["CreateRunFilesInput"] | None, Field(alias="__typename")
    ] = "CreateRunFilesInput"


class CreateRunQueueInput(Base):
    access: RunQueueAccessType
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_resource_config_id: Annotated[
        ID | None, Field(alias="defaultResourceConfigID")
    ] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    prioritization_mode: Annotated[
        RunQueuePrioritizationMode | None, Field(alias="prioritizationMode")
    ] = None
    project_name: Annotated[String, Field(alias="projectName")]
    queue_name: Annotated[String, Field(alias="queueName")]
    typename__: Annotated[
        Literal["CreateRunQueueInput"] | None, Field(alias="__typename")
    ] = "CreateRunQueueInput"


class CreateScriptableRunAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    typename__: Annotated[
        Literal["CreateScriptableRunAlertInput"] | None, Field(alias="__typename")
    ] = "CreateScriptableRunAlertInput"


class CreateServiceAccountInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    typename__: Annotated[
        Literal["CreateServiceAccountInput"] | None, Field(alias="__typename")
    ] = "CreateServiceAccountInput"


class CreateSlackChannelSubscriptionInput(Base):
    alert_id: Annotated[ID, Field(alias="alertID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    integration_id: Annotated[ID, Field(alias="integrationID")]
    typename__: Annotated[
        Literal["CreateSlackChannelSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateSlackChannelSubscriptionInput"


class CreateSlackIntegrationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    code: String
    entity_name: Annotated[String, Field(alias="entityName")]
    redirect_uri: Annotated[String, Field(alias="redirectURI")]
    typename__: Annotated[
        Literal["CreateSlackIntegrationInput"] | None, Field(alias="__typename")
    ] = "CreateSlackIntegrationInput"


class CreateStoppedRunAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    minimum_run_duration: Annotated[Duration, Field(alias="minimumRunDuration")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    typename__: Annotated[
        Literal["CreateStoppedRunAlertInput"] | None, Field(alias="__typename")
    ] = "CreateStoppedRunAlertInput"


class CreateStorageSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID | None, Field(alias="organizationId")] = None
    payment_method: Annotated[String | None, Field(alias="paymentMethod")] = None
    storage_plan_id: Annotated[ID | None, Field(alias="storagePlanId")] = None
    tracking_plan_id: Annotated[ID | None, Field(alias="trackingPlanId")] = None
    trial: Boolean | None = None
    typename__: Annotated[
        Literal["CreateStorageSubscriptionInput"] | None, Field(alias="__typename")
    ] = "CreateStorageSubscriptionInput"


class CreateTeamInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_access: Annotated[String | None, Field(alias="defaultAccess")] = None
    organization_id: Annotated[String | None, Field(alias="organizationId")] = None
    storage_bucket_info: Annotated[
        StorageBucketInfoInput | None, Field(alias="storageBucketInfo")
    ] = None
    team_admin_user_name: Annotated[String | None, Field(alias="teamAdminUserName")] = (
        None
    )
    team_name: Annotated[String, Field(alias="teamName")]
    typename__: Annotated[
        Literal["CreateTeamInput"] | None, Field(alias="__typename")
    ] = "CreateTeamInput"


class CreateUserEmailInput(Base):
    email: String
    type: EmailType
    typename__: Annotated[
        Literal["CreateUserEmailInput"] | None, Field(alias="__typename")
    ] = "CreateUserEmailInput"


class CreateUserInput(Base):
    account_type: Annotated[String | None, Field(alias="accountType")] = None
    admin: Boolean | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String
    password: String | None = None
    typename__: Annotated[
        Literal["CreateUserInput"] | None, Field(alias="__typename")
    ] = "CreateUserInput"


class CreateUserLedTrialInput(Base):
    allow_join_matching_email_domain: Annotated[
        Boolean | None, Field(alias="allowJoinMatchingEmailDomain")
    ] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    is_academic: Annotated[Boolean, Field(alias="isAcademic")]
    justification: String | None = None
    new_organization_name: Annotated[String, Field(alias="newOrganizationName")]
    new_team_name: Annotated[String, Field(alias="newTeamName")]
    org_size: Annotated[String, Field(alias="orgSize")]
    storage_bucket_info: Annotated[
        StorageBucketInfoInput | None, Field(alias="storageBucketInfo")
    ] = None
    typename__: Annotated[
        Literal["CreateUserLedTrialInput"] | None, Field(alias="__typename")
    ] = "CreateUserLedTrialInput"


class CreateViewCommentsAlertSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    view_id: Annotated[ID, Field(alias="viewID")]
    typename__: Annotated[
        Literal["CreateViewCommentsAlertSubscriptionInput"] | None,
        Field(alias="__typename"),
    ] = "CreateViewCommentsAlertSubscriptionInput"


class CreateViewDiscussionCommentInput(Base):
    body: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_thread_id: Annotated[ID | None, Field(alias="discussionThreadID")] = None
    inline_comment_details: Annotated[
        JSONString | None, Field(alias="inlineCommentDetails")
    ] = None
    notify_all_subscribers: Annotated[
        Boolean | None, Field(alias="notifyAllSubscribers")
    ] = False
    view_id: Annotated[ID, Field(alias="viewID")]
    typename__: Annotated[
        Literal["CreateViewDiscussionCommentInput"] | None, Field(alias="__typename")
    ] = "CreateViewDiscussionCommentInput"


class DeleteAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteAlertInput"] | None, Field(alias="__typename")
    ] = "DeleteAlertInput"


class DeleteAlertSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteAlertSubscriptionInput"] | None, Field(alias="__typename")
    ] = "DeleteAlertSubscriptionInput"


class DeleteAliasesInput(Base):
    aliases: list[ArtifactCollectionAliasInput]
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteAliasesInput"] | None, Field(alias="__typename")
    ] = "DeleteAliasesInput"


class DeleteApiKeyInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: String | None = None
    typename__: Annotated[
        Literal["DeleteApiKeyInput"] | None, Field(alias="__typename")
    ] = "DeleteApiKeyInput"


class DeleteArtifactCollectionTagAssignmentsInput(Base):
    artifact_collection_name: Annotated[String, Field(alias="artifactCollectionName")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    tags: list[TagInput]
    typename__: Annotated[
        Literal["DeleteArtifactCollectionTagAssignmentsInput"] | None,
        Field(alias="__typename"),
    ] = "DeleteArtifactCollectionTagAssignmentsInput"


class DeleteArtifactEntityTTLInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    typename__: Annotated[
        Literal["DeleteArtifactEntityTTLInput"] | None, Field(alias="__typename")
    ] = "DeleteArtifactEntityTTLInput"


class DeleteArtifactInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_aliases: Annotated[Boolean | None, Field(alias="deleteAliases")] = False
    typename__: Annotated[
        Literal["DeleteArtifactInput"] | None, Field(alias="__typename")
    ] = "DeleteArtifactInput"


class DeleteArtifactPortfolioInput(Base):
    artifact_portfolio_id: Annotated[ID, Field(alias="artifactPortfolioID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteArtifactPortfolioInput"] | None, Field(alias="__typename")
    ] = "DeleteArtifactPortfolioInput"


class DeleteArtifactSequenceInput(Base):
    artifact_sequence_id: Annotated[ID, Field(alias="artifactSequenceID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["DeleteArtifactSequenceInput"] | None, Field(alias="__typename")
    ] = "DeleteArtifactSequenceInput"


class DeleteArtifactTagAssignmentsInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    tags: list[TagInput]
    typename__: Annotated[
        Literal["DeleteArtifactTagAssignmentsInput"] | None, Field(alias="__typename")
    ] = "DeleteArtifactTagAssignmentsInput"


class DeleteCustomChartInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity: String
    name: String
    typename__: Annotated[
        Literal["DeleteCustomChartInput"] | None, Field(alias="__typename")
    ] = "DeleteCustomChartInput"


class DeleteDefaultResourceConfigsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_resource_config_i_ds: Annotated[
        list[ID], Field(alias="defaultResourceConfigIDs")
    ]
    typename__: Annotated[
        Literal["DeleteDefaultResourceConfigsInput"] | None, Field(alias="__typename")
    ] = "DeleteDefaultResourceConfigsInput"


class DeleteDiscussionCommentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_thread: Annotated[Boolean | None, Field(alias="deleteThread")] = False
    id: ID
    typename__: Annotated[
        Literal["DeleteDiscussionCommentInput"] | None, Field(alias="__typename")
    ] = "DeleteDiscussionCommentInput"


class DeleteExperimentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteExperimentInput"] | None, Field(alias="__typename")
    ] = "DeleteExperimentInput"


class DeleteFilesByRunAndFolderInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    folders: list[String]
    project_id: Annotated[Int, Field(alias="projectId")]
    run_name: Annotated[String, Field(alias="runName")]
    typename__: Annotated[
        Literal["DeleteFilesByRunAndFolderInput"] | None, Field(alias="__typename")
    ] = "DeleteFilesByRunAndFolderInput"


class DeleteFilesInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    files: list[ID]
    typename__: Annotated[
        Literal["DeleteFilesInput"] | None, Field(alias="__typename")
    ] = "DeleteFilesInput"


class DeleteFromRunQueueInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    queue_id: Annotated[ID, Field(alias="queueID")]
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    typename__: Annotated[
        Literal["DeleteFromRunQueueInput"] | None, Field(alias="__typename")
    ] = "DeleteFromRunQueueInput"


class DeleteGlueTaskInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteGlueTaskInput"] | None, Field(alias="__typename")
    ] = "DeleteGlueTaskInput"


class DeleteIntegrationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteIntegrationInput"] | None, Field(alias="__typename")
    ] = "DeleteIntegrationInput"


class DeleteInviteInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    id: String | None = None
    typename__: Annotated[
        Literal["DeleteInviteInput"] | None, Field(alias="__typename")
    ] = "DeleteInviteInput"


class DeleteLaunchAgentsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    launch_agent_ids: Annotated[list[ID], Field(alias="launchAgentIds")]
    typename__: Annotated[
        Literal["DeleteLaunchAgentsInput"] | None, Field(alias="__typename")
    ] = "DeleteLaunchAgentsInput"


class DeleteModelInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: String
    typename__: Annotated[
        Literal["DeleteModelInput"] | None, Field(alias="__typename")
    ] = "DeleteModelInput"


class DeleteOAuthProviderInput(Base):
    provider_id: Annotated[ID, Field(alias="providerId")]
    typename__: Annotated[
        Literal["DeleteOAuthProviderInput"] | None, Field(alias="__typename")
    ] = "DeleteOAuthProviderInput"


class DeleteOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["DeleteOrganizationInput"] | None, Field(alias="__typename")
    ] = "DeleteOrganizationInput"


class DeleteOrganizationSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    subscription_id: Annotated[ID, Field(alias="subscriptionID")]
    typename__: Annotated[
        Literal["DeleteOrganizationSubscriptionInput"] | None, Field(alias="__typename")
    ] = "DeleteOrganizationSubscriptionInput"


class DeleteProjectMembersInput(Base):
    project_id: Annotated[ID, Field(alias="projectId")]
    user_ids: Annotated[list[ID], Field(alias="userIds")]
    typename__: Annotated[
        Literal["DeleteProjectMembersInput"] | None, Field(alias="__typename")
    ] = "DeleteProjectMembersInput"


class DeleteRoleInput(Base):
    role_id: Annotated[ID, Field(alias="roleID")]
    typename__: Annotated[
        Literal["DeleteRoleInput"] | None, Field(alias="__typename")
    ] = "DeleteRoleInput"


class DeleteRolePermissionsInput(Base):
    permissions: list[String]
    role_id: Annotated[ID, Field(alias="roleID")]
    typename__: Annotated[
        Literal["DeleteRolePermissionsInput"] | None, Field(alias="__typename")
    ] = "DeleteRolePermissionsInput"


class DeleteRunInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_artifacts: Annotated[Boolean | None, Field(alias="deleteArtifacts")] = False
    id: ID
    typename__: Annotated[
        Literal["DeleteRunInput"] | None, Field(alias="__typename")
    ] = "DeleteRunInput"


class DeleteRunQueuesInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    queue_i_ds: Annotated[list[ID], Field(alias="queueIDs")]
    typename__: Annotated[
        Literal["DeleteRunQueuesInput"] | None, Field(alias="__typename")
    ] = "DeleteRunQueuesInput"


class DeleteRunsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_artifacts: Annotated[Boolean | None, Field(alias="deleteArtifacts")] = False
    entity_name: Annotated[String, Field(alias="entityName")]
    filters: JSONString
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["DeleteRunsInput"] | None, Field(alias="__typename")
    ] = "DeleteRunsInput"


class DeleteSecretInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    secret_name: Annotated[String, Field(alias="secretName")]
    typename__: Annotated[
        Literal["DeleteSecretInput"] | None, Field(alias="__typename")
    ] = "DeleteSecretInput"


class DeleteSweepInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_runs: Annotated[Boolean, Field(alias="deleteRuns")]
    id: ID
    typename__: Annotated[
        Literal["DeleteSweepInput"] | None, Field(alias="__typename")
    ] = "DeleteSweepInput"


class DeleteSweepsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_runs: Annotated[Boolean, Field(alias="deleteRuns")]
    ids: list[ID]
    typename__: Annotated[
        Literal["DeleteSweepsInput"] | None, Field(alias="__typename")
    ] = "DeleteSweepsInput"


class DeleteTeamInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    team_name: Annotated[String, Field(alias="teamName")]
    typename__: Annotated[
        Literal["DeleteTeamInput"] | None, Field(alias="__typename")
    ] = "DeleteTeamInput"


class DeleteTriggerInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    trigger_id: Annotated[ID, Field(alias="triggerID")]
    typename__: Annotated[
        Literal["DeleteTriggerInput"] | None, Field(alias="__typename")
    ] = "DeleteTriggerInput"


class DeleteUserEmailInput(Base):
    id: ID
    typename__: Annotated[
        Literal["DeleteUserEmailInput"] | None, Field(alias="__typename")
    ] = "DeleteUserEmailInput"


class DeleteUserInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DeleteUserInput"] | None, Field(alias="__typename")
    ] = "DeleteUserInput"


class DeleteViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_drafts: Annotated[Boolean | None, Field(alias="deleteDrafts")] = False
    id: ID | None = None
    typename__: Annotated[
        Literal["DeleteViewInput"] | None, Field(alias="__typename")
    ] = "DeleteViewInput"


class DeleteViewsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    delete_drafts: Annotated[Boolean | None, Field(alias="deleteDrafts")] = False
    ids: list[ID]
    typename__: Annotated[
        Literal["DeleteViewsInput"] | None, Field(alias="__typename")
    ] = "DeleteViewsInput"


class DeleteWorkflowsAdminInput(Base):
    admin_type: Annotated[WorkflowsAdminType, Field(alias="adminType")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    user_id: Annotated[ID | None, Field(alias="userID")] = None
    username: String | None = None
    typename__: Annotated[
        Literal["DeleteWorkflowsAdminInput"] | None, Field(alias="__typename")
    ] = "DeleteWorkflowsAdminInput"


class DetachCustomerPaymentMethodInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    typename__: Annotated[
        Literal["DetachCustomerPaymentMethodInput"] | None, Field(alias="__typename")
    ] = "DetachCustomerPaymentMethodInput"


class DisableGlueTaskInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["DisableGlueTaskInput"] | None, Field(alias="__typename")
    ] = "DisableGlueTaskInput"


class DisableOldTrackingSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["DisableOldTrackingSubscriptionInput"] | None, Field(alias="__typename")
    ] = "DisableOldTrackingSubscriptionInput"


class EnableGlueTaskInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["EnableGlueTaskInput"] | None, Field(alias="__typename")
    ] = "EnableGlueTaskInput"


class EntitySettingsInput(Base):
    default_cloud_region_id: Annotated[
        String | None, Field(alias="defaultCloudRegionID")
    ] = None
    disable_magic_link_sharing: Annotated[
        Boolean | None, Field(alias="disableMagicLinkSharing")
    ] = None
    disable_members_edit_artifact_ttl: Annotated[
        Boolean | None, Field(alias="disableMembersEditArtifactTTL")
    ] = None
    entity_profile_enabled: Annotated[
        Boolean | None, Field(alias="entityProfileEnabled")
    ] = None
    hidden: Boolean | None = None
    hide_activity_calendar: Annotated[
        Boolean | None, Field(alias="hideActivityCalendar")
    ] = None
    members_can_invite: Annotated[Boolean | None, Field(alias="membersCanInvite")] = (
        None
    )
    open_to_matching_org_email_domain_users: Annotated[
        Boolean | None, Field(alias="openToMatchingOrgEmailDomainUsers")
    ] = None
    typename__: Annotated[
        Literal["EntitySettingsInput"] | None, Field(alias="__typename")
    ] = "EntitySettingsInput"


class FailRunQueueItemInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    file_paths: Annotated[list[String] | None, Field(alias="filePaths")] = None
    info: JSONString | None = None
    message: String | None = None
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    stage: String | None = None
    typename__: Annotated[
        Literal["FailRunQueueItemInput"] | None, Field(alias="__typename")
    ] = "FailRunQueueItemInput"


class ForceCleanArtifactStorageStatsInput(Base):
    artifact_collection_i_ds: Annotated[list[ID], Field(alias="artifactCollectionIDs")]
    typename__: Annotated[
        Literal["ForceCleanArtifactStorageStatsInput"] | None, Field(alias="__typename")
    ] = "ForceCleanArtifactStorageStatsInput"


class ForceCleanRunStorageStatsInput(Base):
    project_i_ds: Annotated[list[Int], Field(alias="projectIDs")]
    typename__: Annotated[
        Literal["ForceCleanRunStorageStatsInput"] | None, Field(alias="__typename")
    ] = "ForceCleanRunStorageStatsInput"


class GenerateApiKeyInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    typename__: Annotated[
        Literal["GenerateApiKeyInput"] | None, Field(alias="__typename")
    ] = "GenerateApiKeyInput"


class GenerateLocalLicenseInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    contact_email: Annotated[String, Field(alias="contactEmail")]
    customer_name: Annotated[String, Field(alias="customerName")]
    exp_duration: Annotated[Int, Field(alias="expDuration")]
    flags: list[String]
    notes: String | None = None
    seats: Int
    storage_gigs: Annotated[Int, Field(alias="storageGigs")]
    teams: Int
    typename__: Annotated[
        Literal["GenerateLocalLicenseInput"] | None, Field(alias="__typename")
    ] = "GenerateLocalLicenseInput"


class GenericWebhookActionInput(Base):
    integration_id: Annotated[ID, Field(alias="integrationID")]
    request_payload: Annotated[JSONString | None, Field(alias="requestPayload")] = None
    typename__: Annotated[
        Literal["GenericWebhookActionInput"] | None, Field(alias="__typename")
    ] = "GenericWebhookActionInput"


class GroupAggregation(Base):
    custom: list[AggregationKey]
    default: Aggregation
    typename__: Annotated[
        Literal["GroupAggregation"] | None, Field(alias="__typename")
    ] = "GroupAggregation"


class HubSettingsInput(Base):
    disk: String | None = None
    docker_enabled: Annotated[Boolean | None, Field(alias="dockerEnabled")] = None
    image: String | None = None
    redis_enabled: Annotated[Boolean | None, Field(alias="redisEnabled")] = None
    repo: String | None = None
    typename__: Annotated[
        Literal["HubSettingsInput"] | None, Field(alias="__typename")
    ] = "HubSettingsInput"


class InsertGalleryDiscussionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    report_id: Annotated[ID, Field(alias="reportID")]
    send_email: Annotated[Boolean | None, Field(alias="sendEmail")] = None
    spec: String
    typename__: Annotated[
        Literal["InsertGalleryDiscussionInput"] | None, Field(alias="__typename")
    ] = "InsertGalleryDiscussionInput"


class InsertSecretInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    secret_name: Annotated[String, Field(alias="secretName")]
    secret_value: Annotated[String, Field(alias="secretValue")]
    typename__: Annotated[
        Literal["InsertSecretInput"] | None, Field(alias="__typename")
    ] = "InsertSecretInput"


class JobSetSelectorInput(Base):
    entity_name: Annotated[String, Field(alias="entityName")]
    job_set_name: Annotated[String, Field(alias="jobSetName")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    typename__: Annotated[
        Literal["JobSetSelectorInput"] | None, Field(alias="__typename")
    ] = "JobSetSelectorInput"


class LeaseJobSetItemInput(Base):
    agent_id: Annotated[ID, Field(alias="agentId")]
    job_set_id: Annotated[ID, Field(alias="jobSetId")]
    job_set_item_id: Annotated[ID, Field(alias="jobSetItemId")]
    typename__: Annotated[
        Literal["LeaseJobSetItemInput"] | None, Field(alias="__typename")
    ] = "LeaseJobSetItemInput"


class LinkArtifactInput(Base):
    aliases: list[ArtifactAliasInput] | None = None
    artifact_id: Annotated[ID | None, Field(alias="artifactID")] = None
    artifact_portfolio_id: Annotated[ID | None, Field(alias="artifactPortfolioID")] = (
        None
    )
    artifact_portfolio_name: Annotated[
        String | None, Field(alias="artifactPortfolioName")
    ] = None
    client_id: Annotated[ID | None, Field(alias="clientID")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    typename__: Annotated[
        Literal["LinkArtifactInput"] | None, Field(alias="__typename")
    ] = "LinkArtifactInput"


class LinkTeamToOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    organization_id: Annotated[ID, Field(alias="organizationID")]
    typename__: Annotated[
        Literal["LinkTeamToOrganizationInput"] | None, Field(alias="__typename")
    ] = "LinkTeamToOrganizationInput"


class MigrateOldHourOverageSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["MigrateOldHourOverageSubscriptionInput"] | None,
        Field(alias="__typename"),
    ] = "MigrateOldHourOverageSubscriptionInput"


class MigrateOldStorageSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["MigrateOldStorageSubscriptionInput"] | None, Field(alias="__typename")
    ] = "MigrateOldStorageSubscriptionInput"


class ModifyRunsInput(Base):
    add_tags: Annotated[list[String | None] | None, Field(alias="addTags")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    filters: JSONString | None = None
    ids: list[String | None] | None = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    remove_tags: Annotated[list[String | None] | None, Field(alias="removeTags")] = None
    typename__: Annotated[
        Literal["ModifyRunsInput"] | None, Field(alias="__typename")
    ] = "ModifyRunsInput"


class MoveArtifactSequenceInput(Base):
    artifact_sequence_id: Annotated[ID, Field(alias="artifactSequenceID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    destination_artifact_type_name: Annotated[
        String, Field(alias="destinationArtifactTypeName")
    ]
    typename__: Annotated[
        Literal["MoveArtifactSequenceInput"] | None, Field(alias="__typename")
    ] = "MoveArtifactSequenceInput"


class MoveProjectsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    destination_entity_name: Annotated[String, Field(alias="destinationEntityName")]
    notes: String | None = None
    owner_username: Annotated[String, Field(alias="ownerUsername")]
    project_names: Annotated[list[String] | None, Field(alias="projectNames")] = None
    source_entity_name: Annotated[String, Field(alias="sourceEntityName")]
    typename__: Annotated[
        Literal["MoveProjectsInput"] | None, Field(alias="__typename")
    ] = "MoveProjectsInput"


class MoveRunsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    destination_entity_name: Annotated[String, Field(alias="destinationEntityName")]
    destination_project_name: Annotated[String, Field(alias="destinationProjectName")]
    filters: JSONString
    source_entity_name: Annotated[String, Field(alias="sourceEntityName")]
    source_project_name: Annotated[String, Field(alias="sourceProjectName")]
    typename__: Annotated[
        Literal["MoveRunsInput"] | None, Field(alias="__typename")
    ] = "MoveRunsInput"


class MoveTagCategoryInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    new_entity_name: Annotated[String, Field(alias="newEntityName")]
    old_entity_name: Annotated[String, Field(alias="oldEntityName")]
    tag_category_name: Annotated[String, Field(alias="tagCategoryName")]
    typename__: Annotated[
        Literal["MoveTagCategoryInput"] | None, Field(alias="__typename")
    ] = "MoveTagCategoryInput"


class MoveTagInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    new_tag_category_name: Annotated[String, Field(alias="newTagCategoryName")]
    old_tag_category_name: Annotated[String, Field(alias="oldTagCategoryName")]
    tag_name: Annotated[String, Field(alias="tagName")]
    typename__: Annotated[Literal["MoveTagInput"] | None, Field(alias="__typename")] = (
        "MoveTagInput"
    )


class MoveViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    id: ID
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["MoveViewInput"] | None, Field(alias="__typename")
    ] = "MoveViewInput"


class NotificationActionInput(Base):
    integration_id: Annotated[ID, Field(alias="integrationID")]
    message: String | None = None
    severity: AlertSeverity | None = None
    title: String | None = None
    typename__: Annotated[
        Literal["NotificationActionInput"] | None, Field(alias="__typename")
    ] = "NotificationActionInput"


class NotifyScriptableRunAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    severity: AlertSeverity | None = "INFO"
    text: String
    title: String
    wait_duration: Annotated[Duration | None, Field(alias="waitDuration")] = None
    typename__: Annotated[
        Literal["NotifyScriptableRunAlertInput"] | None, Field(alias="__typename")
    ] = "NotifyScriptableRunAlertInput"


class PopFromRunQueueInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    launch_agent_id: Annotated[ID | None, Field(alias="launchAgentId")] = None
    project_name: Annotated[String, Field(alias="projectName")]
    queue_name: Annotated[String, Field(alias="queueName")]
    typename__: Annotated[
        Literal["PopFromRunQueueInput"] | None, Field(alias="__typename")
    ] = "PopFromRunQueueInput"


class ProjectIdentifierInput(Base):
    entity_name: Annotated[String | None, Field(alias="EntityName")] = None
    name: Annotated[String | None, Field(alias="Name")] = None
    typename__: Annotated[
        Literal["ProjectIdentifierInput"] | None, Field(alias="__typename")
    ] = "ProjectIdentifierInput"


class ProjectSpecifier(Base):
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["ProjectSpecifier"] | None, Field(alias="__typename")
    ] = "ProjectSpecifier"


class PublishBenchmarkRunInput(Base):
    benchmark_entity_name: Annotated[
        String | None, Field(alias="benchmarkEntityName")
    ] = None
    benchmark_name: Annotated[String | None, Field(alias="benchmarkName")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    is_code_hidden: Annotated[Boolean | None, Field(alias="isCodeHidden")] = None
    typename__: Annotated[
        Literal["PublishBenchmarkRunInput"] | None, Field(alias="__typename")
    ] = "PublishBenchmarkRunInput"


class PurgeUserInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String
    username: String
    typename__: Annotated[
        Literal["PurgeUserInput"] | None, Field(alias="__typename")
    ] = "PurgeUserInput"


class PushToRunQueueByNameInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    priority: Int | None = None
    project_name: Annotated[String, Field(alias="projectName")]
    queue_name: Annotated[String, Field(alias="queueName")]
    run_spec: Annotated[JSONString, Field(alias="runSpec")]
    template_variable_values: Annotated[
        JSONString | None, Field(alias="templateVariableValues")
    ] = None
    typename__: Annotated[
        Literal["PushToRunQueueByNameInput"] | None, Field(alias="__typename")
    ] = "PushToRunQueueByNameInput"


class PushToRunQueueInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    priority: Int | None = None
    queue_id: Annotated[ID, Field(alias="queueID")]
    run_spec: Annotated[JSONString, Field(alias="runSpec")]
    template_variable_values: Annotated[
        JSONString | None, Field(alias="templateVariableValues")
    ] = None
    typename__: Annotated[
        Literal["PushToRunQueueInput"] | None, Field(alias="__typename")
    ] = "PushToRunQueueInput"


class QueryTagInput(Base):
    tag_category_name: Annotated[String | None, Field(alias="tagCategoryName")] = None
    tag_name: Annotated[String, Field(alias="tagName")]
    typename__: Annotated[
        Literal["QueryTagInput"] | None, Field(alias="__typename")
    ] = "QueryTagInput"


class QueueJobActionInput(Base):
    queue_id: Annotated[ID, Field(alias="queueID")]
    template: JSONString
    typename__: Annotated[
        Literal["QueueJobActionInput"] | None, Field(alias="__typename")
    ] = "QueueJobActionInput"


class RateLimitsInput(Base):
    filestream: Int | None = None
    filestream_count: Annotated[Int | None, Field(alias="filestreamCount")] = None
    filestream_size: Annotated[Int | None, Field(alias="filestreamSize")] = None
    graphql: Int | None = None
    sdk_graphql: Annotated[Int | None, Field(alias="sdkGraphql")] = None
    typename__: Annotated[
        Literal["RateLimitsInput"] | None, Field(alias="__typename")
    ] = "RateLimitsInput"


class RemoveProtectedAliasesInput(Base):
    admin_type: Annotated[WorkflowsAdminType, Field(alias="adminType")]
    aliases: list[String]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    typename__: Annotated[
        Literal["RemoveProtectedAliasesInput"] | None, Field(alias="__typename")
    ] = "RemoveProtectedAliasesInput"


class RemoveUserFromOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    user_name: Annotated[String, Field(alias="userName")]
    typename__: Annotated[
        Literal["RemoveUserFromOrganizationInput"] | None, Field(alias="__typename")
    ] = "RemoveUserFromOrganizationInput"


class RenameProjectInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    new_project_name: Annotated[String, Field(alias="newProjectName")]
    old_project_name: Annotated[String, Field(alias="oldProjectName")]
    typename__: Annotated[
        Literal["RenameProjectInput"] | None, Field(alias="__typename")
    ] = "RenameProjectInput"


class ResendEmailVerificationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String
    typename__: Annotated[
        Literal["ResendEmailVerificationInput"] | None, Field(alias="__typename")
    ] = "ResendEmailVerificationInput"


class ResetPasswordInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String
    typename__: Annotated[
        Literal["ResetPasswordInput"] | None, Field(alias="__typename")
    ] = "ResetPasswordInput"


class RetryStripeOpenInvoicesByOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["RetryStripeOpenInvoicesByOrganizationInput"] | None,
        Field(alias="__typename"),
    ] = "RetryStripeOpenInvoicesByOrganizationInput"


class RevokeAccessTokenEmailInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String
    token: String
    typename__: Annotated[
        Literal["RevokeAccessTokenEmailInput"] | None, Field(alias="__typename")
    ] = "RevokeAccessTokenEmailInput"


class RevokeAccessTokenInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    token: String
    typename__: Annotated[
        Literal["RevokeAccessTokenInput"] | None, Field(alias="__typename")
    ] = "RevokeAccessTokenInput"


class RevokeClientInput(Base):
    client_id: Annotated[String, Field(alias="clientId")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    typename__: Annotated[
        Literal["RevokeClientInput"] | None, Field(alias="__typename")
    ] = "RevokeClientInput"


class RewindRunInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    metric_name: Annotated[String, Field(alias="metricName")]
    metric_value: Annotated[Float, Field(alias="metricValue")]
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    run_name: Annotated[String, Field(alias="runName")]
    typename__: Annotated[
        Literal["RewindRunInput"] | None, Field(alias="__typename")
    ] = "RewindRunInput"


class SendRequestOrgEmailDomainVerificationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    typename__: Annotated[
        Literal["SendRequestOrgEmailDomainVerificationInput"] | None,
        Field(alias="__typename"),
    ] = "SendRequestOrgEmailDomainVerificationInput"


class SetDismissedBannerInput(Base):
    banner_id: Annotated[ID, Field(alias="bannerID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["SetDismissedBannerInput"] | None, Field(alias="__typename")
    ] = "SetDismissedBannerInput"


class SetTagColorInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    color_index: Annotated[Int | None, Field(alias="colorIndex")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    tag_name: Annotated[String, Field(alias="tagName")]
    typename__: Annotated[
        Literal["SetTagColorInput"] | None, Field(alias="__typename")
    ] = "SetTagColorInput"


class StarViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["StarViewInput"] | None, Field(alias="__typename")
    ] = "StarViewInput"


class StartExperimentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["StartExperimentInput"] | None, Field(alias="__typename")
    ] = "StartExperimentInput"


class StopExperimentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["StopExperimentInput"] | None, Field(alias="__typename")
    ] = "StopExperimentInput"


class StopRunInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[Literal["StopRunInput"] | None, Field(alias="__typename")] = (
        "StopRunInput"
    )


class StorageBucketInfoInput(Base):
    aws_external_id: Annotated[String | None, Field(alias="awsExternalID")] = None
    azure_client_id: Annotated[String | None, Field(alias="azureClientID")] = None
    azure_tenant_id: Annotated[String | None, Field(alias="azureTenantID")] = None
    kms_key_id: Annotated[String | None, Field(alias="kmsKeyID")] = None
    name: String
    organization_id: Annotated[ID | None, Field(alias="organizationID")] = None
    path: String | None = None
    provider: CloudProvider
    typename__: Annotated[
        Literal["StorageBucketInfoInput"] | None, Field(alias="__typename")
    ] = "StorageBucketInfoInput"


class SubmitBenchmarkRunInput(Base):
    benchmark_entity_name: Annotated[
        String | None, Field(alias="benchmarkEntityName")
    ] = None
    benchmark_name: Annotated[String | None, Field(alias="benchmarkName")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    is_code_hidden: Annotated[Boolean | None, Field(alias="isCodeHidden")] = None
    typename__: Annotated[
        Literal["SubmitBenchmarkRunInput"] | None, Field(alias="__typename")
    ] = "SubmitBenchmarkRunInput"


class SubmitFCNewsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    details: String | None = None
    email: String
    name: String
    url: String
    typename__: Annotated[
        Literal["SubmitFCNewsInput"] | None, Field(alias="__typename")
    ] = "SubmitFCNewsInput"


class TagInput(Base):
    attributes: JSONString | None = None
    tag_category_name: Annotated[String | None, Field(alias="tagCategoryName")] = None
    tag_name: Annotated[String, Field(alias="tagName")]
    typename__: Annotated[Literal["TagInput"] | None, Field(alias="__typename")] = (
        "TagInput"
    )


class TestGenericWebhookIntegrationInput(Base):
    access_token_ref: Annotated[String | None, Field(alias="accessTokenRef")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    request_payload: Annotated[JSONString | None, Field(alias="requestPayload")] = None
    secret_ref: Annotated[String | None, Field(alias="secretRef")] = None
    url_endpoint: Annotated[String, Field(alias="urlEndpoint")]
    typename__: Annotated[
        Literal["TestGenericWebhookIntegrationInput"] | None, Field(alias="__typename")
    ] = "TestGenericWebhookIntegrationInput"


class TimeWindow(Base):
    end: DateTime
    start: DateTime
    typename__: Annotated[Literal["TimeWindow"] | None, Field(alias="__typename")] = (
        "TimeWindow"
    )


class TriggerParquetExportInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    run_id: Annotated[ID, Field(alias="runId")]
    typename__: Annotated[
        Literal["TriggerParquetExportInput"] | None, Field(alias="__typename")
    ] = "TriggerParquetExportInput"


class TriggeredActionConfig(Base):
    generic_webhook_action_input: Annotated[
        GenericWebhookActionInput | None, Field(alias="genericWebhookActionInput")
    ] = None
    notification_action_input: Annotated[
        NotificationActionInput | None, Field(alias="notificationActionInput")
    ] = None
    queue_job_action_input: Annotated[
        QueueJobActionInput | None, Field(alias="queueJobActionInput")
    ] = None
    typename__: Annotated[
        Literal["TriggeredActionConfig"] | None, Field(alias="__typename")
    ] = "TriggeredActionConfig"


class UndeleteRunsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    filters: JSONString
    project_name: Annotated[String, Field(alias="projectName")]
    typename__: Annotated[
        Literal["UndeleteRunsInput"] | None, Field(alias="__typename")
    ] = "UndeleteRunsInput"


class UndeleteUserInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["UndeleteUserInput"] | None, Field(alias="__typename")
    ] = "UndeleteUserInput"


class UnlinkArtifactInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    artifact_portfolio_id: Annotated[ID, Field(alias="artifactPortfolioID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    typename__: Annotated[
        Literal["UnlinkArtifactInput"] | None, Field(alias="__typename")
    ] = "UnlinkArtifactInput"


class UnstarViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["UnstarViewInput"] | None, Field(alias="__typename")
    ] = "UnstarViewInput"


class UpdateAccessTokenInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    email: String | None = None
    preview_url: Annotated[String | None, Field(alias="previewURL")] = None
    token: String
    username: String | None = None
    typename__: Annotated[
        Literal["UpdateAccessTokenInput"] | None, Field(alias="__typename")
    ] = "UpdateAccessTokenInput"


class UpdateAccessTokenProjectsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    projects: list[ProjectSpecifier]
    token: String
    typename__: Annotated[
        Literal["UpdateAccessTokenProjectsInput"] | None, Field(alias="__typename")
    ] = "UpdateAccessTokenProjectsInput"


class UpdateArtifactEntityTTLInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    ttl_duration_seconds: Annotated[Int64, Field(alias="ttlDurationSeconds")]
    typename__: Annotated[
        Literal["UpdateArtifactEntityTTLInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactEntityTTLInput"


class UpdateArtifactInput(Base):
    aliases: list[ArtifactAliasInput] | None = None
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    labels: JSONString | None = None
    metadata: JSONString | None = None
    tags_to_add: Annotated[list[TagInput] | None, Field(alias="tagsToAdd")] = None
    tags_to_delete: Annotated[list[TagInput] | None, Field(alias="tagsToDelete")] = None
    ttl_duration_seconds: Annotated[Int64 | None, Field(alias="ttlDurationSeconds")] = (
        None
    )
    typename__: Annotated[
        Literal["UpdateArtifactInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactInput"


class UpdateArtifactManifestInput(Base):
    artifact_manifest_id: Annotated[ID, Field(alias="artifactManifestID")]
    base_artifact_id: Annotated[ID | None, Field(alias="baseArtifactID")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    digest: String | None = None
    typename__: Annotated[
        Literal["UpdateArtifactManifestInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactManifestInput"


class UpdateArtifactPortfolioInput(Base):
    artifact_portfolio_id: Annotated[ID, Field(alias="artifactPortfolioID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    name: String | None = None
    typename__: Annotated[
        Literal["UpdateArtifactPortfolioInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactPortfolioInput"


class UpdateArtifactSequenceInput(Base):
    artifact_sequence_id: Annotated[ID, Field(alias="artifactSequenceID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    name: String | None = None
    typename__: Annotated[
        Literal["UpdateArtifactSequenceInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactSequenceInput"


class UpdateArtifactTypeInput(Base):
    artifact_type_id: Annotated[ID, Field(alias="artifactTypeID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    typename__: Annotated[
        Literal["UpdateArtifactTypeInput"] | None, Field(alias="__typename")
    ] = "UpdateArtifactTypeInput"


class UpdateBenchmarkRunInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    details: JSONString | None = None
    id: ID
    state: String | None = None
    typename__: Annotated[
        Literal["UpdateBenchmarkRunInput"] | None, Field(alias="__typename")
    ] = "UpdateBenchmarkRunInput"


class UpdateCustomChartInput(Base):
    access: String | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity: String
    name: String
    spec: JSONString | None = None
    type: String | None = None
    typename__: Annotated[
        Literal["UpdateCustomChartInput"] | None, Field(alias="__typename")
    ] = "UpdateCustomChartInput"


class UpdateCustomerDefaultPaymentMethodInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    typename__: Annotated[
        Literal["UpdateCustomerDefaultPaymentMethodInput"] | None,
        Field(alias="__typename"),
    ] = "UpdateCustomerDefaultPaymentMethodInput"


class UpdateCustomerPaymentMethodInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    typename__: Annotated[
        Literal["UpdateCustomerPaymentMethodInput"] | None, Field(alias="__typename")
    ] = "UpdateCustomerPaymentMethodInput"


class UpdateDefaultResourceConfigInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    config: JSONString
    default_resource_config_id: Annotated[ID, Field(alias="defaultResourceConfigID")]
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    resource: String | None = None
    template_variables: Annotated[
        JSONString | None, Field(alias="templateVariables")
    ] = None
    typename__: Annotated[
        Literal["UpdateDefaultResourceConfigInput"] | None, Field(alias="__typename")
    ] = "UpdateDefaultResourceConfigInput"


class UpdateDiscussionCommentInput(Base):
    body: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_comment_id: Annotated[ID, Field(alias="discussionCommentID")]
    inline_comment_details: Annotated[
        JSONString | None, Field(alias="inlineCommentDetails")
    ] = None
    view_id: Annotated[ID | None, Field(alias="viewID")] = None
    typename__: Annotated[
        Literal["UpdateDiscussionCommentInput"] | None, Field(alias="__typename")
    ] = "UpdateDiscussionCommentInput"


class UpdateDiscussionThreadInput(Base):
    body: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    discussion_thread_id: Annotated[ID, Field(alias="discussionThreadID")]
    typename__: Annotated[
        Literal["UpdateDiscussionThreadInput"] | None, Field(alias="__typename")
    ] = "UpdateDiscussionThreadInput"


class UpdateEntityInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    code_saving_enabled: Annotated[Boolean | None, Field(alias="codeSavingEnabled")] = (
        None
    )
    default_access: Annotated[String | None, Field(alias="defaultAccess")] = None
    entity: String
    is_paid: Annotated[Boolean | None, Field(alias="isPaid")] = None
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    private_only: Annotated[Boolean | None, Field(alias="privateOnly")] = None
    rate_limits: Annotated[RateLimitsInput | None, Field(alias="rateLimits")] = None
    settings: EntitySettingsInput | None = None
    typename__: Annotated[
        Literal["UpdateEntityInput"] | None, Field(alias="__typename")
    ] = "UpdateEntityInput"


class UpdateExperimentInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    enrollment_period: Annotated[Int, Field(alias="enrollmentPeriod")]
    experiment_type: Annotated[ExperimentType, Field(alias="experimentType")]
    id: ID
    metadata: JSONString | None = None
    name: String
    observational_unit: Annotated[ObservationalUnit, Field(alias="observationalUnit")]
    sample_size: Annotated[Int, Field(alias="sampleSize")]
    variants: list[VariantInput]
    typename__: Annotated[
        Literal["UpdateExperimentInput"] | None, Field(alias="__typename")
    ] = "UpdateExperimentInput"


class UpdateGenericWebhookIntegrationInput(Base):
    access_token_ref: Annotated[String | None, Field(alias="accessTokenRef")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    name: String | None = None
    secret_ref: Annotated[String | None, Field(alias="secretRef")] = None
    url_endpoint: Annotated[String | None, Field(alias="urlEndpoint")] = None
    typename__: Annotated[
        Literal["UpdateGenericWebhookIntegrationInput"] | None,
        Field(alias="__typename"),
    ] = "UpdateGenericWebhookIntegrationInput"


class UpdateGlueTaskInput(Base):
    arguments: JSONString | None = None
    checkpoint: JSONString | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    name: String | None = None
    status: String | None = None
    strategy_metadata: Annotated[String | None, Field(alias="strategyMetadata")] = None
    strategy_type: Annotated[String | None, Field(alias="strategyType")] = None
    typename__: Annotated[
        Literal["UpdateGlueTaskInput"] | None, Field(alias="__typename")
    ] = "UpdateGlueTaskInput"


class UpdateLaunchAgentInput(Base):
    agent_status: Annotated[String | None, Field(alias="agentStatus")] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    heartbeat_at: Annotated[DateTime | None, Field(alias="heartbeatAt")] = None
    launch_agent_id: Annotated[ID, Field(alias="launchAgentId")]
    name: String | None = None
    run_queues: Annotated[list[ID] | None, Field(alias="runQueues")] = None
    stop_polling: Annotated[Boolean | None, Field(alias="stopPolling")] = None
    typename__: Annotated[
        Literal["UpdateLaunchAgentInput"] | None, Field(alias="__typename")
    ] = "UpdateLaunchAgentInput"


class UpdateLocalLicenseInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    notes: String | None = None
    typename__: Annotated[
        Literal["UpdateLocalLicenseInput"] | None, Field(alias="__typename")
    ] = "UpdateLocalLicenseInput"


class UpdateMemberInput(Base):
    admin: Boolean | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    role: String | None = None
    user: ID
    typename__: Annotated[
        Literal["UpdateMemberInput"] | None, Field(alias="__typename")
    ] = "UpdateMemberInput"


class UpdateOrganizationBillingUserInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    new_billing_user: Annotated[ID, Field(alias="newBillingUser")]
    organization_id: Annotated[ID, Field(alias="organizationId")]
    typename__: Annotated[
        Literal["UpdateOrganizationBillingUserInput"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationBillingUserInput"


class UpdateOrganizationInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    flags: JSONString | None = None
    name: String | None = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    typename__: Annotated[
        Literal["UpdateOrganizationInput"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationInput"


class UpdateOrganizationPrivacySettingsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    code_saving_disabled: Annotated[
        Boolean | None, Field(alias="codeSavingDisabled")
    ] = None
    disable_magic_link_sharing: Annotated[
        Boolean | None, Field(alias="disableMagicLinkSharing")
    ] = None
    hidden: Boolean | None = None
    only_admins_can_invite: Annotated[
        Boolean | None, Field(alias="onlyAdminsCanInvite")
    ] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    private_only: Annotated[Boolean | None, Field(alias="privateOnly")] = None
    restrict_matching_org_email_domain_users: Annotated[
        Boolean | None, Field(alias="restrictMatchingOrgEmailDomainUsers")
    ] = None
    typename__: Annotated[
        Literal["UpdateOrganizationPrivacySettingsInput"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationPrivacySettingsInput"


class UpdateOrganizationSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    create_stripe_subscription: Annotated[
        Boolean | None, Field(alias="createStripeSubscription")
    ] = False
    expires_at: Annotated[DateTime | None, Field(alias="expiresAt")] = None
    organization_subscription_id: Annotated[
        ID, Field(alias="organizationSubscriptionID")
    ]
    plan_id: Annotated[ID | None, Field(alias="planID")] = None
    privileges: JSONString | None = None
    seats: Int | None = None
    status: OrganizationSubscriptionStatus | None = None
    stripe_subscription_id: Annotated[
        String | None, Field(alias="stripeSubscriptionId")
    ] = None
    type: OrganizationSubscriptionType | None = None
    typename__: Annotated[
        Literal["UpdateOrganizationSubscriptionInput"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationSubscriptionInput"


class UpdateOrganizationSubscriptionSeatsInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    seats: Int
    typename__: Annotated[
        Literal["UpdateOrganizationSubscriptionSeatsInput"] | None,
        Field(alias="__typename"),
    ] = "UpdateOrganizationSubscriptionSeatsInput"


class UpdateOrganizationUserInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationId")]
    user_name: Annotated[String, Field(alias="userName")]
    user_org_role: Annotated[String, Field(alias="userOrgRole")]
    typename__: Annotated[
        Literal["UpdateOrganizationUserInput"] | None, Field(alias="__typename")
    ] = "UpdateOrganizationUserInput"


class UpdateProjectMemberInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    project_id: Annotated[ID, Field(alias="projectId")]
    user_id: Annotated[ID, Field(alias="userId")]
    user_project_role: Annotated[String, Field(alias="userProjectRole")]
    typename__: Annotated[
        Literal["UpdateProjectMemberInput"] | None, Field(alias="__typename")
    ] = "UpdateProjectMemberInput"


class UpdateRampThresholdInput(Base):
    check_id: Annotated[String, Field(alias="checkId")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    setting: String
    store: String
    threshold: Float
    typename__: Annotated[
        Literal["UpdateRampThresholdInput"] | None, Field(alias="__typename")
    ] = "UpdateRampThresholdInput"


class UpdateRoleInput(Base):
    description: String | None = None
    inherited_from: Annotated[String | None, Field(alias="inheritedFrom")] = None
    name: String | None = None
    role_id: Annotated[ID, Field(alias="roleID")]
    typename__: Annotated[
        Literal["UpdateRoleInput"] | None, Field(alias="__typename")
    ] = "UpdateRoleInput"


class UpdateRunQueueInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    default_resource_config_id: Annotated[
        ID | None, Field(alias="defaultResourceConfigID")
    ] = None
    external_links: Annotated[JSONString | None, Field(alias="externalLinks")] = None
    prioritization_mode: Annotated[
        RunQueuePrioritizationMode | None, Field(alias="prioritizationMode")
    ] = None
    queue_id: Annotated[ID, Field(alias="queueID")]
    typename__: Annotated[
        Literal["UpdateRunQueueInput"] | None, Field(alias="__typename")
    ] = "UpdateRunQueueInput"


class UpdateRunQueueItemWarningInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    file_paths: Annotated[list[String] | None, Field(alias="filePaths")] = None
    message: String
    run_queue_item_id: Annotated[ID, Field(alias="runQueueItemId")]
    stage: String
    typename__: Annotated[
        Literal["UpdateRunQueueItemWarningInput"] | None, Field(alias="__typename")
    ] = "UpdateRunQueueItemWarningInput"


class UpdateStoppedRunAlertInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    minimum_run_duration: Annotated[
        Duration | None, Field(alias="minimumRunDuration")
    ] = None
    typename__: Annotated[
        Literal["UpdateStoppedRunAlertInput"] | None, Field(alias="__typename")
    ] = "UpdateStoppedRunAlertInput"


class UpdateSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    gpu_enabled: Annotated[DateTime | None, Field(alias="gpuEnabled")] = None
    hub_preset: Annotated[String | None, Field(alias="hubPreset")] = None
    hub_settings: Annotated[HubSettingsInput | None, Field(alias="hubSettings")] = None
    private_projects: Annotated[Boolean | None, Field(alias="privateProjects")] = None
    teams_enabled: Annotated[Boolean | None, Field(alias="teamsEnabled")] = None
    typename__: Annotated[
        Literal["UpdateSubscriptionInput"] | None, Field(alias="__typename")
    ] = "UpdateSubscriptionInput"


class UpdateTagCategoryInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    new_tag_category_name: Annotated[
        String | None, Field(alias="newTagCategoryName")
    ] = None
    old_tag_category_name: Annotated[String, Field(alias="oldTagCategoryName")]
    typename__: Annotated[
        Literal["UpdateTagCategoryInput"] | None, Field(alias="__typename")
    ] = "UpdateTagCategoryInput"


class UpdateTagInput(Base):
    attributes: JSONString | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationID")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    new_tag_name: Annotated[String | None, Field(alias="newTagName")] = None
    old_tag_name: Annotated[String, Field(alias="oldTagName")]
    tag_category_name: Annotated[String, Field(alias="tagCategoryName")]
    typename__: Annotated[
        Literal["UpdateTagInput"] | None, Field(alias="__typename")
    ] = "UpdateTagInput"


class UpdateUserEmailInput(Base):
    id: ID
    type: EmailType | None = None
    typename__: Annotated[
        Literal["UpdateUserEmailInput"] | None, Field(alias="__typename")
    ] = "UpdateUserEmailInput"


class UpdateUserInput(Base):
    admin: Boolean | None = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    code: String | None = None
    default_entity: Annotated[String | None, Field(alias="defaultEntity")] = None
    default_framework: Annotated[String | None, Field(alias="defaultFramework")] = None
    gallery_visited: Annotated[Boolean | None, Field(alias="galleryVisited")] = None
    hide_teams_from_public: Annotated[
        Boolean | None, Field(alias="hideTeamsFromPublic")
    ] = None
    id: ID | None = None
    name: String | None = None
    onboarding_hidden: Annotated[Boolean | None, Field(alias="onboardingHidden")] = None
    password: String | None = None
    photo_url: Annotated[String | None, Field(alias="photoUrl")] = None
    primary_email: Annotated[String | None, Field(alias="primaryEmail")] = None
    private: Boolean | None = None
    settings_visited: Annotated[Boolean | None, Field(alias="settingsVisited")] = None
    user_info: Annotated[JSONString | None, Field(alias="userInfo")] = None
    typename__: Annotated[
        Literal["UpdateUserInput"] | None, Field(alias="__typename")
    ] = "UpdateUserInput"


class UpdateUserRoleInput(Base):
    account_type: Annotated[String, Field(alias="accountType")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["UpdateUserRoleInput"] | None, Field(alias="__typename")
    ] = "UpdateUserRoleInput"


class UpgradeCustomerSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    payment_method: Annotated[String, Field(alias="paymentMethod")]
    plan_id: Annotated[ID, Field(alias="planID")]
    quantity: Int
    typename__: Annotated[
        Literal["UpgradeCustomerSubscriptionInput"] | None, Field(alias="__typename")
    ] = "UpgradeCustomerSubscriptionInput"


class UploadPanelInput(Base):
    author: String
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String
    entity_name: Annotated[String, Field(alias="entityName")]
    panel_id: Annotated[String, Field(alias="panelID")]
    redirect_url: Annotated[String, Field(alias="redirectURL")]
    title: String
    view_id: Annotated[ID, Field(alias="viewID")]
    typename__: Annotated[
        Literal["UploadPanelInput"] | None, Field(alias="__typename")
    ] = "UploadPanelInput"


class UploadPartsInput(Base):
    hex_md5: Annotated[String, Field(alias="hexMD5")]
    part_number: Annotated[Int64, Field(alias="partNumber")]
    typename__: Annotated[
        Literal["UploadPartsInput"] | None, Field(alias="__typename")
    ] = "UploadPartsInput"


class UpsertBucketInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    commit: String | None = None
    config: JSONString | None = None
    debug: Boolean | None = None
    description: String | None = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    framework: String | None = None
    group_name: Annotated[String | None, Field(alias="groupName")] = None
    host: String | None = None
    id: String | None = None
    job_program: Annotated[String | None, Field(alias="jobProgram")] = None
    job_repo: Annotated[String | None, Field(alias="jobRepo")] = None
    job_type: Annotated[String | None, Field(alias="jobType")] = None
    model_name: Annotated[String | None, Field(alias="modelName")] = None
    name: String | None = None
    notes: String | None = None
    run_queue_item_id: Annotated[ID | None, Field(alias="runQueueItemId")] = None
    state: String | None = None
    summary_metrics: Annotated[JSONString | None, Field(alias="summaryMetrics")] = None
    sweep: String | None = None
    tags: list[String | None] | None = None
    typename__: Annotated[
        Literal["UpsertBucketInput"] | None, Field(alias="__typename")
    ] = "UpsertBucketInput"


class UpsertModelInput(Base):
    access: String | None = None
    allow_all_artifact_types_in_registry: Annotated[
        Boolean | None, Field(alias="allowAllArtifactTypesInRegistry")
    ] = None
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    docker_image: Annotated[String | None, Field(alias="dockerImage")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    framework: String | None = None
    id: String | None = None
    is_benchmark: Annotated[Boolean | None, Field(alias="isBenchmark")] = None
    is_published: Annotated[Boolean | None, Field(alias="isPublished")] = None
    linked_benchmark: Annotated[ID | None, Field(alias="linkedBenchmark")] = None
    name: String | None = None
    owner: ID | None = None
    rate_limits: Annotated[RateLimitsInput | None, Field(alias="rateLimits")] = None
    repo: String | None = None
    views: JSONString | None = None
    typename__: Annotated[
        Literal["UpsertModelInput"] | None, Field(alias="__typename")
    ] = "UpsertModelInput"


class UpsertRunGroupInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    new_name: Annotated[String | None, Field(alias="newName")] = None
    notes: String | None = None
    project_name: Annotated[String, Field(alias="projectName")]
    tags: list[String] | None = None
    typename__: Annotated[
        Literal["UpsertRunGroupInput"] | None, Field(alias="__typename")
    ] = "UpsertRunGroupInput"


class UpsertRunQueueInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    external_links: Annotated[JSONString | None, Field(alias="externalLinks")] = None
    prioritization_mode: Annotated[
        RunQueuePrioritizationMode | None, Field(alias="prioritizationMode")
    ] = None
    project_name: Annotated[String, Field(alias="projectName")]
    queue_name: Annotated[String, Field(alias="queueName")]
    resource_config: Annotated[JSONString, Field(alias="resourceConfig")]
    resource_type: Annotated[String, Field(alias="resourceType")]
    template_variables: Annotated[
        JSONString | None, Field(alias="templateVariables")
    ] = None
    typename__: Annotated[
        Literal["UpsertRunQueueInput"] | None, Field(alias="__typename")
    ] = "UpsertRunQueueInput"


class UpsertSharedViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    description: String | None = None
    entity_name: Annotated[String, Field(alias="entityName")]
    name: String
    spec: String
    type: String
    typename__: Annotated[
        Literal["UpsertSharedViewInput"] | None, Field(alias="__typename")
    ] = "UpsertSharedViewInput"


class UpsertSweepInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    config: String | None = None
    controller: JSONString | None = None
    description: String | None = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    id: ID | None = None
    launch_scheduler: Annotated[JSONString | None, Field(alias="launchScheduler")] = (
        None
    )
    prior_runs_filters: Annotated[
        JSONString | None, Field(alias="priorRunsFilters")
    ] = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    scheduler: JSONString | None = None
    state: String | None = None
    template_variable_values: Annotated[
        JSONString | None, Field(alias="templateVariableValues")
    ] = None
    typename__: Annotated[
        Literal["UpsertSweepInput"] | None, Field(alias="__typename")
    ] = "UpsertSweepInput"


class UpsertViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    cover_url: Annotated[String | None, Field(alias="coverUrl")] = None
    created_using: Annotated[ViewSource | None, Field(alias="createdUsing")] = None
    description: String | None = None
    display_name: Annotated[String | None, Field(alias="displayName")] = None
    entity_name: Annotated[String | None, Field(alias="entityName")] = None
    id: ID | None = None
    locked: Boolean | None = None
    name: String | None = None
    parent_id: Annotated[ID | None, Field(alias="parentId")] = None
    preview_url: Annotated[String | None, Field(alias="previewUrl")] = None
    project_name: Annotated[String | None, Field(alias="projectName")] = None
    showcased_at: Annotated[DateTime | None, Field(alias="showcasedAt")] = None
    spec: String | None = None
    spec_is_gzipped: Annotated[Boolean | None, Field(alias="specIsGzipped")] = None
    type: String | None = None
    typename__: Annotated[
        Literal["UpsertViewInput"] | None, Field(alias="__typename")
    ] = "UpsertViewInput"


class UseArtifactInput(Base):
    artifact_id: Annotated[ID, Field(alias="artifactID")]
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    entity_name: Annotated[String, Field(alias="entityName")]
    project_name: Annotated[String, Field(alias="projectName")]
    run_name: Annotated[String, Field(alias="runName")]
    used_as: Annotated[String | None, Field(alias="usedAs")] = None
    typename__: Annotated[
        Literal["UseArtifactInput"] | None, Field(alias="__typename")
    ] = "UseArtifactInput"


class VariantInput(Base):
    allocation: Int
    bucket: Int
    description: String
    typename__: Annotated[Literal["VariantInput"] | None, Field(alias="__typename")] = (
        "VariantInput"
    )


class ViewViewInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    id: ID
    typename__: Annotated[
        Literal["ViewViewInput"] | None, Field(alias="__typename")
    ] = "ViewViewInput"


class UpgradeTrialSubscriptionInput(Base):
    client_mutation_id: Annotated[String | None, Field(alias="clientMutationId")] = None
    organization_id: Annotated[ID, Field(alias="organizationID")]
    plan_id: Annotated[ID, Field(alias="planID")]
    typename__: Annotated[
        Literal["upgradeTrialSubscriptionInput"] | None, Field(alias="__typename")
    ] = "upgradeTrialSubscriptionInput"


AlertCondition: TypeAlias = Union[
    "FinishedRunCondition",
    "ScriptableRunCondition",
    "StoppedRunCondition",
]


ClientIDMappingEntry: TypeAlias = Union[
    "Artifact",
    "ArtifactSequence",
]


Initiator: TypeAlias = Union[
    "Run",
    "User",
]


TagGroup: TypeAlias = Entity


TaggedObject: TypeAlias = Union[
    "Artifact",
    "ArtifactPortfolio",
    "ArtifactSequence",
]


TriggerScope: TypeAlias = Union[
    "ArtifactPortfolio",
    "ArtifactSequence",
    "Project",
]


TriggeredAction: TypeAlias = Union[
    "GenericWebhookTriggeredAction",
    "NotificationTriggeredAction",
    "QueueJobTriggeredAction",
]


TriggeringCondition: TypeAlias = FilterEventTriggeringCondition
